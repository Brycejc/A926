!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AAC_AUDIO_ENCODER	main.c	/^    AAC_AUDIO_ENCODER,$/;"	e	enum:__anon46	file:
ACLOCAL	curl/Makefile	/^ACLOCAL = ${SHELL} \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/missing aclocal-1.16$/;"	m
ACLOCAL_M4	curl/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
AEMaxTime	NET_DEV_STRUCT.H	/^    DWORD AEMaxTime;		\/\/自动曝光最大曝光时间,同AEMinTime,且应>=AEMinTime$/;"	m	struct:_NET_DEV_CAMERAPARAM
AEMinTime	NET_DEV_STRUCT.H	/^    DWORD AEMinTime;		\/\/自动曝光最小曝光时间,自动快门时有效：0：不限,1：1\/25S，2：1\/50S，3：1\/100S，4: 1\/200S，5：1\/500S，6：1\/1000S，7：1\/2000S，8：1\/5000S，9：1\/10000S$/;"	m	struct:_NET_DEV_CAMERAPARAM
AGain	NET_DEV_STRUCT.H	/^    DWORD AGain;		\/\/自动增益(0-255)$/;"	m	struct:_NET_DEV_CAMERAPARAM
AMTAR	curl/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_DEFAULT_VERBOSITY	curl/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_V_GEN	curl/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	curl/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	curl/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
APIENTRY	BaseType.h	169;"	d
APIENTRY	BaseType.h	176;"	d
APIPRIVATE	BaseType.h	170;"	d
APIPRIVATE	BaseType.h	177;"	d
APs	NET_DEV_STRUCT.H	/^    NET_DEV_WIFI_AP APs[NET_DEV_MAX_WIFI_AP_NUM];$/;"	m	struct:_NET_DEV_WIFI_APSET
AR	curl/Makefile	/^AR = \/usr\/bin\/ar$/;"	m
AR_FLAGS	curl/Makefile	/^AR_FLAGS = cr$/;"	m
AS	curl/Makefile	/^AS = as$/;"	m
AUTOCONF	curl/Makefile	/^AUTOCONF = ${SHELL} \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/missing autoconf$/;"	m
AUTOHEADER	curl/Makefile	/^AUTOHEADER = ${SHELL} \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/missing autoheader$/;"	m
AUTOMAKE	curl/Makefile	/^AUTOMAKE = ${SHELL} \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/missing automake-1.16$/;"	m
AWK	curl/Makefile	/^AWK = gawk$/;"	m
AbsQp	NET_DEV_STRUCT.H	/^    DWORD AbsQp;		\/\/0 相对质量 1 绝对质量$/;"	m	struct:_NET_DEV_ROI
Account	NET_DEV_STRUCT.H	/^    CHAR Account[NET_DEV_USERNAME_LEN];		\/\/DDNS 注册名$/;"	m	struct:_NET_DEV_DDNS_CFG
Action	NET_DEV_STRUCT.H	/^    BYTE Action;		\/\/ NET_DEV_PTZ_JOIN_ACTION_TYPE$/;"	m	struct:_NET_DEV_ALARM_PTZ_ACTION
Action	NET_DEV_STRUCT.H	/^    DWORD Action;		\/\/ NET_DEV_PTZ_ACTION$/;"	m	struct:_NET_DEV_PTZ_CONTROL
Action	NET_DEV_STRUCT.H	/^    DWORD Action;		\/\/0：开始告警，1：结束告警$/;"	m	struct:_NET_DEV_ALARM_ITEM
Action	NET_DEV_STRUCT.H	/^    DWORD Action;		\/\/动作类型: NET_DEV_DEC_ACTION$/;"	m	struct:_NET_DEV_DEC_DIVINFO
Action	NET_DEV_STRUCT.H	/^    DWORD Action;		\/\/动作类型: NET_DEV_DEC_ACTION$/;"	m	struct:_NET_DEV_DEC_FULLSCREENINFO
Action	NET_DEV_STRUCT.H	/^    DWORD Action;		\/\/动作类型: NET_DEV_DEC_ACTION$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
Action	NET_DEV_STRUCT.H	/^    WORD Action;		\/\/NET_DEV_PTZ_JOIN_ACTION_TYPE$/;"	m	struct:_NET_DEV_PTZ_SCHEDTASK
Action	NET_DEV_STRUCT.H	/^    WORD Action;		\/\/守望动作类型： NET_DEV_PTZ_JOIN_ACTION_TYPE$/;"	m	struct:_NET_DEV_PTZ_PARKACTION_CFG
ActionName	NET_DEV_STRUCT.H	/^    CHAR ActionName[NET_DEV_DEC_NAME_LEN];		\/\/巡回\/群组名称$/;"	m	struct:_NET_DEV_DEC_DIVINFO
ActionName	NET_DEV_STRUCT.H	/^    CHAR ActionName[NET_DEV_DEC_NAME_LEN];		\/\/巡回\/群组名称$/;"	m	struct:_NET_DEV_DEC_FULLSCREENINFO
Active	NET_DEV_STRUCT.H	/^    DWORD Active;$/;"	m	struct:_NET_DEV_WIFI_WEP
Addr	NET_DEV_STRUCT.H	/^    CHAR Addr[NET_DEV_MAX_URL_LEN];$/;"	m	struct:_NET_DEV_DOMAINADDR
AlarmBox	NET_DEV_STRUCT.H	/^    BYTE AlarmBox;		\/\/报警盒协议类型$/;"	m	struct:_NET_DEV_SERIAL_CFG
AlarmInCount	NET_DEV_STRUCT.H	/^    BYTE AlarmInCount;		\/\/ 报警输入个数$/;"	m	struct:_NET_DEV_CAPABILITIES
AlarmInNo	NET_DEV_STRUCT.H	/^        DWORD AlarmInNo;		\/\/告警输入号 ParamId == NET_DEV_PARAM_ALARMIN_ALARM$/;"	m	union:_NET_DEV_PARAM_QUERY::__anon58
AlarmInNo	NET_DEV_STRUCT.H	/^    WORD AlarmInNo;		\/\/告警输入号, 从 0 开始$/;"	m	struct:_NET_DEV_ALARMIN_ALARM
AlarmInState	NET_DEV_STRUCT.H	/^    BYTE AlarmInState[NET_DEV_MAX_ALARM_IN_NUM];		\/\/报警输入口的状态：0-没有报警；1-有报警$/;"	m	struct:_NET_DEV_WORKSTATE
AlarmInterval	NET_DEV_STRUCT.H	/^    DWORD AlarmInterval;		\/\/报警间隔 单位 s$/;"	m	struct:_NET_DEV_ALARMIN_ALARM
AlarmInterval	NET_DEV_STRUCT.H	/^    DWORD AlarmInterval;		\/\/报警间隔 单位 s$/;"	m	struct:_NET_DEV_HIDE_ALARM
AlarmInterval	NET_DEV_STRUCT.H	/^    DWORD AlarmInterval;		\/\/报警间隔 单位 s$/;"	m	struct:_NET_DEV_LOST_ALARM
AlarmInterval	NET_DEV_STRUCT.H	/^    DWORD AlarmInterval;		\/\/报警间隔 单位 s$/;"	m	struct:_NET_DEV_PIR_ALARM
AlarmInterval	NET_DEV_STRUCT.H	/^    DWORD AlarmInterval;$/;"	m	struct:_NET_DEV_MOTION_ALARM
AlarmNo	NET_DEV_STRUCT.H	/^    WORD AlarmNo;		\/\/告警输入号, 从 0 开始, 视频告警为通道号, IO告警为 IO输入号$/;"	m	struct:_NET_DEV_ALARM_SRC
AlarmOutCount	NET_DEV_STRUCT.H	/^    BYTE AlarmOutCount;		\/\/ 报警输出个数$/;"	m	struct:_NET_DEV_CAPABILITIES
AlarmOutMask	NET_DEV_STRUCT.H	/^    BYTE AlarmOutMask[NET_DEV_MAX_ALARM_OUT_NUM];		\/\/联动报警输出通道$/;"	m	struct:_NET_DEV_ALARM_HANDLE
AlarmOutNo	NET_DEV_STRUCT.H	/^        DWORD AlarmOutNo;		\/\/告警输出号 ParamId == NET_DEV_PARAM_ALARMOUTCFG$/;"	m	union:_NET_DEV_PARAM_QUERY::__anon58
AlarmOutNo	NET_DEV_STRUCT.H	/^    WORD AlarmOutNo;		\/\/ 告警输出号, 从0开始$/;"	m	struct:_NET_DEV_ALARMOUTCFG
AlarmOutState	NET_DEV_STRUCT.H	/^    BYTE AlarmOutState[NET_DEV_MAX_ALARM_OUT_NUM];		\/\/报警输出口的状态：0-没有输出，1-有报警输出$/;"	m	struct:_NET_DEV_WORKSTATE
AlarmParam	NET_DEV_STRUCT.H	/^    NET_DEV_SNAPPIC_ALARMPARAM AlarmParam;		\/\/告警联动抓拍参数$/;"	m	struct:_NET_DEV_SNAPPIC
AlarmSource	NET_DEV_STRUCT.H	/^        NET_DEV_ALARM_SRC AlarmSource;		\/\/告警联动源 ParamId == NET_DEV_PARAM_ALARM_JOINT$/;"	m	union:_NET_DEV_PARAM_QUERY::__anon58
AlarmSource	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_SRC AlarmSource;$/;"	m	struct:_NET_DEV_ALARM_JOINT
AlarmSubType	NET_DEV_STRUCT.H	/^    DWORD AlarmSubType;		\/\/子类型 NET_DEV_ALARM_TYPE, NET_DEV_EXCEPTION_TYPE$/;"	m	struct:_NET_DEV_ALARM_ITEM
AlarmSvrIp	NET_DEV_STRUCT.H	/^    CHAR  AlarmSvrIp[16];$/;"	m	struct:_NET_DEV_WSX_CFG
AlarmSvrPort	NET_DEV_STRUCT.H	/^    DWORD AlarmSvrPort;$/;"	m	struct:_NET_DEV_WSX_CFG
AlarmTimes	NET_DEV_STRUCT.H	/^    BYTE AlarmTimes;		\/\/ 异常报警时间，（0-20秒），数值越大需要的报警时间越长( 预留参数，暂不支持)$/;"	m	struct:_NET_DEV_AVD_RULE
AlarmTrigState	NET_DEV_STRUCT.H	/^    BYTE AlarmTrigState;		\/\/报警输入触发 报警输入触发状态：0-白天，1-夜晚$/;"	m	struct:_NET_DEV_DAYNIGHT
AlarmType	NET_DEV_STRUCT.H	/^    DWORD AlarmType;		\/\/主类型 NET_DEV_ALARM_MAJOR_TYPE$/;"	m	struct:_NET_DEV_ALARM_ITEM
AlarmType	NET_DEV_STRUCT.H	/^    WORD AlarmType;		\/\/NET_DEV_ALARM_TYPE$/;"	m	struct:_NET_DEV_ALARM_SRC
AlarmURL	NET_DEV_STRUCT.H	/^    CHAR  AlarmURL[128];$/;"	m	struct:_NET_DEV_WSX_CFG
AllDayFlag	NET_DEV_STRUCT.H	/^    DWORD AllDayFlag;		\/\/是否全天录像 1: 是， 0: 不是;$/;"	m	struct:_NET_DEV_DAY
Amplify	NET_DEV_STRUCT.H	/^    DWORD Amplify;$/;"	m	struct:_NET_DEV_PTZ_3D
AntiFlicker	NET_DEV_STRUCT.H	/^    DWORD AntiFlicker;		\/\/抗闪烁 0-关闭 1-50Hz 2-60 Hz$/;"	m	struct:_NET_DEV_CAMERAPARAM
AntiFog	NET_DEV_STRUCT.H	/^    DWORD AntiFog;		\/\/去雾：0 不启用    1 开启$/;"	m	struct:_NET_DEV_CAMERAPARAM
Apn	NET_DEV_STRUCT.H	/^    CHAR Apn[NET_DEV_USERNAME_LEN];		\/\/ access point name, eg. "cmnet"$/;"	m	struct:_NET_DEV_PPPDPARAM
Area	NET_DEV_STRUCT.H	/^    NET_DEV_AREA Area;		\/\/区域$/;"	m	struct:_NET_DEV_ROI
Area	NET_DEV_STRUCT.H	/^    NET_DEV_AREA Area;		\/\/遮挡区域,数目为0即遮挡无效$/;"	m	struct:_NET_DEV_VENC_OVERLAY
Area	NET_DEV_STRUCT.H	/^    NET_DEV_AREA Area;$/;"	m	struct:_NET_DEV_HIDE_ALARM
Area	NET_DEV_STRUCT.H	/^    NET_DEV_AREA Area;$/;"	m	struct:_NET_DEV_MOTION_ALARM
Args	NET_DEV_STRUCT.H	/^    DWORD Args;		\/\/ 如果 MINOR_TYPE 和通道号相关，args表示通道号;如果 MINOR_TYPE 和IO告警相关，args表示IO告警输入号)$/;"	m	struct:_NET_DEV_LOG_ITEM
Audio	NET_DEV_STRUCT.H	/^        NET_DEV_MEDIA_AFRAMEEXT Audio;  \/*音频扩展*\/$/;"	m	union:_NET_DEV_MEDIA_FRAMEHEADER::__anon60
Audio	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_AUDIOPARAM Audio;  \/*视频媒体信息*\/$/;"	m	struct:_NET_DEV_MEDIA_PARAM
AudioChannState	NET_DEV_STRUCT.H	/^    BYTE AudioChannState[NET_DEV_MAX_CHANN_NUM];		\/\/表示语音通道的状态：0-未使用，1-使用中，0xff无效$/;"	m	struct:_NET_DEV_WORKSTATE
AudioConfCh	NET_DEV_STRUCT.H	/^    BYTE  AudioConfCh;  \/* 视频会议音频通道，取值0x00 ~ MaxChannel ，取值为MaxChannel表示对讲通道*\/$/;"	m	struct:_NET_DEV_WSX_CFG
AudioEncType	NET_DEV_STRUCT.H	/^    BYTE AudioEncType;		\/\/ 支持的音频编码集 NET_DEV_AENC_TYPE$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
AudioEncodeType	NET_DEV_STRUCT.H	/^    DWORD AudioEncodeType;		\/\/音频编码类型 'NET_DEV_AENC_TYPE'$/;"	m	struct:_NET_DEV_ENCODEPARAM
AudioInCount	NET_DEV_STRUCT.H	/^    BYTE AudioInCount;		\/\/ 语音输入个数$/;"	m	struct:_NET_DEV_CAPABILITIES
AudioInputMode	NET_DEV_STRUCT.H	/^    DWORD AudioInputMode;		\/\/音频输入类型 'NET_DEV_AUDIOINPUTMODE'$/;"	m	struct:_NET_DEV_ENCODEPARAM
AudioOutCount	NET_DEV_STRUCT.H	/^    BYTE AudioOutCount;		\/\/ 语音输出个数$/;"	m	struct:_NET_DEV_CAPABILITIES
AudioRec	NET_DEV_STRUCT.H	/^    WORD AudioRec;		\/\/录像时复合流编码时是否记录音频数据：国外有此法规$/;"	m	struct:_NET_DEV_RECORD
Authentication	NET_DEV_STRUCT.H	/^    DWORD Authentication;		\/\/认证方式 'NET_DEV_WIFI_WEP_AUTH'$/;"	m	struct:_NET_DEV_WIFI_WEP
Authentication	NET_DEV_STRUCT.H	/^    DWORD Authentication;		\/\/认证模式 NET_DEV_WIFI_WEP_AUTH$/;"	m	struct:_NET_DEV_WIFI_AP
AutoCover	NET_DEV_STRUCT.H	/^    WORD AutoCover;		\/\/通道录像是否自动覆盖 0: 磁盘满停止, 1: 自动覆盖  \/\/???? Tom$/;"	m	struct:_NET_DEV_RECORD
AuxEnable	NET_DEV_STRUCT.H	/^    BYTE AuxEnable;		\/\/ (辅屏)是否开启$/;"	m	struct:_NET_DEV_NVRCFG
AuxResolution	NET_DEV_STRUCT.H	/^    BYTE AuxResolution;		\/\/ (辅屏)分辨率 NET_DEV_VOUT_RESOLUTION$/;"	m	struct:_NET_DEV_NVRCFG
AwbBlue	NET_DEV_STRUCT.H	/^    DWORD AwbBlue;		\/\/白平衡蓝色$/;"	m	struct:_NET_DEV_CAMERAPARAM
AwbMode	NET_DEV_STRUCT.H	/^    DWORD AwbMode;		\/\/白平衡模式 0 自动1 室内 2室外 3自动跟踪 4 手动$/;"	m	struct:_NET_DEV_CAMERAPARAM
AwbRed	NET_DEV_STRUCT.H	/^    DWORD AwbRed;		\/\/白平衡红色$/;"	m	struct:_NET_DEV_CAMERAPARAM
BASE64_CHARS	base64.c	/^const char *BASE64_CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/";$/;"	v
BLANK_AT_MAKETIME	curl/Makefile	/^BLANK_AT_MAKETIME = $/;"	m
BLUE	BaseType.h	137;"	d
BOOL	NET_DEV_STRUCT.H	/^typedef  int                BOOL;$/;"	t
BUG	main.c	48;"	d	file:
BYTE	NET_DEV_STRUCT.H	/^typedef  unsigned char      BYTE;$/;"	t
BYTE	file.c	/^typedef 	unsigned char BYTE;$/;"	t	file:
BaudRate	NET_DEV_STRUCT.H	/^    DWORD BaudRate;		\/\/ 波特率   请参考 NET_DEV_RS232_CFG 定义解释$/;"	m	struct:_NET_DEV_PTZ_CFG
BaudRate	NET_DEV_STRUCT.H	/^    DWORD BaudRate;		\/\/串口波特率 115200, 57600, 38400, 19200, 9600, 4800, 2400, 1800, 1200, 600$/;"	m	struct:_NET_DEV_SERIAL_CFG
BeginNo	NET_DEV_STRUCT.H	/^    DWORD BeginNo;$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_REQ
BeginNo	NET_DEV_STRUCT.H	/^    DWORD BeginNo;$/;"	m	struct:_NET_DEV_LOG_QUERY_REQ
BeginNo	NET_DEV_STRUCT.H	/^    DWORD BeginNo;$/;"	m	struct:_NET_DEV_PIC_QUERY_REQ
BeginNo	NET_DEV_STRUCT.H	/^    DWORD BeginNo;$/;"	m	struct:_NET_DEV_RECORD_QUERY_REQ
BeginTime	NET_DEV_STRUCT.H	/^    DWORD BeginTime;		\/\/开始时间$/;"	m	struct:_NET_DEV_LOG_COND
BeginTime	NET_DEV_STRUCT.H	/^    DWORD BeginTime;		\/\/开始时间$/;"	m	struct:_NET_DEV_PIC_COND
BeginTime	NET_DEV_STRUCT.H	/^    DWORD BeginTime;                 \/*媒体开始时间*\/$/;"	m	struct:_NET_DEV_MEDIA_PARAM
BeginTime	NET_DEV_STRUCT.H	/^    DWORD BeginTime;$/;"	m	struct:_NET_DEV_RECORD_COND
BeginTime	NET_DEV_STRUCT.H	/^    DWORD BeginTime;$/;"	m	struct:_NET_DEV_RECORD_ITEM
BitRate	NET_DEV_STRUCT.H	/^    DWORD BitRate;		\/\/传输速率$/;"	m	struct:_NET_DEV_WIFI_AP
BitRate	NET_DEV_STRUCT.H	/^    DWORD BitRate;		\/\/位率 128k ~ 8000k$/;"	m	struct:_NET_DEV_ENCODEPARAM
BitRate	NET_DEV_STRUCT.H	/^    DWORD BitRate[NET_DEV_MAX_STREAM_NUM];		\/\/实际码率$/;"	m	struct:_NET_DEV_CHANNSTATE
BitRate	NET_DEV_STRUCT.H	/^    WORD BitRate;                     \/*码率*\/$/;"	m	struct:_NET_DEV_MEDIA_VIDEOPARAM
BitRate	NET_DEV_STRUCT.H	/^    WORD BitRate;                   \/*码率*\/$/;"	m	struct:_NET_DEV_MEDIA_AUDIOPARAM
BitRateEnable	NET_DEV_STRUCT.H	/^    DWORD BitRateEnable;		\/\/是否显示码流信息；1：显示，0：隐藏$/;"	m	struct:_NET_DEV_VENC_OSD
BitRateType	NET_DEV_STRUCT.H	/^    DWORD BitRateType;		\/\/位率类型 'NET_DEV_VENC_BITRATE_TYPE'$/;"	m	struct:_NET_DEV_ENCODEPARAM
BitsPerSample	NET_DEV_STRUCT.H	/^    BYTE BitsPerSample;                 \/*位宽 16 *\/$/;"	m	struct:_NET_DEV_MEDIA_AFRAMEEXT
BitsPerSample	NET_DEV_STRUCT.H	/^    WORD BitsPerSample;             \/*位宽*\/$/;"	m	struct:_NET_DEV_MEDIA_AUDIOPARAM
Blc	NET_DEV_STRUCT.H	/^    DWORD Blc;		\/\/背光补偿0 关闭 1 打开$/;"	m	struct:_NET_DEV_CAMERAPARAM
BootGuide	NET_DEV_STRUCT.H	/^    BYTE BootGuide;		\/\/ 开机向导 NET_DEV_BOOTGUIDE$/;"	m	struct:_NET_DEV_NVRCFG
Bottom	NET_DEV_STRUCT.H	/^    WORD Bottom;$/;"	m	struct:_NET_DEV_RECT
Bright	NET_DEV_STRUCT.H	/^    DWORD Bright;		\/\/亮度$/;"	m	struct:_NET_DEV_VIDEO_EFFECT
CALLBACK	BaseType.h	166;"	d
CALLBACK	BaseType.h	173;"	d
CC	curl/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	curl/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CFLAGS	curl/Makefile	/^CFLAGS = -Werror-implicit-function-declaration -O2 -Wno-system-headers -pthread$/;"	m
CFLAG_CURL_SYMBOL_HIDING	curl/Makefile	/^CFLAG_CURL_SYMBOL_HIDING = -fvisibility=hidden$/;"	m
CH00TO31	NET_DEV_STRUCT.H	/^    DWORD CH00TO31;		\/\/音视频$/;"	m	struct:_NET_DEV_PF_CHNLSTATE
CH32TO63	NET_DEV_STRUCT.H	/^    DWORD CH32TO63;		\/\/音视频$/;"	m	struct:_NET_DEV_PF_CHNLSTATE
CHAR	NET_DEV_STRUCT.H	/^typedef  char               CHAR;$/;"	t
CHECKSRC	curl/Makefile	/^CHECKSRC = $(CS_$(V))$/;"	m
CJSON_CDECL	cJSON.h	55;"	d
CJSON_CDECL	cJSON.h	71;"	d
CJSON_EXPORT_SYMBOLS	cJSON.h	60;"	d
CJSON_NESTING_LIMIT	cJSON.h	137;"	d
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_AddItemReferenceToArray(cJSON *array, cJSON *item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_AddItemReferenceToObject(cJSON *object, const char *string, cJSON *item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToArray(cJSON *array, cJSON *item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToObject(cJSON *object, const char *string, cJSON *item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_AddItemToObjectCS(cJSON *object, const char *string, cJSON *item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_Compare(const cJSON * const a, const cJSON * const b, const cJSON_bool case_sensitive)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_HasObjectItem(const cJSON *object, const char *string)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_InsertItemInArray(cJSON *array, int which, cJSON *newitem)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsArray(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsBool(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsFalse(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsInvalid(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsNull(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsNumber(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsObject(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsRaw(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsString(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsTrue(const cJSON * const item)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_PrintPreallocated(cJSON *item, char *buffer, const int length, const cJSON_bool format)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInArray(cJSON *array, int which, cJSON *newitem)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInObject(cJSON *object, const char *string, cJSON *newitem)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemInObjectCaseSensitive(cJSON *object, const char *string, cJSON *newitem)$/;"	f
CJSON_PUBLIC	cJSON.c	/^CJSON_PUBLIC(cJSON_bool) cJSON_ReplaceItemViaPointer(cJSON * const parent, cJSON * const item, cJSON * replacement)$/;"	f
CJSON_PUBLIC	cJSON.h	64;"	d
CJSON_PUBLIC	cJSON.h	66;"	d
CJSON_PUBLIC	cJSON.h	68;"	d
CJSON_PUBLIC	cJSON.h	75;"	d
CJSON_PUBLIC	cJSON.h	77;"	d
CJSON_STDCALL	cJSON.h	56;"	d
CJSON_STDCALL	cJSON.h	72;"	d
CJSON_VERSION_MAJOR	cJSON.h	82;"	d
CJSON_VERSION_MINOR	cJSON.h	83;"	d
CJSON_VERSION_PATCH	cJSON.h	84;"	d
CMSIP	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR CMSIP;		\/\/ CMS IP$/;"	m	struct:_NET_DEV_SADPCMSINFO
COLORKEY	NET_DEV_STRUCT.H	/^typedef unsigned int   COLORKEY;$/;"	t
COLORREF	NET_DEV_STRUCT.H	/^typedef unsigned int   COLORREF;$/;"	t
CONFIGURE_OPTIONS	curl/Makefile	/^CONFIGURE_OPTIONS = ""$/;"	m
CONFIG_CLEAN_FILES	curl/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	curl/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	curl/Makefile	/^CONFIG_HEADER = $(top_builddir)\/lib\/curl_config.h$/;"	m
CPP	curl/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	curl/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAG_CURL_STATICLIB	curl/Makefile	/^CPPFLAG_CURL_STATICLIB = $/;"	m
CRE	BaseType.h	132;"	d
CS_	curl/Makefile	/^CS_ = $(CS_0)$/;"	m
CS_0	curl/Makefile	/^CS_0 = @echo "  RUN     " $@;$/;"	m
CS_1	curl/Makefile	/^CS_1 = $/;"	m
CTAGS	curl/Makefile	/^CTAGS = ctags$/;"	m
CTimerRdmsc	BaseType.h	/^static UINT32 CTimerRdmsc(void) $/;"	f
CTimerRdtsc	BaseType.h	/^static void CTimerRdtsc(unsigned long long *x) $/;"	f
CTimerSec	BaseType.h	/^static unsigned long long CTimerSec(void) $/;"	f
CURL	curl/curl.h	/^typedef struct Curl_easy CURL;$/;"	t	typeref:struct:Curl_easy
CURL	curl/curl.h	/^typedef void CURL;$/;"	t
CURLALTSVC_H1	curl/curl.h	907;"	d
CURLALTSVC_H2	curl/curl.h	908;"	d
CURLALTSVC_H3	curl/curl.h	909;"	d
CURLALTSVC_IMMEDIATELY	curl/curl.h	904;"	d
CURLALTSVC_READONLYFILE	curl/curl.h	906;"	d
CURLAUTH_ANY	curl/curl.h	748;"	d
CURLAUTH_ANYSAFE	curl/curl.h	749;"	d
CURLAUTH_BASIC	curl/curl.h	736;"	d
CURLAUTH_BEARER	curl/curl.h	746;"	d
CURLAUTH_DIGEST	curl/curl.h	737;"	d
CURLAUTH_DIGEST_IE	curl/curl.h	744;"	d
CURLAUTH_GSSAPI	curl/curl.h	742;"	d
CURLAUTH_GSSNEGOTIATE	curl/curl.h	740;"	d
CURLAUTH_NEGOTIATE	curl/curl.h	738;"	d
CURLAUTH_NONE	curl/curl.h	735;"	d
CURLAUTH_NTLM	curl/curl.h	743;"	d
CURLAUTH_NTLM_WB	curl/curl.h	745;"	d
CURLAUTH_ONLY	curl/curl.h	747;"	d
CURLCLOSEPOLICY_CALLBACK	curl/curl.h	/^  CURLCLOSEPOLICY_CALLBACK,$/;"	e	enum:__anon33
CURLCLOSEPOLICY_LAST	curl/curl.h	/^  CURLCLOSEPOLICY_LAST \/* last, never use this *\/$/;"	e	enum:__anon33
CURLCLOSEPOLICY_LEAST_RECENTLY_USED	curl/curl.h	/^  CURLCLOSEPOLICY_LEAST_RECENTLY_USED,$/;"	e	enum:__anon33
CURLCLOSEPOLICY_LEAST_TRAFFIC	curl/curl.h	/^  CURLCLOSEPOLICY_LEAST_TRAFFIC,$/;"	e	enum:__anon33
CURLCLOSEPOLICY_NONE	curl/curl.h	/^  CURLCLOSEPOLICY_NONE, \/* first, never use this *\/$/;"	e	enum:__anon33
CURLCLOSEPOLICY_OLDEST	curl/curl.h	/^  CURLCLOSEPOLICY_OLDEST,$/;"	e	enum:__anon33
CURLCLOSEPOLICY_SLOWEST	curl/curl.h	/^  CURLCLOSEPOLICY_SLOWEST,$/;"	e	enum:__anon33
CURLE_ABORTED_BY_CALLBACK	curl/curl.h	/^  CURLE_ABORTED_BY_CALLBACK,     \/* 42 *\/$/;"	e	enum:__anon15
CURLE_AGAIN	curl/curl.h	/^  CURLE_AGAIN,                   \/* 81 - socket is not ready for send\/recv,$/;"	e	enum:__anon15
CURLE_ALREADY_COMPLETE	curl/curl.h	678;"	d
CURLE_AUTH_ERROR	curl/curl.h	/^  CURLE_AUTH_ERROR,              \/* 94 - an authentication function returned an$/;"	e	enum:__anon15
CURLE_BAD_CALLING_ORDER	curl/curl.h	644;"	d
CURLE_BAD_CONTENT_ENCODING	curl/curl.h	/^  CURLE_BAD_CONTENT_ENCODING,    \/* 61 - Unrecognized\/bad encoding *\/$/;"	e	enum:__anon15
CURLE_BAD_DOWNLOAD_RESUME	curl/curl.h	/^  CURLE_BAD_DOWNLOAD_RESUME,     \/* 36 - couldn't resume download *\/$/;"	e	enum:__anon15
CURLE_BAD_FUNCTION_ARGUMENT	curl/curl.h	/^  CURLE_BAD_FUNCTION_ARGUMENT,   \/* 43 *\/$/;"	e	enum:__anon15
CURLE_BAD_PASSWORD_ENTERED	curl/curl.h	643;"	d
CURLE_CHUNK_FAILED	curl/curl.h	/^  CURLE_CHUNK_FAILED,            \/* 88 - chunk callback reported error *\/$/;"	e	enum:__anon15
CURLE_CONV_FAILED	curl/curl.h	/^  CURLE_CONV_FAILED,             \/* 75 - conversion failed *\/$/;"	e	enum:__anon15
CURLE_CONV_REQD	curl/curl.h	/^  CURLE_CONV_REQD,               \/* 76 - caller must register conversion$/;"	e	enum:__anon15
CURLE_COULDNT_CONNECT	curl/curl.h	/^  CURLE_COULDNT_CONNECT,         \/* 7 *\/$/;"	e	enum:__anon15
CURLE_COULDNT_RESOLVE_HOST	curl/curl.h	/^  CURLE_COULDNT_RESOLVE_HOST,    \/* 6 *\/$/;"	e	enum:__anon15
CURLE_COULDNT_RESOLVE_PROXY	curl/curl.h	/^  CURLE_COULDNT_RESOLVE_PROXY,   \/* 5 *\/$/;"	e	enum:__anon15
CURLE_FAILED_INIT	curl/curl.h	/^  CURLE_FAILED_INIT,             \/* 2 *\/$/;"	e	enum:__anon15
CURLE_FILESIZE_EXCEEDED	curl/curl.h	/^  CURLE_FILESIZE_EXCEEDED,       \/* 63 - Maximum file size exceeded *\/$/;"	e	enum:__anon15
CURLE_FILE_COULDNT_READ_FILE	curl/curl.h	/^  CURLE_FILE_COULDNT_READ_FILE,  \/* 37 *\/$/;"	e	enum:__anon15
CURLE_FTP_ACCEPT_FAILED	curl/curl.h	/^  CURLE_FTP_ACCEPT_FAILED,       \/* 10 - [was obsoleted in April 2006 for$/;"	e	enum:__anon15
CURLE_FTP_ACCEPT_TIMEOUT	curl/curl.h	/^  CURLE_FTP_ACCEPT_TIMEOUT,      \/* 12 - timeout occurred accepting server$/;"	e	enum:__anon15
CURLE_FTP_ACCESS_DENIED	curl/curl.h	656;"	d
CURLE_FTP_BAD_DOWNLOAD_RESUME	curl/curl.h	673;"	d
CURLE_FTP_BAD_FILE_LIST	curl/curl.h	/^  CURLE_FTP_BAD_FILE_LIST,       \/* 87 - unable to parse FTP file list *\/$/;"	e	enum:__anon15
CURLE_FTP_CANT_GET_HOST	curl/curl.h	/^  CURLE_FTP_CANT_GET_HOST,       \/* 15 *\/$/;"	e	enum:__anon15
CURLE_FTP_CANT_RECONNECT	curl/curl.h	646;"	d
CURLE_FTP_COULDNT_GET_SIZE	curl/curl.h	647;"	d
CURLE_FTP_COULDNT_RETR_FILE	curl/curl.h	/^  CURLE_FTP_COULDNT_RETR_FILE,   \/* 19 *\/$/;"	e	enum:__anon15
CURLE_FTP_COULDNT_SET_ASCII	curl/curl.h	648;"	d
CURLE_FTP_COULDNT_SET_BINARY	curl/curl.h	657;"	d
CURLE_FTP_COULDNT_SET_TYPE	curl/curl.h	/^  CURLE_FTP_COULDNT_SET_TYPE,    \/* 17 *\/$/;"	e	enum:__anon15
CURLE_FTP_COULDNT_STOR_FILE	curl/curl.h	670;"	d
CURLE_FTP_COULDNT_USE_REST	curl/curl.h	/^  CURLE_FTP_COULDNT_USE_REST,    \/* 31 - the REST command failed *\/$/;"	e	enum:__anon15
CURLE_FTP_PARTIAL_FILE	curl/curl.h	672;"	d
CURLE_FTP_PORT_FAILED	curl/curl.h	/^  CURLE_FTP_PORT_FAILED,         \/* 30 - FTP PORT operation failed *\/$/;"	e	enum:__anon15
CURLE_FTP_PRET_FAILED	curl/curl.h	/^  CURLE_FTP_PRET_FAILED,         \/* 84 - a PRET command failed *\/$/;"	e	enum:__anon15
CURLE_FTP_QUOTE_ERROR	curl/curl.h	658;"	d
CURLE_FTP_SSL_FAILED	curl/curl.h	662;"	d
CURLE_FTP_USER_PASSWORD_INCORRECT	curl/curl.h	645;"	d
CURLE_FTP_WEIRD_227_FORMAT	curl/curl.h	/^  CURLE_FTP_WEIRD_227_FORMAT,    \/* 14 *\/$/;"	e	enum:__anon15
CURLE_FTP_WEIRD_PASS_REPLY	curl/curl.h	/^  CURLE_FTP_WEIRD_PASS_REPLY,    \/* 11 *\/$/;"	e	enum:__anon15
CURLE_FTP_WEIRD_PASV_REPLY	curl/curl.h	/^  CURLE_FTP_WEIRD_PASV_REPLY,    \/* 13 *\/$/;"	e	enum:__anon15
CURLE_FTP_WEIRD_SERVER_REPLY	curl/curl.h	628;"	d
CURLE_FTP_WEIRD_USER_REPLY	curl/curl.h	649;"	d
CURLE_FTP_WRITE_ERROR	curl/curl.h	650;"	d
CURLE_FUNCTION_NOT_FOUND	curl/curl.h	/^  CURLE_FUNCTION_NOT_FOUND,      \/* 41 - NOT USED starting with 7.53.0 *\/$/;"	e	enum:__anon15
CURLE_GOT_NOTHING	curl/curl.h	/^  CURLE_GOT_NOTHING,             \/* 52 - when this is a specific error *\/$/;"	e	enum:__anon15
CURLE_HTTP2	curl/curl.h	/^  CURLE_HTTP2,                   \/* 16 - A problem in the http2 framing layer.$/;"	e	enum:__anon15
CURLE_HTTP2_STREAM	curl/curl.h	/^  CURLE_HTTP2_STREAM,            \/* 92 - stream error in HTTP\/2 framing layer$/;"	e	enum:__anon15
CURLE_HTTP3	curl/curl.h	/^  CURLE_HTTP3,                   \/* 95 - An HTTP\/3 layer problem *\/$/;"	e	enum:__anon15
CURLE_HTTP_NOT_FOUND	curl/curl.h	668;"	d
CURLE_HTTP_PORT_FAILED	curl/curl.h	669;"	d
CURLE_HTTP_POST_ERROR	curl/curl.h	/^  CURLE_HTTP_POST_ERROR,         \/* 34 *\/$/;"	e	enum:__anon15
CURLE_HTTP_RANGE_ERROR	curl/curl.h	661;"	d
CURLE_HTTP_RETURNED_ERROR	curl/curl.h	/^  CURLE_HTTP_RETURNED_ERROR,     \/* 22 *\/$/;"	e	enum:__anon15
CURLE_INTERFACE_FAILED	curl/curl.h	/^  CURLE_INTERFACE_FAILED,        \/* 45 - CURLOPT_INTERFACE failed *\/$/;"	e	enum:__anon15
CURLE_LDAP_CANNOT_BIND	curl/curl.h	/^  CURLE_LDAP_CANNOT_BIND,        \/* 38 *\/$/;"	e	enum:__anon15
CURLE_LDAP_INVALID_URL	curl/curl.h	/^  CURLE_LDAP_INVALID_URL,        \/* 62 - Invalid LDAP URL *\/$/;"	e	enum:__anon15
CURLE_LDAP_SEARCH_FAILED	curl/curl.h	/^  CURLE_LDAP_SEARCH_FAILED,      \/* 39 *\/$/;"	e	enum:__anon15
CURLE_LIBRARY_NOT_FOUND	curl/curl.h	651;"	d
CURLE_LOGIN_DENIED	curl/curl.h	/^  CURLE_LOGIN_DENIED,            \/* 67 - user, password or similar was not$/;"	e	enum:__anon15
CURLE_MALFORMAT_USER	curl/curl.h	652;"	d
CURLE_NOT_BUILT_IN	curl/curl.h	/^  CURLE_NOT_BUILT_IN,            \/* 4 - [was obsoleted in August 2007 for$/;"	e	enum:__anon15
CURLE_NO_CONNECTION_AVAILABLE	curl/curl.h	/^  CURLE_NO_CONNECTION_AVAILABLE, \/* 89 - No connection available, the$/;"	e	enum:__anon15
CURLE_OBSOLETE	curl/curl.h	642;"	d
CURLE_OBSOLETE10	curl/curl.h	623;"	d
CURLE_OBSOLETE12	curl/curl.h	624;"	d
CURLE_OBSOLETE16	curl/curl.h	620;"	d
CURLE_OBSOLETE20	curl/curl.h	/^  CURLE_OBSOLETE20,              \/* 20 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE24	curl/curl.h	/^  CURLE_OBSOLETE24,              \/* 24 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE29	curl/curl.h	/^  CURLE_OBSOLETE29,              \/* 29 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE32	curl/curl.h	/^  CURLE_OBSOLETE32,              \/* 32 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE40	curl/curl.h	/^  CURLE_OBSOLETE40,              \/* 40 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE44	curl/curl.h	/^  CURLE_OBSOLETE44,              \/* 44 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE46	curl/curl.h	/^  CURLE_OBSOLETE46,              \/* 46 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE50	curl/curl.h	/^  CURLE_OBSOLETE50,              \/* 50 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE51	curl/curl.h	/^  CURLE_OBSOLETE51,              \/* 51 - NOT USED *\/$/;"	e	enum:__anon15
CURLE_OBSOLETE57	curl/curl.h	/^  CURLE_OBSOLETE57,              \/* 57 - NOT IN USE *\/$/;"	e	enum:__anon15
CURLE_OK	curl/curl.h	/^  CURLE_OK = 0,$/;"	e	enum:__anon15
CURLE_OPERATION_TIMEDOUT	curl/curl.h	/^  CURLE_OPERATION_TIMEDOUT,      \/* 28 - the timeout time was reached *\/$/;"	e	enum:__anon15
CURLE_OPERATION_TIMEOUTED	curl/curl.h	666;"	d
CURLE_OUT_OF_MEMORY	curl/curl.h	/^  CURLE_OUT_OF_MEMORY,           \/* 27 *\/$/;"	e	enum:__anon15
CURLE_PARTIAL_FILE	curl/curl.h	/^  CURLE_PARTIAL_FILE,            \/* 18 *\/$/;"	e	enum:__anon15
CURLE_PEER_FAILED_VERIFICATION	curl/curl.h	/^  CURLE_PEER_FAILED_VERIFICATION, \/* 60 - peer's certificate or fingerprint$/;"	e	enum:__anon15
CURLE_QUIC_CONNECT_ERROR	curl/curl.h	/^  CURLE_QUIC_CONNECT_ERROR,      \/* 96 - QUIC connection error *\/$/;"	e	enum:__anon15
CURLE_QUOTE_ERROR	curl/curl.h	/^  CURLE_QUOTE_ERROR,             \/* 21 - quote command failure *\/$/;"	e	enum:__anon15
CURLE_RANGE_ERROR	curl/curl.h	/^  CURLE_RANGE_ERROR,             \/* 33 - RANGE "command" didn't work *\/$/;"	e	enum:__anon15
CURLE_READ_ERROR	curl/curl.h	/^  CURLE_READ_ERROR,              \/* 26 - couldn't open\/read from file *\/$/;"	e	enum:__anon15
CURLE_RECURSIVE_API_CALL	curl/curl.h	/^  CURLE_RECURSIVE_API_CALL,      \/* 93 - an api function was called from$/;"	e	enum:__anon15
CURLE_RECV_ERROR	curl/curl.h	/^  CURLE_RECV_ERROR,              \/* 56 - failure in receiving network data *\/$/;"	e	enum:__anon15
CURLE_REMOTE_ACCESS_DENIED	curl/curl.h	/^  CURLE_REMOTE_ACCESS_DENIED,    \/* 9 a service was denied by the server$/;"	e	enum:__anon15
CURLE_REMOTE_DISK_FULL	curl/curl.h	/^  CURLE_REMOTE_DISK_FULL,        \/* 70 - out of disk space on server *\/$/;"	e	enum:__anon15
CURLE_REMOTE_FILE_EXISTS	curl/curl.h	/^  CURLE_REMOTE_FILE_EXISTS,      \/* 73 - File already exists *\/$/;"	e	enum:__anon15
CURLE_REMOTE_FILE_NOT_FOUND	curl/curl.h	/^  CURLE_REMOTE_FILE_NOT_FOUND,   \/* 78 - remote file not found *\/$/;"	e	enum:__anon15
CURLE_RTSP_CSEQ_ERROR	curl/curl.h	/^  CURLE_RTSP_CSEQ_ERROR,         \/* 85 - mismatch of RTSP CSeq numbers *\/$/;"	e	enum:__anon15
CURLE_RTSP_SESSION_ERROR	curl/curl.h	/^  CURLE_RTSP_SESSION_ERROR,      \/* 86 - mismatch of RTSP Session Ids *\/$/;"	e	enum:__anon15
CURLE_SEND_ERROR	curl/curl.h	/^  CURLE_SEND_ERROR,              \/* 55 - failed sending network data *\/$/;"	e	enum:__anon15
CURLE_SEND_FAIL_REWIND	curl/curl.h	/^  CURLE_SEND_FAIL_REWIND,        \/* 65 - Sending the data requires a rewind$/;"	e	enum:__anon15
CURLE_SHARE_IN_USE	curl/curl.h	653;"	d
CURLE_SSH	curl/curl.h	/^  CURLE_SSH,                     \/* 79 - error from the SSH layer, somewhat$/;"	e	enum:__anon15
CURLE_SSL_CACERT	curl/curl.h	631;"	d
CURLE_SSL_CACERT_BADFILE	curl/curl.h	/^  CURLE_SSL_CACERT_BADFILE,      \/* 77 - could not load CACERT file, missing$/;"	e	enum:__anon15
CURLE_SSL_CERTPROBLEM	curl/curl.h	/^  CURLE_SSL_CERTPROBLEM,         \/* 58 - problem with the local certificate *\/$/;"	e	enum:__anon15
CURLE_SSL_CIPHER	curl/curl.h	/^  CURLE_SSL_CIPHER,              \/* 59 - couldn't use specified cipher *\/$/;"	e	enum:__anon15
CURLE_SSL_CONNECT_ERROR	curl/curl.h	/^  CURLE_SSL_CONNECT_ERROR,       \/* 35 - wrong when connecting with SSL *\/$/;"	e	enum:__anon15
CURLE_SSL_CRL_BADFILE	curl/curl.h	/^  CURLE_SSL_CRL_BADFILE,         \/* 82 - could not load CRL file, missing or$/;"	e	enum:__anon15
CURLE_SSL_ENGINE_INITFAILED	curl/curl.h	/^  CURLE_SSL_ENGINE_INITFAILED,   \/* 66 - failed to initialise ENGINE *\/$/;"	e	enum:__anon15
CURLE_SSL_ENGINE_NOTFOUND	curl/curl.h	/^  CURLE_SSL_ENGINE_NOTFOUND,     \/* 53 - SSL crypto engine not found *\/$/;"	e	enum:__anon15
CURLE_SSL_ENGINE_SETFAILED	curl/curl.h	/^  CURLE_SSL_ENGINE_SETFAILED,    \/* 54 - can not set SSL crypto engine as$/;"	e	enum:__anon15
CURLE_SSL_INVALIDCERTSTATUS	curl/curl.h	/^  CURLE_SSL_INVALIDCERTSTATUS,   \/* 91 - invalid certificate status *\/$/;"	e	enum:__anon15
CURLE_SSL_ISSUER_ERROR	curl/curl.h	/^  CURLE_SSL_ISSUER_ERROR,        \/* 83 - Issuer check failed.  (Added in$/;"	e	enum:__anon15
CURLE_SSL_PEER_CERTIFICATE	curl/curl.h	638;"	d
CURLE_SSL_PINNEDPUBKEYNOTMATCH	curl/curl.h	/^  CURLE_SSL_PINNEDPUBKEYNOTMATCH, \/* 90 - specified pinned public key did not$/;"	e	enum:__anon15
CURLE_SSL_SHUTDOWN_FAILED	curl/curl.h	/^  CURLE_SSL_SHUTDOWN_FAILED,     \/* 80 - Failed to shut down the SSL$/;"	e	enum:__anon15
CURLE_TELNET_OPTION_SYNTAX	curl/curl.h	/^  CURLE_TELNET_OPTION_SYNTAX,    \/* 49 - Malformed telnet option *\/$/;"	e	enum:__anon15
CURLE_TFTP_DISKFULL	curl/curl.h	659;"	d
CURLE_TFTP_EXISTS	curl/curl.h	660;"	d
CURLE_TFTP_ILLEGAL	curl/curl.h	/^  CURLE_TFTP_ILLEGAL,            \/* 71 - Illegal TFTP operation *\/$/;"	e	enum:__anon15
CURLE_TFTP_NOSUCHUSER	curl/curl.h	/^  CURLE_TFTP_NOSUCHUSER,         \/* 74 - No such user *\/$/;"	e	enum:__anon15
CURLE_TFTP_NOTFOUND	curl/curl.h	/^  CURLE_TFTP_NOTFOUND,           \/* 68 - file not found on server *\/$/;"	e	enum:__anon15
CURLE_TFTP_PERM	curl/curl.h	/^  CURLE_TFTP_PERM,               \/* 69 - permission problem on server *\/$/;"	e	enum:__anon15
CURLE_TFTP_UNKNOWNID	curl/curl.h	/^  CURLE_TFTP_UNKNOWNID,          \/* 72 - Unknown transfer ID *\/$/;"	e	enum:__anon15
CURLE_TOO_MANY_REDIRECTS	curl/curl.h	/^  CURLE_TOO_MANY_REDIRECTS,      \/* 47 - catch endless re-direct loops *\/$/;"	e	enum:__anon15
CURLE_UNKNOWN_OPTION	curl/curl.h	/^  CURLE_UNKNOWN_OPTION,          \/* 48 - User specified an unknown option *\/$/;"	e	enum:__anon15
CURLE_UNKNOWN_TELNET_OPTION	curl/curl.h	634;"	d
CURLE_UNSUPPORTED_PROTOCOL	curl/curl.h	/^  CURLE_UNSUPPORTED_PROTOCOL,    \/* 1 *\/$/;"	e	enum:__anon15
CURLE_UPLOAD_FAILED	curl/curl.h	/^  CURLE_UPLOAD_FAILED,           \/* 25 - failed upload "command" *\/$/;"	e	enum:__anon15
CURLE_URL_MALFORMAT	curl/curl.h	/^  CURLE_URL_MALFORMAT,           \/* 3 *\/$/;"	e	enum:__anon15
CURLE_URL_MALFORMAT_USER	curl/curl.h	654;"	d
CURLE_USE_SSL_FAILED	curl/curl.h	/^  CURLE_USE_SSL_FAILED,          \/* 64 - Requested FTP SSL level failed *\/$/;"	e	enum:__anon15
CURLE_WEIRD_SERVER_REPLY	curl/curl.h	/^  CURLE_WEIRD_SERVER_REPLY,      \/* 8 *\/$/;"	e	enum:__anon15
CURLE_WRITE_ERROR	curl/curl.h	/^  CURLE_WRITE_ERROR,             \/* 23 *\/$/;"	e	enum:__anon15
CURLFILETYPE_DEVICE_BLOCK	curl/curl.h	/^  CURLFILETYPE_DEVICE_BLOCK,$/;"	e	enum:__anon9
CURLFILETYPE_DEVICE_CHAR	curl/curl.h	/^  CURLFILETYPE_DEVICE_CHAR,$/;"	e	enum:__anon9
CURLFILETYPE_DIRECTORY	curl/curl.h	/^  CURLFILETYPE_DIRECTORY,$/;"	e	enum:__anon9
CURLFILETYPE_DOOR	curl/curl.h	/^  CURLFILETYPE_DOOR, \/* is possible only on Sun Solaris now *\/$/;"	e	enum:__anon9
CURLFILETYPE_FILE	curl/curl.h	/^  CURLFILETYPE_FILE = 0,$/;"	e	enum:__anon9
CURLFILETYPE_NAMEDPIPE	curl/curl.h	/^  CURLFILETYPE_NAMEDPIPE,$/;"	e	enum:__anon9
CURLFILETYPE_SOCKET	curl/curl.h	/^  CURLFILETYPE_SOCKET,$/;"	e	enum:__anon9
CURLFILETYPE_SYMLINK	curl/curl.h	/^  CURLFILETYPE_SYMLINK,$/;"	e	enum:__anon9
CURLFILETYPE_UNKNOWN	curl/curl.h	/^  CURLFILETYPE_UNKNOWN \/* should never occur *\/$/;"	e	enum:__anon9
CURLFINFOFLAG_KNOWN_FILENAME	curl/curl.h	284;"	d
CURLFINFOFLAG_KNOWN_FILETYPE	curl/curl.h	285;"	d
CURLFINFOFLAG_KNOWN_GID	curl/curl.h	289;"	d
CURLFINFOFLAG_KNOWN_HLINKCOUNT	curl/curl.h	291;"	d
CURLFINFOFLAG_KNOWN_PERM	curl/curl.h	287;"	d
CURLFINFOFLAG_KNOWN_SIZE	curl/curl.h	290;"	d
CURLFINFOFLAG_KNOWN_TIME	curl/curl.h	286;"	d
CURLFINFOFLAG_KNOWN_UID	curl/curl.h	288;"	d
CURLFORM_ARRAY	curl/curl.h	/^  CURLFORM_ARRAY,$/;"	e	enum:__anon28
CURLFORM_BUFFER	curl/curl.h	/^  CURLFORM_BUFFER,$/;"	e	enum:__anon28
CURLFORM_BUFFERLENGTH	curl/curl.h	/^  CURLFORM_BUFFERLENGTH,$/;"	e	enum:__anon28
CURLFORM_BUFFERPTR	curl/curl.h	/^  CURLFORM_BUFFERPTR,$/;"	e	enum:__anon28
CURLFORM_CONTENTHEADER	curl/curl.h	/^  CURLFORM_CONTENTHEADER,$/;"	e	enum:__anon28
CURLFORM_CONTENTLEN	curl/curl.h	/^  CURLFORM_CONTENTLEN, \/* added in 7.46.0, provide a curl_off_t length *\/$/;"	e	enum:__anon28
CURLFORM_CONTENTSLENGTH	curl/curl.h	/^  CURLFORM_CONTENTSLENGTH,$/;"	e	enum:__anon28
CURLFORM_CONTENTTYPE	curl/curl.h	/^  CURLFORM_CONTENTTYPE,$/;"	e	enum:__anon28
CURLFORM_COPYCONTENTS	curl/curl.h	/^  CURLFORM_COPYCONTENTS,$/;"	e	enum:__anon28
CURLFORM_COPYNAME	curl/curl.h	/^  CURLFORM_COPYNAME,$/;"	e	enum:__anon28
CURLFORM_END	curl/curl.h	/^  CURLFORM_END,$/;"	e	enum:__anon28
CURLFORM_FILE	curl/curl.h	/^  CURLFORM_FILE,$/;"	e	enum:__anon28
CURLFORM_FILECONTENT	curl/curl.h	/^  CURLFORM_FILECONTENT,$/;"	e	enum:__anon28
CURLFORM_FILENAME	curl/curl.h	/^  CURLFORM_FILENAME,$/;"	e	enum:__anon28
CURLFORM_LASTENTRY	curl/curl.h	/^  CURLFORM_LASTENTRY \/* the last unused *\/$/;"	e	enum:__anon28
CURLFORM_NAMELENGTH	curl/curl.h	/^  CURLFORM_NAMELENGTH,$/;"	e	enum:__anon28
CURLFORM_NOTHING	curl/curl.h	/^  CURLFORM_NOTHING,        \/********* the first one is unused ************\/$/;"	e	enum:__anon28
CURLFORM_OBSOLETE	curl/curl.h	/^  CURLFORM_OBSOLETE,$/;"	e	enum:__anon28
CURLFORM_OBSOLETE2	curl/curl.h	/^  CURLFORM_OBSOLETE2,$/;"	e	enum:__anon28
CURLFORM_PTRCONTENTS	curl/curl.h	/^  CURLFORM_PTRCONTENTS,$/;"	e	enum:__anon28
CURLFORM_PTRNAME	curl/curl.h	/^  CURLFORM_PTRNAME,$/;"	e	enum:__anon28
CURLFORM_STREAM	curl/curl.h	/^  CURLFORM_STREAM,$/;"	e	enum:__anon28
CURLFORMcode	curl/curl.h	/^} CURLFORMcode;$/;"	t	typeref:enum:__anon29
CURLFTPAUTH_DEFAULT	curl/curl.h	/^  CURLFTPAUTH_DEFAULT, \/* let libcurl decide *\/$/;"	e	enum:__anon19
CURLFTPAUTH_LAST	curl/curl.h	/^  CURLFTPAUTH_LAST \/* not an option, never use *\/$/;"	e	enum:__anon19
CURLFTPAUTH_SSL	curl/curl.h	/^  CURLFTPAUTH_SSL,     \/* use "AUTH SSL" *\/$/;"	e	enum:__anon19
CURLFTPAUTH_TLS	curl/curl.h	/^  CURLFTPAUTH_TLS,     \/* use "AUTH TLS" *\/$/;"	e	enum:__anon19
CURLFTPMETHOD_DEFAULT	curl/curl.h	/^  CURLFTPMETHOD_DEFAULT,   \/* let libcurl pick *\/$/;"	e	enum:__anon21
CURLFTPMETHOD_LAST	curl/curl.h	/^  CURLFTPMETHOD_LAST       \/* not an option, never use *\/$/;"	e	enum:__anon21
CURLFTPMETHOD_MULTICWD	curl/curl.h	/^  CURLFTPMETHOD_MULTICWD,  \/* single CWD operation for each path part *\/$/;"	e	enum:__anon21
CURLFTPMETHOD_NOCWD	curl/curl.h	/^  CURLFTPMETHOD_NOCWD,     \/* no CWD at all *\/$/;"	e	enum:__anon21
CURLFTPMETHOD_SINGLECWD	curl/curl.h	/^  CURLFTPMETHOD_SINGLECWD, \/* one CWD to full dir, then work on file *\/$/;"	e	enum:__anon21
CURLFTPSSL_ALL	curl/curl.h	858;"	d
CURLFTPSSL_CCC_ACTIVE	curl/curl.h	/^  CURLFTPSSL_CCC_ACTIVE,  \/* Initiate the shutdown *\/$/;"	e	enum:__anon18
CURLFTPSSL_CCC_LAST	curl/curl.h	/^  CURLFTPSSL_CCC_LAST     \/* not an option, never use *\/$/;"	e	enum:__anon18
CURLFTPSSL_CCC_NONE	curl/curl.h	/^  CURLFTPSSL_CCC_NONE,    \/* do not send CCC *\/$/;"	e	enum:__anon18
CURLFTPSSL_CCC_PASSIVE	curl/curl.h	/^  CURLFTPSSL_CCC_PASSIVE, \/* Let the server initiate the shutdown *\/$/;"	e	enum:__anon18
CURLFTPSSL_CONTROL	curl/curl.h	857;"	d
CURLFTPSSL_LAST	curl/curl.h	859;"	d
CURLFTPSSL_NONE	curl/curl.h	855;"	d
CURLFTPSSL_TRY	curl/curl.h	856;"	d
CURLFTP_CREATE_DIR	curl/curl.h	/^  CURLFTP_CREATE_DIR,       \/* (FTP\/SFTP) if CWD fails, try MKD and then CWD$/;"	e	enum:__anon20
CURLFTP_CREATE_DIR_LAST	curl/curl.h	/^  CURLFTP_CREATE_DIR_LAST   \/* not an option, never use *\/$/;"	e	enum:__anon20
CURLFTP_CREATE_DIR_NONE	curl/curl.h	/^  CURLFTP_CREATE_DIR_NONE,  \/* do NOT create missing dirs! *\/$/;"	e	enum:__anon20
CURLFTP_CREATE_DIR_RETRY	curl/curl.h	/^  CURLFTP_CREATE_DIR_RETRY, \/* (FTP only) if CWD fails, try MKD and then CWD$/;"	e	enum:__anon20
CURLGSSAPI_DELEGATION_FLAG	curl/curl.h	763;"	d
CURLGSSAPI_DELEGATION_NONE	curl/curl.h	761;"	d
CURLGSSAPI_DELEGATION_POLICY_FLAG	curl/curl.h	762;"	d
CURLHEADER_SEPARATE	curl/curl.h	901;"	d
CURLHEADER_UNIFIED	curl/curl.h	900;"	d
CURLINC_CURLVER_H	curl/curlver.h	2;"	d
CURLINC_CURL_H	curl/curl.h	2;"	d
CURLINC_EASY_H	curl/easy.h	2;"	d
CURLINC_MPRINTF_H	curl/mprintf.h	2;"	d
CURLINC_MULTI_H	curl/multi.h	2;"	d
CURLINC_OFF_T_C_HLPR1	curl/system.h	488;"	d
CURLINC_OFF_T_C_HLPR1	curl/system.h	499;"	d
CURLINC_OFF_T_C_HLPR2	curl/system.h	487;"	d
CURLINC_OFF_T_C_HLPR2	curl/system.h	495;"	d
CURLINC_OFF_T_C_HLPR2	curl/system.h	497;"	d
CURLINC_STDCHEADERS_H	curl/stdcheaders.h	2;"	d
CURLINC_SYSTEM_H	curl/system.h	2;"	d
CURLINC_TYPECHECK_GCC_H	curl/typecheck-gcc.h	2;"	d
CURLINC_URLAPI_H	curl/urlapi.h	2;"	d
CURLINFO	curl/curl.h	/^} CURLINFO;$/;"	t	typeref:enum:__anon32
CURLINFO_ACTIVESOCKET	curl/curl.h	/^  CURLINFO_ACTIVESOCKET     = CURLINFO_SOCKET + 44,$/;"	e	enum:__anon32
CURLINFO_APPCONNECT_TIME	curl/curl.h	/^  CURLINFO_APPCONNECT_TIME  = CURLINFO_DOUBLE + 33,$/;"	e	enum:__anon32
CURLINFO_APPCONNECT_TIME_T	curl/curl.h	/^  CURLINFO_APPCONNECT_TIME_T = CURLINFO_OFF_T + 56,$/;"	e	enum:__anon32
CURLINFO_CERTINFO	curl/curl.h	/^  CURLINFO_CERTINFO         = CURLINFO_PTR    + 34,$/;"	e	enum:__anon32
CURLINFO_CONDITION_UNMET	curl/curl.h	/^  CURLINFO_CONDITION_UNMET  = CURLINFO_LONG   + 35,$/;"	e	enum:__anon32
CURLINFO_CONNECT_TIME	curl/curl.h	/^  CURLINFO_CONNECT_TIME     = CURLINFO_DOUBLE + 5,$/;"	e	enum:__anon32
CURLINFO_CONNECT_TIME_T	curl/curl.h	/^  CURLINFO_CONNECT_TIME_T   = CURLINFO_OFF_T + 52,$/;"	e	enum:__anon32
CURLINFO_CONTENT_LENGTH_DOWNLOAD	curl/curl.h	/^  CURLINFO_CONTENT_LENGTH_DOWNLOAD   = CURLINFO_DOUBLE + 15,$/;"	e	enum:__anon32
CURLINFO_CONTENT_LENGTH_DOWNLOAD_T	curl/curl.h	/^  CURLINFO_CONTENT_LENGTH_DOWNLOAD_T = CURLINFO_OFF_T  + 15,$/;"	e	enum:__anon32
CURLINFO_CONTENT_LENGTH_UPLOAD	curl/curl.h	/^  CURLINFO_CONTENT_LENGTH_UPLOAD     = CURLINFO_DOUBLE + 16,$/;"	e	enum:__anon32
CURLINFO_CONTENT_LENGTH_UPLOAD_T	curl/curl.h	/^  CURLINFO_CONTENT_LENGTH_UPLOAD_T   = CURLINFO_OFF_T  + 16,$/;"	e	enum:__anon32
CURLINFO_CONTENT_TYPE	curl/curl.h	/^  CURLINFO_CONTENT_TYPE     = CURLINFO_STRING + 18,$/;"	e	enum:__anon32
CURLINFO_COOKIELIST	curl/curl.h	/^  CURLINFO_COOKIELIST       = CURLINFO_SLIST  + 28,$/;"	e	enum:__anon32
CURLINFO_DATA_IN	curl/curl.h	/^  CURLINFO_DATA_IN,      \/* 3 *\/$/;"	e	enum:__anon14
CURLINFO_DATA_OUT	curl/curl.h	/^  CURLINFO_DATA_OUT,     \/* 4 *\/$/;"	e	enum:__anon14
CURLINFO_DOUBLE	curl/curl.h	2554;"	d
CURLINFO_EFFECTIVE_URL	curl/curl.h	/^  CURLINFO_EFFECTIVE_URL    = CURLINFO_STRING + 1,$/;"	e	enum:__anon32
CURLINFO_END	curl/curl.h	/^  CURLINFO_END$/;"	e	enum:__anon14
CURLINFO_FILETIME	curl/curl.h	/^  CURLINFO_FILETIME         = CURLINFO_LONG   + 14,$/;"	e	enum:__anon32
CURLINFO_FILETIME_T	curl/curl.h	/^  CURLINFO_FILETIME_T       = CURLINFO_OFF_T  + 14,$/;"	e	enum:__anon32
CURLINFO_FTP_ENTRY_PATH	curl/curl.h	/^  CURLINFO_FTP_ENTRY_PATH   = CURLINFO_STRING + 30,$/;"	e	enum:__anon32
CURLINFO_HEADER_IN	curl/curl.h	/^  CURLINFO_HEADER_IN,    \/* 1 *\/$/;"	e	enum:__anon14
CURLINFO_HEADER_OUT	curl/curl.h	/^  CURLINFO_HEADER_OUT,   \/* 2 *\/$/;"	e	enum:__anon14
CURLINFO_HEADER_SIZE	curl/curl.h	/^  CURLINFO_HEADER_SIZE      = CURLINFO_LONG   + 11,$/;"	e	enum:__anon32
CURLINFO_HTTPAUTH_AVAIL	curl/curl.h	/^  CURLINFO_HTTPAUTH_AVAIL   = CURLINFO_LONG   + 23,$/;"	e	enum:__anon32
CURLINFO_HTTP_CODE	curl/curl.h	2638;"	d
CURLINFO_HTTP_CONNECTCODE	curl/curl.h	/^  CURLINFO_HTTP_CONNECTCODE = CURLINFO_LONG   + 22,$/;"	e	enum:__anon32
CURLINFO_HTTP_VERSION	curl/curl.h	/^  CURLINFO_HTTP_VERSION     = CURLINFO_LONG   + 46,$/;"	e	enum:__anon32
CURLINFO_LASTONE	curl/curl.h	/^  CURLINFO_LASTONE          = 57$/;"	e	enum:__anon32
CURLINFO_LASTSOCKET	curl/curl.h	/^  CURLINFO_LASTSOCKET       = CURLINFO_LONG   + 29,$/;"	e	enum:__anon32
CURLINFO_LOCAL_IP	curl/curl.h	/^  CURLINFO_LOCAL_IP         = CURLINFO_STRING + 41,$/;"	e	enum:__anon32
CURLINFO_LOCAL_PORT	curl/curl.h	/^  CURLINFO_LOCAL_PORT       = CURLINFO_LONG   + 42,$/;"	e	enum:__anon32
CURLINFO_LONG	curl/curl.h	2553;"	d
CURLINFO_MASK	curl/curl.h	2559;"	d
CURLINFO_NAMELOOKUP_TIME	curl/curl.h	/^  CURLINFO_NAMELOOKUP_TIME  = CURLINFO_DOUBLE + 4,$/;"	e	enum:__anon32
CURLINFO_NAMELOOKUP_TIME_T	curl/curl.h	/^  CURLINFO_NAMELOOKUP_TIME_T = CURLINFO_OFF_T + 51,$/;"	e	enum:__anon32
CURLINFO_NONE	curl/curl.h	/^  CURLINFO_NONE, \/* first, never use this *\/$/;"	e	enum:__anon32
CURLINFO_NUM_CONNECTS	curl/curl.h	/^  CURLINFO_NUM_CONNECTS     = CURLINFO_LONG   + 26,$/;"	e	enum:__anon32
CURLINFO_OFF_T	curl/curl.h	2558;"	d
CURLINFO_OS_ERRNO	curl/curl.h	/^  CURLINFO_OS_ERRNO         = CURLINFO_LONG   + 25,$/;"	e	enum:__anon32
CURLINFO_PRETRANSFER_TIME	curl/curl.h	/^  CURLINFO_PRETRANSFER_TIME = CURLINFO_DOUBLE + 6,$/;"	e	enum:__anon32
CURLINFO_PRETRANSFER_TIME_T	curl/curl.h	/^  CURLINFO_PRETRANSFER_TIME_T = CURLINFO_OFF_T + 53,$/;"	e	enum:__anon32
CURLINFO_PRIMARY_IP	curl/curl.h	/^  CURLINFO_PRIMARY_IP       = CURLINFO_STRING + 32,$/;"	e	enum:__anon32
CURLINFO_PRIMARY_PORT	curl/curl.h	/^  CURLINFO_PRIMARY_PORT     = CURLINFO_LONG   + 40,$/;"	e	enum:__anon32
CURLINFO_PRIVATE	curl/curl.h	/^  CURLINFO_PRIVATE          = CURLINFO_STRING + 21,$/;"	e	enum:__anon32
CURLINFO_PROTOCOL	curl/curl.h	/^  CURLINFO_PROTOCOL         = CURLINFO_LONG   + 48,$/;"	e	enum:__anon32
CURLINFO_PROXYAUTH_AVAIL	curl/curl.h	/^  CURLINFO_PROXYAUTH_AVAIL  = CURLINFO_LONG   + 24,$/;"	e	enum:__anon32
CURLINFO_PROXY_SSL_VERIFYRESULT	curl/curl.h	/^  CURLINFO_PROXY_SSL_VERIFYRESULT = CURLINFO_LONG + 47,$/;"	e	enum:__anon32
CURLINFO_PTR	curl/curl.h	2556;"	d
CURLINFO_REDIRECT_COUNT	curl/curl.h	/^  CURLINFO_REDIRECT_COUNT   = CURLINFO_LONG   + 20,$/;"	e	enum:__anon32
CURLINFO_REDIRECT_TIME	curl/curl.h	/^  CURLINFO_REDIRECT_TIME    = CURLINFO_DOUBLE + 19,$/;"	e	enum:__anon32
CURLINFO_REDIRECT_TIME_T	curl/curl.h	/^  CURLINFO_REDIRECT_TIME_T  = CURLINFO_OFF_T + 55,$/;"	e	enum:__anon32
CURLINFO_REDIRECT_URL	curl/curl.h	/^  CURLINFO_REDIRECT_URL     = CURLINFO_STRING + 31,$/;"	e	enum:__anon32
CURLINFO_REQUEST_SIZE	curl/curl.h	/^  CURLINFO_REQUEST_SIZE     = CURLINFO_LONG   + 12,$/;"	e	enum:__anon32
CURLINFO_RESPONSE_CODE	curl/curl.h	/^  CURLINFO_RESPONSE_CODE    = CURLINFO_LONG   + 2,$/;"	e	enum:__anon32
CURLINFO_RETRY_AFTER	curl/curl.h	/^  CURLINFO_RETRY_AFTER      = CURLINFO_OFF_T + 57,$/;"	e	enum:__anon32
CURLINFO_RTSP_CLIENT_CSEQ	curl/curl.h	/^  CURLINFO_RTSP_CLIENT_CSEQ = CURLINFO_LONG   + 37,$/;"	e	enum:__anon32
CURLINFO_RTSP_CSEQ_RECV	curl/curl.h	/^  CURLINFO_RTSP_CSEQ_RECV   = CURLINFO_LONG   + 39,$/;"	e	enum:__anon32
CURLINFO_RTSP_SERVER_CSEQ	curl/curl.h	/^  CURLINFO_RTSP_SERVER_CSEQ = CURLINFO_LONG   + 38,$/;"	e	enum:__anon32
CURLINFO_RTSP_SESSION_ID	curl/curl.h	/^  CURLINFO_RTSP_SESSION_ID  = CURLINFO_STRING + 36,$/;"	e	enum:__anon32
CURLINFO_SCHEME	curl/curl.h	/^  CURLINFO_SCHEME           = CURLINFO_STRING + 49,$/;"	e	enum:__anon32
CURLINFO_SIZE_DOWNLOAD	curl/curl.h	/^  CURLINFO_SIZE_DOWNLOAD    = CURLINFO_DOUBLE + 8,$/;"	e	enum:__anon32
CURLINFO_SIZE_DOWNLOAD_T	curl/curl.h	/^  CURLINFO_SIZE_DOWNLOAD_T  = CURLINFO_OFF_T  + 8,$/;"	e	enum:__anon32
CURLINFO_SIZE_UPLOAD	curl/curl.h	/^  CURLINFO_SIZE_UPLOAD      = CURLINFO_DOUBLE + 7,$/;"	e	enum:__anon32
CURLINFO_SIZE_UPLOAD_T	curl/curl.h	/^  CURLINFO_SIZE_UPLOAD_T    = CURLINFO_OFF_T  + 7,$/;"	e	enum:__anon32
CURLINFO_SLIST	curl/curl.h	2555;"	d
CURLINFO_SOCKET	curl/curl.h	2557;"	d
CURLINFO_SPEED_DOWNLOAD	curl/curl.h	/^  CURLINFO_SPEED_DOWNLOAD   = CURLINFO_DOUBLE + 9,$/;"	e	enum:__anon32
CURLINFO_SPEED_DOWNLOAD_T	curl/curl.h	/^  CURLINFO_SPEED_DOWNLOAD_T = CURLINFO_OFF_T  + 9,$/;"	e	enum:__anon32
CURLINFO_SPEED_UPLOAD	curl/curl.h	/^  CURLINFO_SPEED_UPLOAD     = CURLINFO_DOUBLE + 10,$/;"	e	enum:__anon32
CURLINFO_SPEED_UPLOAD_T	curl/curl.h	/^  CURLINFO_SPEED_UPLOAD_T   = CURLINFO_OFF_T  + 10,$/;"	e	enum:__anon32
CURLINFO_SSL_DATA_IN	curl/curl.h	/^  CURLINFO_SSL_DATA_IN,  \/* 5 *\/$/;"	e	enum:__anon14
CURLINFO_SSL_DATA_OUT	curl/curl.h	/^  CURLINFO_SSL_DATA_OUT, \/* 6 *\/$/;"	e	enum:__anon14
CURLINFO_SSL_ENGINES	curl/curl.h	/^  CURLINFO_SSL_ENGINES      = CURLINFO_SLIST  + 27,$/;"	e	enum:__anon32
CURLINFO_SSL_VERIFYRESULT	curl/curl.h	/^  CURLINFO_SSL_VERIFYRESULT = CURLINFO_LONG   + 13,$/;"	e	enum:__anon32
CURLINFO_STARTTRANSFER_TIME	curl/curl.h	/^  CURLINFO_STARTTRANSFER_TIME = CURLINFO_DOUBLE + 17,$/;"	e	enum:__anon32
CURLINFO_STARTTRANSFER_TIME_T	curl/curl.h	/^  CURLINFO_STARTTRANSFER_TIME_T = CURLINFO_OFF_T + 54,$/;"	e	enum:__anon32
CURLINFO_STRING	curl/curl.h	2552;"	d
CURLINFO_TEXT	curl/curl.h	/^  CURLINFO_TEXT = 0,$/;"	e	enum:__anon14
CURLINFO_TLS_SESSION	curl/curl.h	/^  CURLINFO_TLS_SESSION      = CURLINFO_PTR    + 43,$/;"	e	enum:__anon32
CURLINFO_TLS_SSL_PTR	curl/curl.h	/^  CURLINFO_TLS_SSL_PTR      = CURLINFO_PTR    + 45,$/;"	e	enum:__anon32
CURLINFO_TOTAL_TIME	curl/curl.h	/^  CURLINFO_TOTAL_TIME       = CURLINFO_DOUBLE + 3,$/;"	e	enum:__anon32
CURLINFO_TOTAL_TIME_T	curl/curl.h	/^  CURLINFO_TOTAL_TIME_T     = CURLINFO_OFF_T + 50,$/;"	e	enum:__anon32
CURLINFO_TYPEMASK	curl/curl.h	2560;"	d
CURLIOCMD_LAST	curl/curl.h	/^  CURLIOCMD_LAST         \/* never use *\/$/;"	e	enum:__anon13
CURLIOCMD_NOP	curl/curl.h	/^  CURLIOCMD_NOP,         \/* no operation *\/$/;"	e	enum:__anon13
CURLIOCMD_RESTARTREAD	curl/curl.h	/^  CURLIOCMD_RESTARTREAD, \/* restart the read stream from start *\/$/;"	e	enum:__anon13
CURLIOE_FAILRESTART	curl/curl.h	/^  CURLIOE_FAILRESTART,   \/* failed to restart the read *\/$/;"	e	enum:__anon12
CURLIOE_LAST	curl/curl.h	/^  CURLIOE_LAST           \/* never use *\/$/;"	e	enum:__anon12
CURLIOE_OK	curl/curl.h	/^  CURLIOE_OK,            \/* I\/O operation successful *\/$/;"	e	enum:__anon12
CURLIOE_UNKNOWNCMD	curl/curl.h	/^  CURLIOE_UNKNOWNCMD,    \/* command was unknown to callback *\/$/;"	e	enum:__anon12
CURLKHMATCH_LAST	curl/curl.h	/^  CURLKHMATCH_LAST      \/* not for use, only a marker for last-in-list *\/$/;"	e	enum:curl_khmatch
CURLKHMATCH_MISMATCH	curl/curl.h	/^  CURLKHMATCH_MISMATCH, \/* host found, key mismatch! *\/$/;"	e	enum:curl_khmatch
CURLKHMATCH_MISSING	curl/curl.h	/^  CURLKHMATCH_MISSING,  \/* no matching host\/key found *\/$/;"	e	enum:curl_khmatch
CURLKHMATCH_OK	curl/curl.h	/^  CURLKHMATCH_OK,       \/* match *\/$/;"	e	enum:curl_khmatch
CURLKHSTAT_DEFER	curl/curl.h	/^  CURLKHSTAT_DEFER,  \/* do not accept it, but we can't answer right now so$/;"	e	enum:curl_khstat
CURLKHSTAT_FINE	curl/curl.h	/^  CURLKHSTAT_FINE,$/;"	e	enum:curl_khstat
CURLKHSTAT_FINE_ADD_TO_FILE	curl/curl.h	/^  CURLKHSTAT_FINE_ADD_TO_FILE,$/;"	e	enum:curl_khstat
CURLKHSTAT_LAST	curl/curl.h	/^  CURLKHSTAT_LAST    \/* not for use, only a marker for last-in-list *\/$/;"	e	enum:curl_khstat
CURLKHSTAT_REJECT	curl/curl.h	/^  CURLKHSTAT_REJECT, \/* reject the connection, return an error *\/$/;"	e	enum:curl_khstat
CURLKHTYPE_DSS	curl/curl.h	/^  CURLKHTYPE_DSS,$/;"	e	enum:curl_khtype
CURLKHTYPE_ECDSA	curl/curl.h	/^  CURLKHTYPE_ECDSA,$/;"	e	enum:curl_khtype
CURLKHTYPE_ED25519	curl/curl.h	/^  CURLKHTYPE_ED25519$/;"	e	enum:curl_khtype
CURLKHTYPE_RSA	curl/curl.h	/^  CURLKHTYPE_RSA,$/;"	e	enum:curl_khtype
CURLKHTYPE_RSA1	curl/curl.h	/^  CURLKHTYPE_RSA1,$/;"	e	enum:curl_khtype
CURLKHTYPE_UNKNOWN	curl/curl.h	/^  CURLKHTYPE_UNKNOWN,$/;"	e	enum:curl_khtype
CURLM	curl/multi.h	/^typedef struct Curl_multi CURLM;$/;"	t	typeref:struct:Curl_multi
CURLM	curl/multi.h	/^typedef void CURLM;$/;"	t
CURLMOPT_LASTENTRY	curl/multi.h	/^  CURLMOPT_LASTENTRY \/* the last unused *\/$/;"	e	enum:__anon7
CURLMSG	curl/multi.h	/^} CURLMSG;$/;"	t	typeref:enum:__anon5
CURLMSG_DONE	curl/multi.h	/^  CURLMSG_DONE, \/* This easy handle has completed. 'result' contains$/;"	e	enum:__anon5
CURLMSG_LAST	curl/multi.h	/^  CURLMSG_LAST \/* last, not used *\/$/;"	e	enum:__anon5
CURLMSG_NONE	curl/multi.h	/^  CURLMSG_NONE, \/* first, not used *\/$/;"	e	enum:__anon5
CURLM_ADDED_ALREADY	curl/multi.h	/^  CURLM_ADDED_ALREADY,   \/* an easy handle already added to a multi handle was$/;"	e	enum:__anon4
CURLM_BAD_EASY_HANDLE	curl/multi.h	/^  CURLM_BAD_EASY_HANDLE, \/* an easy handle was not good\/valid *\/$/;"	e	enum:__anon4
CURLM_BAD_FUNCTION_ARGUMENT	curl/multi.h	/^  CURLM_BAD_FUNCTION_ARGUMENT,  \/* function called with a bad parameter *\/$/;"	e	enum:__anon4
CURLM_BAD_HANDLE	curl/multi.h	/^  CURLM_BAD_HANDLE,      \/* the passed-in handle is not a valid CURLM handle *\/$/;"	e	enum:__anon4
CURLM_BAD_SOCKET	curl/multi.h	/^  CURLM_BAD_SOCKET,      \/* the passed in socket argument did not match *\/$/;"	e	enum:__anon4
CURLM_CALL_MULTI_PERFORM	curl/multi.h	/^  CURLM_CALL_MULTI_PERFORM = -1, \/* please call curl_multi_perform() or$/;"	e	enum:__anon4
CURLM_CALL_MULTI_SOCKET	curl/multi.h	83;"	d
CURLM_INTERNAL_ERROR	curl/multi.h	/^  CURLM_INTERNAL_ERROR,  \/* this is a libcurl bug *\/$/;"	e	enum:__anon4
CURLM_LAST	curl/multi.h	/^  CURLM_LAST$/;"	e	enum:__anon4
CURLM_OK	curl/multi.h	/^  CURLM_OK,$/;"	e	enum:__anon4
CURLM_OUT_OF_MEMORY	curl/multi.h	/^  CURLM_OUT_OF_MEMORY,   \/* if you ever get this, you're in deep sh*t *\/$/;"	e	enum:__anon4
CURLM_RECURSIVE_API_CALL	curl/multi.h	/^  CURLM_RECURSIVE_API_CALL, \/* an api function was called from inside a$/;"	e	enum:__anon4
CURLM_UNKNOWN_OPTION	curl/multi.h	/^  CURLM_UNKNOWN_OPTION,  \/* curl_multi_setopt() with unsupported option *\/$/;"	e	enum:__anon4
CURLM_WAKEUP_FAILURE	curl/multi.h	/^  CURLM_WAKEUP_FAILURE,  \/* wakeup is unavailable or failed *\/$/;"	e	enum:__anon4
CURLMcode	curl/multi.h	/^} CURLMcode;$/;"	t	typeref:enum:__anon4
CURLMoption	curl/multi.h	/^} CURLMoption;$/;"	t	typeref:enum:__anon7
CURLMsg	curl/multi.h	/^struct CURLMsg {$/;"	s
CURLMsg	curl/multi.h	/^typedef struct CURLMsg CURLMsg;$/;"	t	typeref:struct:CURLMsg
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ABSTRACT_UNIX_SOCKET, CURLOPTTYPE_STRINGPOINT, 264),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ACCEPTTIMEOUT_MS, CURLOPTTYPE_LONG, 212),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ACCEPT_ENCODING, CURLOPTTYPE_STRINGPOINT, 102),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ADDRESS_SCOPE, CURLOPTTYPE_LONG, 171),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ALTSVC, CURLOPTTYPE_STRINGPOINT, 287),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ALTSVC_CTRL, CURLOPTTYPE_LONG, 286),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_APPEND, CURLOPTTYPE_LONG, 50),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_AUTOREFERER, CURLOPTTYPE_LONG, 58),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_BUFFERSIZE, CURLOPTTYPE_LONG, 98),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CAINFO, CURLOPTTYPE_STRINGPOINT, 65),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CAPATH, CURLOPTTYPE_STRINGPOINT, 97),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CERTINFO, CURLOPTTYPE_LONG, 172),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CHUNK_BGN_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 198),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CHUNK_DATA, CURLOPTTYPE_OBJECTPOINT, 201),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CHUNK_END_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 199),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CLOSESOCKETDATA, CURLOPTTYPE_OBJECTPOINT, 209),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CLOSESOCKETFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 208),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONNECTTIMEOUT, CURLOPTTYPE_LONG, 78),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONNECTTIMEOUT_MS, CURLOPTTYPE_LONG, 156),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONNECT_ONLY, CURLOPTTYPE_LONG, 141),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONNECT_TO, CURLOPTTYPE_SLISTPOINT, 243),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONV_FROM_NETWORK_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 142),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONV_FROM_UTF8_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 144),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CONV_TO_NETWORK_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 143),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_COOKIE, CURLOPTTYPE_STRINGPOINT, 22),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_COOKIEFILE, CURLOPTTYPE_STRINGPOINT, 31),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_COOKIEJAR, CURLOPTTYPE_STRINGPOINT, 82),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_COOKIELIST, CURLOPTTYPE_STRINGPOINT, 135),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_COOKIESESSION, CURLOPTTYPE_LONG, 96),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_COPYPOSTFIELDS, CURLOPTTYPE_OBJECTPOINT, 165),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CRLF, CURLOPTTYPE_LONG, 27),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CRLFILE, CURLOPTTYPE_STRINGPOINT, 169),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CURLU, CURLOPTTYPE_OBJECTPOINT, 282),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_CUSTOMREQUEST, CURLOPTTYPE_STRINGPOINT, 36),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DEBUGDATA, CURLOPTTYPE_OBJECTPOINT, 95),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DEBUGFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 94),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DEFAULT_PROTOCOL, CURLOPTTYPE_STRINGPOINT, 238),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DIRLISTONLY, CURLOPTTYPE_LONG, 48),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DISALLOW_USERNAME_IN_URL, CURLOPTTYPE_LONG, 278),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_CACHE_TIMEOUT, CURLOPTTYPE_LONG, 92),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_INTERFACE, CURLOPTTYPE_STRINGPOINT, 221),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_LOCAL_IP4, CURLOPTTYPE_STRINGPOINT, 222),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_LOCAL_IP6, CURLOPTTYPE_STRINGPOINT, 223),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_SERVERS, CURLOPTTYPE_STRINGPOINT, 211),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_SHUFFLE_ADDRESSES, CURLOPTTYPE_LONG, 275),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DNS_USE_GLOBAL_CACHE, CURLOPTTYPE_LONG, 91),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_DOH_URL, CURLOPTTYPE_STRINGPOINT, 279),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_EGDSOCKET, CURLOPTTYPE_STRINGPOINT, 77),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ERRORBUFFER, CURLOPTTYPE_OBJECTPOINT, 10),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_EXPECT_100_TIMEOUT_MS, CURLOPTTYPE_LONG, 227),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FAILONERROR, CURLOPTTYPE_LONG, 45),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FILETIME, CURLOPTTYPE_LONG, 69),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FNMATCH_DATA, CURLOPTTYPE_OBJECTPOINT, 202),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FNMATCH_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 200),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FOLLOWLOCATION, CURLOPTTYPE_LONG, 52),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FORBID_REUSE, CURLOPTTYPE_LONG, 75),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FRESH_CONNECT, CURLOPTTYPE_LONG, 74),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTPPORT, CURLOPTTYPE_STRINGPOINT, 17),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTPSSLAUTH, CURLOPTTYPE_LONG, 129),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_ACCOUNT, CURLOPTTYPE_STRINGPOINT, 134),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_ALTERNATIVE_TO_USER, CURLOPTTYPE_STRINGPOINT, 147),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_CREATE_MISSING_DIRS, CURLOPTTYPE_LONG, 110),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_FILEMETHOD, CURLOPTTYPE_LONG, 138),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_RESPONSE_TIMEOUT, CURLOPTTYPE_LONG, 112),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_SKIP_PASV_IP, CURLOPTTYPE_LONG, 137),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_SSL_CCC, CURLOPTTYPE_LONG, 154),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_USE_EPRT, CURLOPTTYPE_LONG, 106),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_USE_EPSV, CURLOPTTYPE_LONG, 85),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_FTP_USE_PRET, CURLOPTTYPE_LONG, 188),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_GSSAPI_DELEGATION, CURLOPTTYPE_LONG, 210),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS, CURLOPTTYPE_LONG, 271),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HAPROXYPROTOCOL, CURLOPTTYPE_LONG, 274),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HEADER, CURLOPTTYPE_LONG, 42),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HEADERDATA, CURLOPTTYPE_OBJECTPOINT, 29),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HEADERFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 79),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HEADEROPT, CURLOPTTYPE_LONG, 229),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTP09_ALLOWED, CURLOPTTYPE_LONG, 285),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTP200ALIASES, CURLOPTTYPE_SLISTPOINT, 104),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTPAUTH, CURLOPTTYPE_LONG, 107),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTPGET, CURLOPTTYPE_LONG, 80),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTPHEADER, CURLOPTTYPE_SLISTPOINT, 23),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTPPOST, CURLOPTTYPE_OBJECTPOINT, 24),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTPPROXYTUNNEL, CURLOPTTYPE_LONG, 61),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTP_CONTENT_DECODING, CURLOPTTYPE_LONG, 158),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTP_TRANSFER_DECODING, CURLOPTTYPE_LONG, 157),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_HTTP_VERSION, CURLOPTTYPE_LONG, 84),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_IGNORE_CONTENT_LENGTH, CURLOPTTYPE_LONG, 136),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_INFILESIZE, CURLOPTTYPE_LONG, 14),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_INFILESIZE_LARGE, CURLOPTTYPE_OFF_T, 115),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_INTERFACE, CURLOPTTYPE_STRINGPOINT, 62),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_INTERLEAVEDATA, CURLOPTTYPE_OBJECTPOINT, 195),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_INTERLEAVEFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 196),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_IOCTLDATA, CURLOPTTYPE_OBJECTPOINT, 131),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_IOCTLFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 130),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_IPRESOLVE, CURLOPTTYPE_LONG, 113),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_ISSUERCERT, CURLOPTTYPE_STRINGPOINT, 170),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_KEEP_SENDING_ON_ERROR, CURLOPTTYPE_LONG, 245),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_KEYPASSWD, CURLOPTTYPE_STRINGPOINT, 26),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_KRBLEVEL, CURLOPTTYPE_STRINGPOINT, 63),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_LOCALPORT, CURLOPTTYPE_LONG, 139),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_LOCALPORTRANGE, CURLOPTTYPE_LONG, 140),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_LOGIN_OPTIONS, CURLOPTTYPE_STRINGPOINT, 224),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_LOW_SPEED_LIMIT, CURLOPTTYPE_LONG, 19),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_LOW_SPEED_TIME, CURLOPTTYPE_LONG, 20),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAIL_AUTH, CURLOPTTYPE_STRINGPOINT, 217),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAIL_FROM, CURLOPTTYPE_STRINGPOINT, 186),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAIL_RCPT, CURLOPTTYPE_SLISTPOINT, 187),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAIL_RCPT_ALLLOWFAILS, CURLOPTTYPE_LONG, 290),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAXAGE_CONN, CURLOPTTYPE_LONG, 288),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAXCONNECTS, CURLOPTTYPE_LONG, 71),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAXFILESIZE, CURLOPTTYPE_LONG, 114),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAXFILESIZE_LARGE, CURLOPTTYPE_OFF_T, 117),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAXREDIRS, CURLOPTTYPE_LONG, 68),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAX_RECV_SPEED_LARGE, CURLOPTTYPE_OFF_T, 146),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MAX_SEND_SPEED_LARGE, CURLOPTTYPE_OFF_T, 145),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_MIMEPOST, CURLOPTTYPE_OBJECTPOINT, 269),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NETRC, CURLOPTTYPE_LONG, 51),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NETRC_FILE, CURLOPTTYPE_STRINGPOINT, 118),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NEW_DIRECTORY_PERMS, CURLOPTTYPE_LONG, 160),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NEW_FILE_PERMS, CURLOPTTYPE_LONG, 159),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NOBODY, CURLOPTTYPE_LONG, 44),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NOPROGRESS, CURLOPTTYPE_LONG, 43),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NOPROXY, CURLOPTTYPE_STRINGPOINT, 177),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_NOSIGNAL, CURLOPTTYPE_LONG, 99),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_OBSOLETE40, CURLOPTTYPE_OBJECTPOINT, 40),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_OBSOLETE72, CURLOPTTYPE_LONG, 72),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_OPENSOCKETDATA, CURLOPTTYPE_OBJECTPOINT, 164),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_OPENSOCKETFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 163),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PASSWORD, CURLOPTTYPE_STRINGPOINT, 174),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PATH_AS_IS, CURLOPTTYPE_LONG, 234),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PINNEDPUBLICKEY, CURLOPTTYPE_STRINGPOINT, 230),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PIPEWAIT, CURLOPTTYPE_LONG, 237),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PORT, CURLOPTTYPE_LONG, 3),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_POST, CURLOPTTYPE_LONG, 47),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_POSTFIELDS, CURLOPTTYPE_OBJECTPOINT, 15),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_POSTFIELDSIZE, CURLOPTTYPE_LONG, 60),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_POSTFIELDSIZE_LARGE, CURLOPTTYPE_OFF_T, 120),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_POSTQUOTE, CURLOPTTYPE_SLISTPOINT, 39),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_POSTREDIR, CURLOPTTYPE_LONG, 161),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PREQUOTE, CURLOPTTYPE_SLISTPOINT, 93),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PRE_PROXY, CURLOPTTYPE_STRINGPOINT, 262),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PRIVATE, CURLOPTTYPE_OBJECTPOINT, 103),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROGRESSDATA, CURLOPTTYPE_OBJECTPOINT, 57),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROGRESSFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 56),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROTOCOLS, CURLOPTTYPE_LONG, 181),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY, CURLOPTTYPE_STRINGPOINT, 4),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYAUTH, CURLOPTTYPE_LONG, 111),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYHEADER, CURLOPTTYPE_SLISTPOINT, 228),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYPASSWORD, CURLOPTTYPE_STRINGPOINT, 176),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYPORT, CURLOPTTYPE_LONG, 59),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYTYPE, CURLOPTTYPE_LONG, 101),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYUSERNAME, CURLOPTTYPE_STRINGPOINT, 175),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXYUSERPWD, CURLOPTTYPE_STRINGPOINT, 6),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_CAINFO, CURLOPTTYPE_STRINGPOINT, 246),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_CAPATH, CURLOPTTYPE_STRINGPOINT, 247),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_CRLFILE, CURLOPTTYPE_STRINGPOINT, 260),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_KEYPASSWD, CURLOPTTYPE_STRINGPOINT, 258),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_PINNEDPUBLICKEY, CURLOPTTYPE_STRINGPOINT, 263),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SERVICE_NAME, CURLOPTTYPE_STRINGPOINT, 235),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSLCERT, CURLOPTTYPE_STRINGPOINT, 254),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSLCERTTYPE, CURLOPTTYPE_STRINGPOINT, 255),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSLKEY, CURLOPTTYPE_STRINGPOINT, 256),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSLKEYTYPE, CURLOPTTYPE_STRINGPOINT, 257),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSLVERSION, CURLOPTTYPE_LONG, 250),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSL_CIPHER_LIST, CURLOPTTYPE_STRINGPOINT, 259),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSL_OPTIONS, CURLOPTTYPE_LONG, 261),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSL_VERIFYHOST, CURLOPTTYPE_LONG, 249),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_SSL_VERIFYPEER, CURLOPTTYPE_LONG, 248),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_TLS13_CIPHERS, CURLOPTTYPE_STRINGPOINT, 277),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_TLSAUTH_PASSWORD, CURLOPTTYPE_STRINGPOINT, 252),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_TLSAUTH_TYPE, CURLOPTTYPE_STRINGPOINT, 253),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_TLSAUTH_USERNAME, CURLOPTTYPE_STRINGPOINT, 251),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PROXY_TRANSFER_MODE, CURLOPTTYPE_LONG, 166),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_PUT, CURLOPTTYPE_LONG, 54),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_QUOTE, CURLOPTTYPE_SLISTPOINT, 28),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RANDOM_FILE, CURLOPTTYPE_STRINGPOINT, 76),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RANGE, CURLOPTTYPE_STRINGPOINT, 7),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_READDATA, CURLOPTTYPE_OBJECTPOINT, 9),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_READFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 12),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_REDIR_PROTOCOLS, CURLOPTTYPE_LONG, 182),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_REFERER, CURLOPTTYPE_STRINGPOINT, 16),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_REQUEST_TARGET, CURLOPTTYPE_STRINGPOINT, 266),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RESOLVE, CURLOPTTYPE_SLISTPOINT, 203),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RESOLVER_START_DATA, CURLOPTTYPE_OBJECTPOINT, 273),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RESOLVER_START_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 272),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RESUME_FROM, CURLOPTTYPE_LONG, 21),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RESUME_FROM_LARGE, CURLOPTTYPE_OFF_T, 116),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RTSP_CLIENT_CSEQ, CURLOPTTYPE_LONG, 193),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RTSP_REQUEST, CURLOPTTYPE_LONG, 189),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RTSP_SERVER_CSEQ, CURLOPTTYPE_LONG, 194),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RTSP_SESSION_ID, CURLOPTTYPE_STRINGPOINT, 190),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RTSP_STREAM_URI, CURLOPTTYPE_STRINGPOINT, 191),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_RTSP_TRANSPORT, CURLOPTTYPE_STRINGPOINT, 192),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SASL_AUTHZID, CURLOPTTYPE_STRINGPOINT, 289),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SASL_IR, CURLOPTTYPE_LONG, 218),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SEEKDATA, CURLOPTTYPE_OBJECTPOINT, 168),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SEEKFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 167),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SERVICE_NAME, CURLOPTTYPE_STRINGPOINT, 236),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SHARE, CURLOPTTYPE_OBJECTPOINT, 100),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SOCKOPTDATA, CURLOPTTYPE_OBJECTPOINT, 149),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SOCKOPTFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 148),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SOCKS5_AUTH, CURLOPTTYPE_LONG, 267),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SOCKS5_GSSAPI_NEC, CURLOPTTYPE_LONG, 180),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SOCKS5_GSSAPI_SERVICE, CURLOPTTYPE_STRINGPOINT, 179),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_AUTH_TYPES, CURLOPTTYPE_LONG, 151),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_COMPRESSION, CURLOPTTYPE_LONG, 268),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_HOST_PUBLIC_KEY_MD5, CURLOPTTYPE_STRINGPOINT, 162),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_KEYDATA, CURLOPTTYPE_OBJECTPOINT, 185),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_KEYFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 184),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_KNOWNHOSTS, CURLOPTTYPE_STRINGPOINT, 183),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_PRIVATE_KEYFILE, CURLOPTTYPE_STRINGPOINT, 153),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSH_PUBLIC_KEYFILE, CURLOPTTYPE_STRINGPOINT, 152),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLCERT, CURLOPTTYPE_STRINGPOINT, 25),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLCERTTYPE, CURLOPTTYPE_STRINGPOINT, 86),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLENGINE, CURLOPTTYPE_STRINGPOINT, 89),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLENGINE_DEFAULT, CURLOPTTYPE_LONG, 90),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLKEY, CURLOPTTYPE_STRINGPOINT, 87),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLKEYTYPE, CURLOPTTYPE_STRINGPOINT, 88),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSLVERSION, CURLOPTTYPE_LONG, 32),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_CIPHER_LIST, CURLOPTTYPE_STRINGPOINT, 83),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_CTX_DATA, CURLOPTTYPE_OBJECTPOINT, 109),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_CTX_FUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 108),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_ENABLE_ALPN, CURLOPTTYPE_LONG, 226),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_ENABLE_NPN, CURLOPTTYPE_LONG, 225),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_FALSESTART, CURLOPTTYPE_LONG, 233),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_OPTIONS, CURLOPTTYPE_LONG, 216),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_SESSIONID_CACHE, CURLOPTTYPE_LONG, 150),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_VERIFYHOST, CURLOPTTYPE_LONG, 81),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_VERIFYPEER, CURLOPTTYPE_LONG, 64),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SSL_VERIFYSTATUS, CURLOPTTYPE_LONG, 232),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_STDERR, CURLOPTTYPE_OBJECTPOINT, 37),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_STREAM_DEPENDS, CURLOPTTYPE_OBJECTPOINT, 240),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_STREAM_DEPENDS_E, CURLOPTTYPE_OBJECTPOINT, 241),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_STREAM_WEIGHT, CURLOPTTYPE_LONG, 239),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_SUPPRESS_CONNECT_HEADERS, CURLOPTTYPE_LONG, 265),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TCP_FASTOPEN, CURLOPTTYPE_LONG, 244),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TCP_KEEPALIVE, CURLOPTTYPE_LONG, 213),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TCP_KEEPIDLE, CURLOPTTYPE_LONG, 214),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TCP_KEEPINTVL, CURLOPTTYPE_LONG, 215),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TCP_NODELAY, CURLOPTTYPE_LONG, 121),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TELNETOPTIONS, CURLOPTTYPE_SLISTPOINT, 70),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TFTP_BLKSIZE, CURLOPTTYPE_LONG, 178),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TFTP_NO_OPTIONS, CURLOPTTYPE_LONG, 242),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TIMECONDITION, CURLOPTTYPE_LONG, 33),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TIMEOUT, CURLOPTTYPE_LONG, 13),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TIMEOUT_MS, CURLOPTTYPE_LONG, 155),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TIMEVALUE, CURLOPTTYPE_LONG, 34),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TIMEVALUE_LARGE, CURLOPTTYPE_OFF_T, 270),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TLS13_CIPHERS, CURLOPTTYPE_STRINGPOINT, 276),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TLSAUTH_PASSWORD, CURLOPTTYPE_STRINGPOINT, 205),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TLSAUTH_TYPE, CURLOPTTYPE_STRINGPOINT, 206),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TLSAUTH_USERNAME, CURLOPTTYPE_STRINGPOINT, 204),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TRAILERDATA, CURLOPTTYPE_OBJECTPOINT, 284),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TRAILERFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 283),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TRANSFERTEXT, CURLOPTTYPE_LONG, 53),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_TRANSFER_ENCODING, CURLOPTTYPE_LONG, 207),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_UNIX_SOCKET_PATH, CURLOPTTYPE_STRINGPOINT, 231),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_UNRESTRICTED_AUTH, CURLOPTTYPE_LONG, 105),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_UPKEEP_INTERVAL_MS, CURLOPTTYPE_LONG, 281),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_UPLOAD, CURLOPTTYPE_LONG, 46),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_UPLOAD_BUFFERSIZE, CURLOPTTYPE_LONG, 280),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_URL, CURLOPTTYPE_STRINGPOINT, 2),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_USERAGENT, CURLOPTTYPE_STRINGPOINT, 18),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_USERNAME, CURLOPTTYPE_STRINGPOINT, 173),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_USERPWD, CURLOPTTYPE_STRINGPOINT, 5),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_USE_SSL, CURLOPTTYPE_LONG, 119),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_VERBOSE, CURLOPTTYPE_LONG, 41),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_WILDCARDMATCH, CURLOPTTYPE_LONG, 197),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_WRITEDATA, CURLOPTTYPE_OBJECTPOINT, 1),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_WRITEFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 11),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_XFERINFOFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 219),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	/^  CURLOPT(CURLOPT_XOAUTH2_BEARER, CURLOPTTYPE_STRINGPOINT, 220),$/;"	e	enum:__anon22
CURLOPT	curl/curl.h	954;"	d
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE, CURLOPTTYPE_OFF_T, 10),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE, CURLOPTTYPE_OFF_T, 9),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_MAXCONNECTS, CURLOPTTYPE_LONG, 6),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_MAX_CONCURRENT_STREAMS, CURLOPTTYPE_LONG, 16),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_MAX_HOST_CONNECTIONS, CURLOPTTYPE_LONG, 7),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_MAX_PIPELINE_LENGTH, CURLOPTTYPE_LONG, 8),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_MAX_TOTAL_CONNECTIONS, CURLOPTTYPE_LONG, 13),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_PIPELINING, CURLOPTTYPE_LONG, 3),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_PIPELINING_SERVER_BL, CURLOPTTYPE_OBJECTPOINT, 12),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_PIPELINING_SITE_BL, CURLOPTTYPE_OBJECTPOINT, 11),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_PUSHDATA, CURLOPTTYPE_OBJECTPOINT, 15),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_PUSHFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 14),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_SOCKETDATA, CURLOPTTYPE_OBJECTPOINT, 2),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_SOCKETFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 1),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_TIMERDATA, CURLOPTTYPE_OBJECTPOINT, 5),$/;"	e	enum:__anon7
CURLOPT	curl/multi.h	/^  CURLOPT(CURLMOPT_TIMERFUNCTION, CURLOPTTYPE_FUNCTIONPOINT, 4),$/;"	e	enum:__anon7
CURLOPTTYPE_FUNCTIONPOINT	curl/curl.h	947;"	d
CURLOPTTYPE_LONG	curl/curl.h	945;"	d
CURLOPTTYPE_OBJECTPOINT	curl/curl.h	946;"	d
CURLOPTTYPE_OFF_T	curl/curl.h	948;"	d
CURLOPTTYPE_SLISTPOINT	curl/curl.h	958;"	d
CURLOPTTYPE_STRINGPOINT	curl/curl.h	957;"	d
CURLOPT_CLOSEPOLICY	curl/curl.h	688;"	d
CURLOPT_DNS_USE_GLOBAL_CACHE	curl/curl.h	1985;"	d
CURLOPT_ENCODING	curl/curl.h	627;"	d
CURLOPT_FILE	curl/curl.h	681;"	d
CURLOPT_FTPAPPEND	curl/curl.h	1974;"	d
CURLOPT_FTPLISTONLY	curl/curl.h	1975;"	d
CURLOPT_FTP_SSL	curl/curl.h	1976;"	d
CURLOPT_INFILE	curl/curl.h	682;"	d
CURLOPT_KRB4LEVEL	curl/curl.h	1981;"	d
CURLOPT_LASTENTRY	curl/curl.h	/^  CURLOPT_LASTENTRY \/* the last unused *\/$/;"	e	enum:__anon22
CURLOPT_POST301	curl/curl.h	1968;"	d
CURLOPT_RTSPHEADER	curl/curl.h	1998;"	d
CURLOPT_SERVER_RESPONSE_TIMEOUT	curl/curl.h	1370;"	d
CURLOPT_SSLCERTPASSWD	curl/curl.h	1980;"	d
CURLOPT_SSLKEYPASSWD	curl/curl.h	1973;"	d
CURLOPT_WRITEHEADER	curl/curl.h	683;"	d
CURLOPT_WRITEINFO	curl/curl.h	687;"	d
CURLOPT_XFERINFODATA	curl/curl.h	1161;"	d
CURLPAUSE_ALL	curl/curl.h	2871;"	d
CURLPAUSE_CONT	curl/curl.h	2872;"	d
CURLPAUSE_RECV	curl/curl.h	2865;"	d
CURLPAUSE_RECV_CONT	curl/curl.h	2866;"	d
CURLPAUSE_SEND	curl/curl.h	2868;"	d
CURLPAUSE_SEND_CONT	curl/curl.h	2869;"	d
CURLPIPE_HTTP1	curl/multi.h	87;"	d
CURLPIPE_MULTIPLEX	curl/multi.h	88;"	d
CURLPIPE_NOTHING	curl/multi.h	86;"	d
CURLPROTO_ALL	curl/curl.h	941;"	d
CURLPROTO_DICT	curl/curl.h	921;"	d
CURLPROTO_FILE	curl/curl.h	922;"	d
CURLPROTO_FTP	curl/curl.h	914;"	d
CURLPROTO_FTPS	curl/curl.h	915;"	d
CURLPROTO_GOPHER	curl/curl.h	937;"	d
CURLPROTO_HTTP	curl/curl.h	912;"	d
CURLPROTO_HTTPS	curl/curl.h	913;"	d
CURLPROTO_IMAP	curl/curl.h	924;"	d
CURLPROTO_IMAPS	curl/curl.h	925;"	d
CURLPROTO_LDAP	curl/curl.h	919;"	d
CURLPROTO_LDAPS	curl/curl.h	920;"	d
CURLPROTO_MQTT	curl/curl.h	940;"	d
CURLPROTO_POP3	curl/curl.h	926;"	d
CURLPROTO_POP3S	curl/curl.h	927;"	d
CURLPROTO_RTMP	curl/curl.h	931;"	d
CURLPROTO_RTMPE	curl/curl.h	933;"	d
CURLPROTO_RTMPS	curl/curl.h	935;"	d
CURLPROTO_RTMPT	curl/curl.h	932;"	d
CURLPROTO_RTMPTE	curl/curl.h	934;"	d
CURLPROTO_RTMPTS	curl/curl.h	936;"	d
CURLPROTO_RTSP	curl/curl.h	930;"	d
CURLPROTO_SCP	curl/curl.h	916;"	d
CURLPROTO_SFTP	curl/curl.h	917;"	d
CURLPROTO_SMB	curl/curl.h	938;"	d
CURLPROTO_SMBS	curl/curl.h	939;"	d
CURLPROTO_SMTP	curl/curl.h	928;"	d
CURLPROTO_SMTPS	curl/curl.h	929;"	d
CURLPROTO_TELNET	curl/curl.h	918;"	d
CURLPROTO_TFTP	curl/curl.h	923;"	d
CURLPROXY_HTTP	curl/curl.h	/^  CURLPROXY_HTTP = 0,   \/* added in 7.10, new in 7.19.4 default is to use$/;"	e	enum:__anon16
CURLPROXY_HTTPS	curl/curl.h	/^  CURLPROXY_HTTPS = 2, \/* added in 7.52.0 *\/$/;"	e	enum:__anon16
CURLPROXY_HTTP_1_0	curl/curl.h	/^  CURLPROXY_HTTP_1_0 = 1,   \/* added in 7.19.4, force to use CONNECT$/;"	e	enum:__anon16
CURLPROXY_SOCKS4	curl/curl.h	/^  CURLPROXY_SOCKS4 = 4, \/* support added in 7.15.2, enum existed already$/;"	e	enum:__anon16
CURLPROXY_SOCKS4A	curl/curl.h	/^  CURLPROXY_SOCKS4A = 6, \/* added in 7.18.0 *\/$/;"	e	enum:__anon16
CURLPROXY_SOCKS5	curl/curl.h	/^  CURLPROXY_SOCKS5 = 5, \/* added in 7.10 *\/$/;"	e	enum:__anon16
CURLPROXY_SOCKS5_HOSTNAME	curl/curl.h	/^  CURLPROXY_SOCKS5_HOSTNAME = 7 \/* Use the SOCKS5 protocol but pass along the$/;"	e	enum:__anon16
CURLSH	curl/curl.h	/^typedef struct Curl_share CURLSH;$/;"	t	typeref:struct:Curl_share
CURLSH	curl/curl.h	/^typedef void CURLSH;$/;"	t
CURLSHE_BAD_OPTION	curl/curl.h	/^  CURLSHE_BAD_OPTION, \/* 1 *\/$/;"	e	enum:__anon36
CURLSHE_INVALID	curl/curl.h	/^  CURLSHE_INVALID,    \/* 3 *\/$/;"	e	enum:__anon36
CURLSHE_IN_USE	curl/curl.h	/^  CURLSHE_IN_USE,     \/* 2 *\/$/;"	e	enum:__anon36
CURLSHE_LAST	curl/curl.h	/^  CURLSHE_LAST        \/* never use *\/$/;"	e	enum:__anon36
CURLSHE_NOMEM	curl/curl.h	/^  CURLSHE_NOMEM,      \/* 4 out of memory *\/$/;"	e	enum:__anon36
CURLSHE_NOT_BUILT_IN	curl/curl.h	/^  CURLSHE_NOT_BUILT_IN, \/* 5 feature not present in lib *\/$/;"	e	enum:__anon36
CURLSHE_OK	curl/curl.h	/^  CURLSHE_OK,  \/* all is fine *\/$/;"	e	enum:__anon36
CURLSHOPT_LAST	curl/curl.h	/^  CURLSHOPT_LAST  \/* never use *\/$/;"	e	enum:__anon37
CURLSHOPT_LOCKFUNC	curl/curl.h	/^  CURLSHOPT_LOCKFUNC,   \/* pass in a 'curl_lock_function' pointer *\/$/;"	e	enum:__anon37
CURLSHOPT_NONE	curl/curl.h	/^  CURLSHOPT_NONE,  \/* don't use *\/$/;"	e	enum:__anon37
CURLSHOPT_SHARE	curl/curl.h	/^  CURLSHOPT_SHARE,   \/* specify a data type to share *\/$/;"	e	enum:__anon37
CURLSHOPT_UNLOCKFUNC	curl/curl.h	/^  CURLSHOPT_UNLOCKFUNC, \/* pass in a 'curl_unlock_function' pointer *\/$/;"	e	enum:__anon37
CURLSHOPT_UNSHARE	curl/curl.h	/^  CURLSHOPT_UNSHARE, \/* specify which data type to stop sharing *\/$/;"	e	enum:__anon37
CURLSHOPT_USERDATA	curl/curl.h	/^  CURLSHOPT_USERDATA,   \/* pass in a user data pointer used in the lock\/unlock$/;"	e	enum:__anon37
CURLSHcode	curl/curl.h	/^} CURLSHcode;$/;"	t	typeref:enum:__anon36
CURLSHoption	curl/curl.h	/^} CURLSHoption;$/;"	t	typeref:enum:__anon37
CURLSOCKTYPE_ACCEPT	curl/curl.h	/^  CURLSOCKTYPE_ACCEPT, \/* socket created by accept() call *\/$/;"	e	enum:__anon11
CURLSOCKTYPE_IPCXN	curl/curl.h	/^  CURLSOCKTYPE_IPCXN,  \/* socket created for a specific IP connection *\/$/;"	e	enum:__anon11
CURLSOCKTYPE_LAST	curl/curl.h	/^  CURLSOCKTYPE_LAST    \/* never use *\/$/;"	e	enum:__anon11
CURLSSH_AUTH_AGENT	curl/curl.h	757;"	d
CURLSSH_AUTH_ANY	curl/curl.h	751;"	d
CURLSSH_AUTH_DEFAULT	curl/curl.h	759;"	d
CURLSSH_AUTH_GSSAPI	curl/curl.h	758;"	d
CURLSSH_AUTH_HOST	curl/curl.h	755;"	d
CURLSSH_AUTH_KEYBOARD	curl/curl.h	756;"	d
CURLSSH_AUTH_NONE	curl/curl.h	752;"	d
CURLSSH_AUTH_PASSWORD	curl/curl.h	754;"	d
CURLSSH_AUTH_PUBLICKEY	curl/curl.h	753;"	d
CURLSSLBACKEND_AXTLS	curl/curl.h	/^  CURLSSLBACKEND_AXTLS = 10, \/* never used since 7.63.0 *\/$/;"	e	enum:__anon8
CURLSSLBACKEND_BEARSSL	curl/curl.h	/^  CURLSSLBACKEND_BEARSSL = 13$/;"	e	enum:__anon8
CURLSSLBACKEND_BORINGSSL	curl/curl.h	163;"	d
CURLSSLBACKEND_CYASSL	curl/curl.h	166;"	d
CURLSSLBACKEND_DARWINSSL	curl/curl.h	167;"	d
CURLSSLBACKEND_GNUTLS	curl/curl.h	/^  CURLSSLBACKEND_GNUTLS = 2,$/;"	e	enum:__anon8
CURLSSLBACKEND_GSKIT	curl/curl.h	/^  CURLSSLBACKEND_GSKIT = 5,$/;"	e	enum:__anon8
CURLSSLBACKEND_LIBRESSL	curl/curl.h	162;"	d
CURLSSLBACKEND_MBEDTLS	curl/curl.h	/^  CURLSSLBACKEND_MBEDTLS = 11,$/;"	e	enum:__anon8
CURLSSLBACKEND_MESALINK	curl/curl.h	/^  CURLSSLBACKEND_MESALINK = 12,$/;"	e	enum:__anon8
CURLSSLBACKEND_NONE	curl/curl.h	/^  CURLSSLBACKEND_NONE = 0,$/;"	e	enum:__anon8
CURLSSLBACKEND_NSS	curl/curl.h	/^  CURLSSLBACKEND_NSS = 3,$/;"	e	enum:__anon8
CURLSSLBACKEND_OBSOLETE4	curl/curl.h	/^  CURLSSLBACKEND_OBSOLETE4 = 4,  \/* Was QSOSSL. *\/$/;"	e	enum:__anon8
CURLSSLBACKEND_OPENSSL	curl/curl.h	/^  CURLSSLBACKEND_OPENSSL = 1,$/;"	e	enum:__anon8
CURLSSLBACKEND_POLARSSL	curl/curl.h	/^  CURLSSLBACKEND_POLARSSL = 6,$/;"	e	enum:__anon8
CURLSSLBACKEND_SCHANNEL	curl/curl.h	/^  CURLSSLBACKEND_SCHANNEL = 8,$/;"	e	enum:__anon8
CURLSSLBACKEND_SECURETRANSPORT	curl/curl.h	/^  CURLSSLBACKEND_SECURETRANSPORT = 9,$/;"	e	enum:__anon8
CURLSSLBACKEND_WOLFSSL	curl/curl.h	/^  CURLSSLBACKEND_WOLFSSL = 7,$/;"	e	enum:__anon8
CURLSSLOPT_ALLOW_BEAST	curl/curl.h	826;"	d
CURLSSLOPT_NO_PARTIALCHAIN	curl/curl.h	834;"	d
CURLSSLOPT_NO_REVOKE	curl/curl.h	830;"	d
CURLSSLOPT_REVOKE_BEST_EFFORT	curl/curl.h	839;"	d
CURLSSLSET_NO_BACKENDS	curl/curl.h	/^  CURLSSLSET_NO_BACKENDS \/* libcurl was built without any SSL support *\/$/;"	e	enum:__anon31
CURLSSLSET_OK	curl/curl.h	/^  CURLSSLSET_OK = 0,$/;"	e	enum:__anon31
CURLSSLSET_TOO_LATE	curl/curl.h	/^  CURLSSLSET_TOO_LATE,$/;"	e	enum:__anon31
CURLSSLSET_UNKNOWN_BACKEND	curl/curl.h	/^  CURLSSLSET_UNKNOWN_BACKEND,$/;"	e	enum:__anon31
CURLU	curl/urlapi.h	/^typedef struct Curl_URL CURLU;$/;"	t	typeref:struct:Curl_URL
CURLUE_BAD_HANDLE	curl/urlapi.h	/^  CURLUE_BAD_HANDLE,          \/* 1 *\/$/;"	e	enum:__anon40
CURLUE_BAD_PARTPOINTER	curl/urlapi.h	/^  CURLUE_BAD_PARTPOINTER,     \/* 2 *\/$/;"	e	enum:__anon40
CURLUE_BAD_PORT_NUMBER	curl/urlapi.h	/^  CURLUE_BAD_PORT_NUMBER,     \/* 4 *\/$/;"	e	enum:__anon40
CURLUE_MALFORMED_INPUT	curl/urlapi.h	/^  CURLUE_MALFORMED_INPUT,     \/* 3 *\/$/;"	e	enum:__anon40
CURLUE_NO_FRAGMENT	curl/urlapi.h	/^  CURLUE_NO_FRAGMENT          \/* 17 *\/$/;"	e	enum:__anon40
CURLUE_NO_HOST	curl/urlapi.h	/^  CURLUE_NO_HOST,             \/* 14 *\/$/;"	e	enum:__anon40
CURLUE_NO_OPTIONS	curl/urlapi.h	/^  CURLUE_NO_OPTIONS,          \/* 13 *\/$/;"	e	enum:__anon40
CURLUE_NO_PASSWORD	curl/urlapi.h	/^  CURLUE_NO_PASSWORD,         \/* 12 *\/$/;"	e	enum:__anon40
CURLUE_NO_PORT	curl/urlapi.h	/^  CURLUE_NO_PORT,             \/* 15 *\/$/;"	e	enum:__anon40
CURLUE_NO_QUERY	curl/urlapi.h	/^  CURLUE_NO_QUERY,            \/* 16 *\/$/;"	e	enum:__anon40
CURLUE_NO_SCHEME	curl/urlapi.h	/^  CURLUE_NO_SCHEME,           \/* 10 *\/$/;"	e	enum:__anon40
CURLUE_NO_USER	curl/urlapi.h	/^  CURLUE_NO_USER,             \/* 11 *\/$/;"	e	enum:__anon40
CURLUE_OK	curl/urlapi.h	/^  CURLUE_OK,$/;"	e	enum:__anon40
CURLUE_OUT_OF_MEMORY	curl/urlapi.h	/^  CURLUE_OUT_OF_MEMORY,       \/* 7 *\/$/;"	e	enum:__anon40
CURLUE_UNKNOWN_PART	curl/urlapi.h	/^  CURLUE_UNKNOWN_PART,        \/* 9 *\/$/;"	e	enum:__anon40
CURLUE_UNSUPPORTED_SCHEME	curl/urlapi.h	/^  CURLUE_UNSUPPORTED_SCHEME,  \/* 5 *\/$/;"	e	enum:__anon40
CURLUE_URLDECODE	curl/urlapi.h	/^  CURLUE_URLDECODE,           \/* 6 *\/$/;"	e	enum:__anon40
CURLUE_USER_NOT_ALLOWED	curl/urlapi.h	/^  CURLUE_USER_NOT_ALLOWED,    \/* 8 *\/$/;"	e	enum:__anon40
CURLUPART_FRAGMENT	curl/urlapi.h	/^  CURLUPART_FRAGMENT,$/;"	e	enum:__anon41
CURLUPART_HOST	curl/urlapi.h	/^  CURLUPART_HOST,$/;"	e	enum:__anon41
CURLUPART_OPTIONS	curl/urlapi.h	/^  CURLUPART_OPTIONS,$/;"	e	enum:__anon41
CURLUPART_PASSWORD	curl/urlapi.h	/^  CURLUPART_PASSWORD,$/;"	e	enum:__anon41
CURLUPART_PATH	curl/urlapi.h	/^  CURLUPART_PATH,$/;"	e	enum:__anon41
CURLUPART_PORT	curl/urlapi.h	/^  CURLUPART_PORT,$/;"	e	enum:__anon41
CURLUPART_QUERY	curl/urlapi.h	/^  CURLUPART_QUERY,$/;"	e	enum:__anon41
CURLUPART_SCHEME	curl/urlapi.h	/^  CURLUPART_SCHEME,$/;"	e	enum:__anon41
CURLUPART_URL	curl/urlapi.h	/^  CURLUPART_URL,$/;"	e	enum:__anon41
CURLUPART_USER	curl/urlapi.h	/^  CURLUPART_USER,$/;"	e	enum:__anon41
CURLUPART_ZONEID	curl/urlapi.h	/^  CURLUPART_ZONEID \/* added in 7.65.0 *\/$/;"	e	enum:__anon41
CURLUPart	curl/urlapi.h	/^} CURLUPart;$/;"	t	typeref:enum:__anon41
CURLUSESSL_ALL	curl/curl.h	/^  CURLUSESSL_ALL,     \/* SSL for all communication or fail *\/$/;"	e	enum:__anon17
CURLUSESSL_CONTROL	curl/curl.h	/^  CURLUSESSL_CONTROL, \/* SSL for the control connection or fail *\/$/;"	e	enum:__anon17
CURLUSESSL_LAST	curl/curl.h	/^  CURLUSESSL_LAST     \/* not an option, never use *\/$/;"	e	enum:__anon17
CURLUSESSL_NONE	curl/curl.h	/^  CURLUSESSL_NONE,    \/* do not attempt to use SSL *\/$/;"	e	enum:__anon17
CURLUSESSL_TRY	curl/curl.h	/^  CURLUSESSL_TRY,     \/* try using SSL, proceed anyway otherwise *\/$/;"	e	enum:__anon17
CURLU_APPENDQUERY	curl/urlapi.h	78;"	d
CURLU_DEFAULT_PORT	curl/urlapi.h	67;"	d
CURLU_DEFAULT_SCHEME	curl/urlapi.h	71;"	d
CURLU_DISALLOW_USER	curl/urlapi.h	75;"	d
CURLU_GUESS_SCHEME	curl/urlapi.h	79;"	d
CURLU_NON_SUPPORT_SCHEME	curl/urlapi.h	73;"	d
CURLU_NO_AUTHORITY	curl/urlapi.h	80;"	d
CURLU_NO_DEFAULT_PORT	curl/urlapi.h	68;"	d
CURLU_PATH_AS_IS	curl/urlapi.h	74;"	d
CURLU_URLDECODE	curl/urlapi.h	76;"	d
CURLU_URLENCODE	curl/urlapi.h	77;"	d
CURLUcode	curl/urlapi.h	/^} CURLUcode;$/;"	t	typeref:enum:__anon40
CURLVERSION	curl/Makefile	/^CURLVERSION = 7.70.0$/;"	m
CURLVERSION_FIFTH	curl/curl.h	/^  CURLVERSION_FIFTH,$/;"	e	enum:__anon38
CURLVERSION_FIRST	curl/curl.h	/^  CURLVERSION_FIRST,$/;"	e	enum:__anon38
CURLVERSION_FOURTH	curl/curl.h	/^  CURLVERSION_FOURTH,$/;"	e	enum:__anon38
CURLVERSION_LAST	curl/curl.h	/^  CURLVERSION_LAST \/* never actually use this *\/$/;"	e	enum:__anon38
CURLVERSION_NOW	curl/curl.h	2742;"	d
CURLVERSION_SECOND	curl/curl.h	/^  CURLVERSION_SECOND,$/;"	e	enum:__anon38
CURLVERSION_SEVENTH	curl/curl.h	/^  CURLVERSION_SEVENTH,$/;"	e	enum:__anon38
CURLVERSION_SIXTH	curl/curl.h	/^  CURLVERSION_SIXTH,$/;"	e	enum:__anon38
CURLVERSION_THIRD	curl/curl.h	/^  CURLVERSION_THIRD,$/;"	e	enum:__anon38
CURLWARNING	curl/typecheck-gcc.h	159;"	d
CURL_AT_LEAST_VERSION	curl/curlver.h	74;"	d
CURL_CA_BUNDLE	curl/Makefile	/^CURL_CA_BUNDLE = "\/etc\/ssl\/certs\/ca-certificates.crt"$/;"	m
CURL_CFLAG_EXTRAS	curl/Makefile	/^CURL_CFLAG_EXTRAS = $/;"	m
CURL_CHUNK_BGN_FUNC_FAIL	curl/curl.h	323;"	d
CURL_CHUNK_BGN_FUNC_OK	curl/curl.h	322;"	d
CURL_CHUNK_BGN_FUNC_SKIP	curl/curl.h	324;"	d
CURL_CHUNK_END_FUNC_FAIL	curl/curl.h	335;"	d
CURL_CHUNK_END_FUNC_OK	curl/curl.h	334;"	d
CURL_CSELECT_ERR	curl/multi.h	293;"	d
CURL_CSELECT_IN	curl/multi.h	291;"	d
CURL_CSELECT_OUT	curl/multi.h	292;"	d
CURL_DID_MEMORY_FUNC_TYPEDEFS	curl/curl.h	452;"	d
CURL_DISABLE_DICT	curl/Makefile	/^CURL_DISABLE_DICT = $/;"	m
CURL_DISABLE_FILE	curl/Makefile	/^CURL_DISABLE_FILE = $/;"	m
CURL_DISABLE_FTP	curl/Makefile	/^CURL_DISABLE_FTP = $/;"	m
CURL_DISABLE_GOPHER	curl/Makefile	/^CURL_DISABLE_GOPHER = $/;"	m
CURL_DISABLE_HTTP	curl/Makefile	/^CURL_DISABLE_HTTP = $/;"	m
CURL_DISABLE_IMAP	curl/Makefile	/^CURL_DISABLE_IMAP = $/;"	m
CURL_DISABLE_LDAP	curl/Makefile	/^CURL_DISABLE_LDAP = 1$/;"	m
CURL_DISABLE_LDAPS	curl/Makefile	/^CURL_DISABLE_LDAPS = 1$/;"	m
CURL_DISABLE_POP3	curl/Makefile	/^CURL_DISABLE_POP3 = $/;"	m
CURL_DISABLE_PROXY	curl/Makefile	/^CURL_DISABLE_PROXY = $/;"	m
CURL_DISABLE_RTSP	curl/Makefile	/^CURL_DISABLE_RTSP = $/;"	m
CURL_DISABLE_SMB	curl/Makefile	/^CURL_DISABLE_SMB = $/;"	m
CURL_DISABLE_SMTP	curl/Makefile	/^CURL_DISABLE_SMTP = $/;"	m
CURL_DISABLE_TELNET	curl/Makefile	/^CURL_DISABLE_TELNET = $/;"	m
CURL_DISABLE_TFTP	curl/Makefile	/^CURL_DISABLE_TFTP = $/;"	m
CURL_ENABLE_MQTT	curl/Makefile	/^CURL_ENABLE_MQTT = $/;"	m
CURL_ERROR_SIZE	curl/curl.h	765;"	d
CURL_EXTERN	curl/curl.h	116;"	d
CURL_EXTERN	curl/curl.h	121;"	d
CURL_EXTERN	curl/curl.h	123;"	d
CURL_EXTERN	curl/curl.h	126;"	d
CURL_EXTERN	curl/curl.h	128;"	d
CURL_FNMATCHFUNC_FAIL	curl/curl.h	348;"	d
CURL_FNMATCHFUNC_MATCH	curl/curl.h	346;"	d
CURL_FNMATCHFUNC_NOMATCH	curl/curl.h	347;"	d
CURL_FORMADD_DISABLED	curl/curl.h	/^  CURL_FORMADD_DISABLED, \/* libcurl was built with this disabled *\/$/;"	e	enum:__anon29
CURL_FORMADD_ILLEGAL_ARRAY	curl/curl.h	/^  CURL_FORMADD_ILLEGAL_ARRAY,$/;"	e	enum:__anon29
CURL_FORMADD_INCOMPLETE	curl/curl.h	/^  CURL_FORMADD_INCOMPLETE,$/;"	e	enum:__anon29
CURL_FORMADD_LAST	curl/curl.h	/^  CURL_FORMADD_LAST \/* last *\/$/;"	e	enum:__anon29
CURL_FORMADD_MEMORY	curl/curl.h	/^  CURL_FORMADD_MEMORY,$/;"	e	enum:__anon29
CURL_FORMADD_NULL	curl/curl.h	/^  CURL_FORMADD_NULL,$/;"	e	enum:__anon29
CURL_FORMADD_OK	curl/curl.h	/^  CURL_FORMADD_OK, \/* first, no error *\/$/;"	e	enum:__anon29
CURL_FORMADD_OPTION_TWICE	curl/curl.h	/^  CURL_FORMADD_OPTION_TWICE,$/;"	e	enum:__anon29
CURL_FORMADD_UNKNOWN_OPTION	curl/curl.h	/^  CURL_FORMADD_UNKNOWN_OPTION,$/;"	e	enum:__anon29
CURL_FORMAT_CURL_OFF_T	curl/system.h	104;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	110;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	120;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	126;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	132;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	142;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	151;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	161;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	168;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	174;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	183;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	191;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	199;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	210;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	216;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	226;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	242;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	248;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	254;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	271;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	277;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	283;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	295;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	303;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	317;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	324;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	336;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	342;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	358;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	364;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	384;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	394;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	406;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	56;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	62;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	71;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	80;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	86;"	d
CURL_FORMAT_CURL_OFF_T	curl/system.h	95;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	105;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	111;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	121;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	127;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	133;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	143;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	152;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	162;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	169;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	175;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	184;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	192;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	200;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	211;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	217;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	227;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	243;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	249;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	255;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	272;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	278;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	284;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	296;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	304;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	318;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	325;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	337;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	343;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	359;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	365;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	385;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	395;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	407;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	57;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	63;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	72;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	81;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	87;"	d
CURL_FORMAT_CURL_OFF_TU	curl/system.h	96;"	d
CURL_GLOBAL_ACK_EINTR	curl/curl.h	2657;"	d
CURL_GLOBAL_ALL	curl/curl.h	2654;"	d
CURL_GLOBAL_DEFAULT	curl/curl.h	2656;"	d
CURL_GLOBAL_NOTHING	curl/curl.h	2655;"	d
CURL_GLOBAL_SSL	curl/curl.h	2652;"	d
CURL_GLOBAL_WIN32	curl/curl.h	2653;"	d
CURL_HET_DEFAULT	curl/curl.h	844;"	d
CURL_HTTPPOST_BUFFER	curl/curl.h	194;"	d
CURL_HTTPPOST_CALLBACK	curl/curl.h	199;"	d
CURL_HTTPPOST_FILENAME	curl/curl.h	186;"	d
CURL_HTTPPOST_LARGE	curl/curl.h	201;"	d
CURL_HTTPPOST_PTRBUFFER	curl/curl.h	196;"	d
CURL_HTTPPOST_PTRCONTENTS	curl/curl.h	192;"	d
CURL_HTTPPOST_PTRNAME	curl/curl.h	190;"	d
CURL_HTTPPOST_READFILE	curl/curl.h	188;"	d
CURL_HTTP_VERSION_1_0	curl/curl.h	/^  CURL_HTTP_VERSION_1_0,  \/* please use HTTP 1.0 in the request *\/$/;"	e	enum:__anon23
CURL_HTTP_VERSION_1_1	curl/curl.h	/^  CURL_HTTP_VERSION_1_1,  \/* please use HTTP 1.1 in the request *\/$/;"	e	enum:__anon23
CURL_HTTP_VERSION_2	curl/curl.h	2019;"	d
CURL_HTTP_VERSION_2TLS	curl/curl.h	/^  CURL_HTTP_VERSION_2TLS, \/* use version 2 for HTTPS, version 1.1 for HTTP *\/$/;"	e	enum:__anon23
CURL_HTTP_VERSION_2_0	curl/curl.h	/^  CURL_HTTP_VERSION_2_0,  \/* please use HTTP 2 in the request *\/$/;"	e	enum:__anon23
CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE	curl/curl.h	/^  CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE,  \/* please use HTTP 2 without HTTP\/1.1$/;"	e	enum:__anon23
CURL_HTTP_VERSION_3	curl/curl.h	/^  CURL_HTTP_VERSION_3 = 30, \/* Makes use of explicit HTTP\/3 without fallback.$/;"	e	enum:__anon23
CURL_HTTP_VERSION_LAST	curl/curl.h	/^  CURL_HTTP_VERSION_LAST \/* *ILLEGAL* http version *\/$/;"	e	enum:__anon23
CURL_HTTP_VERSION_NONE	curl/curl.h	/^  CURL_HTTP_VERSION_NONE, \/* setting this means we don't care, and that we'd$/;"	e	enum:__anon23
CURL_IPRESOLVE_V4	curl/curl.h	1994;"	d
CURL_IPRESOLVE_V6	curl/curl.h	1995;"	d
CURL_IPRESOLVE_WHATEVER	curl/curl.h	1992;"	d
CURL_ISOCPP	curl/system.h	476;"	d
CURL_ISOCPP	curl/system.h	479;"	d
CURL_LAST	curl/curl.h	/^  CURL_LAST \/* never use! *\/$/;"	e	enum:__anon15
CURL_LOCK_ACCESS_LAST	curl/curl.h	/^  CURL_LOCK_ACCESS_LAST        \/* never use *\/$/;"	e	enum:__anon35
CURL_LOCK_ACCESS_NONE	curl/curl.h	/^  CURL_LOCK_ACCESS_NONE = 0,   \/* unspecified action *\/$/;"	e	enum:__anon35
CURL_LOCK_ACCESS_SHARED	curl/curl.h	/^  CURL_LOCK_ACCESS_SHARED = 1, \/* for read perhaps *\/$/;"	e	enum:__anon35
CURL_LOCK_ACCESS_SINGLE	curl/curl.h	/^  CURL_LOCK_ACCESS_SINGLE = 2, \/* for write perhaps *\/$/;"	e	enum:__anon35
CURL_LOCK_DATA_CONNECT	curl/curl.h	/^  CURL_LOCK_DATA_CONNECT,$/;"	e	enum:__anon34
CURL_LOCK_DATA_COOKIE	curl/curl.h	/^  CURL_LOCK_DATA_COOKIE,$/;"	e	enum:__anon34
CURL_LOCK_DATA_DNS	curl/curl.h	/^  CURL_LOCK_DATA_DNS,$/;"	e	enum:__anon34
CURL_LOCK_DATA_LAST	curl/curl.h	/^  CURL_LOCK_DATA_LAST$/;"	e	enum:__anon34
CURL_LOCK_DATA_NONE	curl/curl.h	/^  CURL_LOCK_DATA_NONE = 0,$/;"	e	enum:__anon34
CURL_LOCK_DATA_PSL	curl/curl.h	/^  CURL_LOCK_DATA_PSL,$/;"	e	enum:__anon34
CURL_LOCK_DATA_SHARE	curl/curl.h	/^  CURL_LOCK_DATA_SHARE,$/;"	e	enum:__anon34
CURL_LOCK_DATA_SSL_SESSION	curl/curl.h	/^  CURL_LOCK_DATA_SSL_SESSION,$/;"	e	enum:__anon34
CURL_LT_SHLIB_VERSIONED_FLAVOUR	curl/Makefile	/^CURL_LT_SHLIB_VERSIONED_FLAVOUR = $/;"	m
CURL_MAX_HTTP_HEADER	curl/curl.h	254;"	d
CURL_MAX_READ_SIZE	curl/curl.h	237;"	d
CURL_MAX_WRITE_SIZE	curl/curl.h	247;"	d
CURL_NETRC_IGNORED	curl/curl.h	/^  CURL_NETRC_IGNORED,     \/* The .netrc will never be read.$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETRC_LAST	curl/curl.h	/^  CURL_NETRC_LAST$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETRC_OPTION	curl/curl.h	/^enum CURL_NETRC_OPTION {$/;"	g
CURL_NETRC_OPTIONAL	curl/curl.h	/^  CURL_NETRC_OPTIONAL,    \/* A user:password in the URL will be preferred$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETRC_REQUIRED	curl/curl.h	/^  CURL_NETRC_REQUIRED,    \/* A user:password in the URL will be ignored.$/;"	e	enum:CURL_NETRC_OPTION
CURL_NETWORK_AND_TIME_LIBS	curl/Makefile	/^CURL_NETWORK_AND_TIME_LIBS = $/;"	m
CURL_NETWORK_LIBS	curl/Makefile	/^CURL_NETWORK_LIBS = $/;"	m
CURL_OFF_TU_C	curl/system.h	491;"	d
CURL_OFF_TU_C	curl/system.h	501;"	d
CURL_OFF_T_C	curl/system.h	489;"	d
CURL_OFF_T_C	curl/system.h	500;"	d
CURL_POLL_IN	curl/multi.h	284;"	d
CURL_POLL_INOUT	curl/multi.h	286;"	d
CURL_POLL_NONE	curl/multi.h	283;"	d
CURL_POLL_OUT	curl/multi.h	285;"	d
CURL_POLL_REMOVE	curl/multi.h	287;"	d
CURL_PROGRESSFUNC_CONTINUE	curl/curl.h	216;"	d
CURL_PULL_SYS_POLL_H	curl/system.h	415;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	148;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	232;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	261;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	290;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	309;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	331;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	349;"	d
CURL_PULL_SYS_SOCKET_H	curl/system.h	401;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	147;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	204;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	231;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	260;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	289;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	308;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	330;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	348;"	d
CURL_PULL_SYS_TYPES_H	curl/system.h	400;"	d
CURL_PULL_WS2TCPIP_H	curl/system.h	205;"	d
CURL_PUSH_DENY	curl/multi.h	437;"	d
CURL_PUSH_OK	curl/multi.h	436;"	d
CURL_READFUNC_ABORT	curl/curl.h	367;"	d
CURL_READFUNC_PAUSE	curl/curl.h	370;"	d
CURL_REDIR_GET_ALL	curl/curl.h	2088;"	d
CURL_REDIR_POST_301	curl/curl.h	2089;"	d
CURL_REDIR_POST_302	curl/curl.h	2090;"	d
CURL_REDIR_POST_303	curl/curl.h	2091;"	d
CURL_REDIR_POST_ALL	curl/curl.h	2092;"	d
CURL_RTSPREQ_ANNOUNCE	curl/curl.h	/^    CURL_RTSPREQ_ANNOUNCE,$/;"	e	enum:__anon24
CURL_RTSPREQ_DESCRIBE	curl/curl.h	/^    CURL_RTSPREQ_DESCRIBE,$/;"	e	enum:__anon24
CURL_RTSPREQ_GET_PARAMETER	curl/curl.h	/^    CURL_RTSPREQ_GET_PARAMETER,$/;"	e	enum:__anon24
CURL_RTSPREQ_LAST	curl/curl.h	/^    CURL_RTSPREQ_LAST \/* last in list *\/$/;"	e	enum:__anon24
CURL_RTSPREQ_NONE	curl/curl.h	/^    CURL_RTSPREQ_NONE, \/* first in list *\/$/;"	e	enum:__anon24
CURL_RTSPREQ_OPTIONS	curl/curl.h	/^    CURL_RTSPREQ_OPTIONS,$/;"	e	enum:__anon24
CURL_RTSPREQ_PAUSE	curl/curl.h	/^    CURL_RTSPREQ_PAUSE,$/;"	e	enum:__anon24
CURL_RTSPREQ_PLAY	curl/curl.h	/^    CURL_RTSPREQ_PLAY,$/;"	e	enum:__anon24
CURL_RTSPREQ_RECEIVE	curl/curl.h	/^    CURL_RTSPREQ_RECEIVE,$/;"	e	enum:__anon24
CURL_RTSPREQ_RECORD	curl/curl.h	/^    CURL_RTSPREQ_RECORD,$/;"	e	enum:__anon24
CURL_RTSPREQ_SETUP	curl/curl.h	/^    CURL_RTSPREQ_SETUP,$/;"	e	enum:__anon24
CURL_RTSPREQ_SET_PARAMETER	curl/curl.h	/^    CURL_RTSPREQ_SET_PARAMETER,$/;"	e	enum:__anon24
CURL_RTSPREQ_TEARDOWN	curl/curl.h	/^    CURL_RTSPREQ_TEARDOWN,$/;"	e	enum:__anon24
CURL_SEEKFUNC_CANTSEEK	curl/curl.h	359;"	d
CURL_SEEKFUNC_FAIL	curl/curl.h	358;"	d
CURL_SEEKFUNC_OK	curl/curl.h	357;"	d
CURL_SOCKET_BAD	curl/curl.h	135;"	d
CURL_SOCKET_BAD	curl/curl.h	138;"	d
CURL_SOCKET_TIMEOUT	curl/multi.h	289;"	d
CURL_SOCKOPT_ALREADY_CONNECTED	curl/curl.h	398;"	d
CURL_SOCKOPT_ERROR	curl/curl.h	396;"	d
CURL_SOCKOPT_OK	curl/curl.h	395;"	d
CURL_SSLVERSION_DEFAULT	curl/curl.h	/^  CURL_SSLVERSION_DEFAULT,$/;"	e	enum:__anon25
CURL_SSLVERSION_LAST	curl/curl.h	/^  CURL_SSLVERSION_LAST \/* never use, keep last *\/$/;"	e	enum:__anon25
CURL_SSLVERSION_MAX_DEFAULT	curl/curl.h	/^  CURL_SSLVERSION_MAX_DEFAULT =  (CURL_SSLVERSION_TLSv1   << 16),$/;"	e	enum:__anon26
CURL_SSLVERSION_MAX_LAST	curl/curl.h	/^  CURL_SSLVERSION_MAX_LAST =     (CURL_SSLVERSION_LAST    << 16)$/;"	e	enum:__anon26
CURL_SSLVERSION_MAX_NONE	curl/curl.h	/^  CURL_SSLVERSION_MAX_NONE =     0,$/;"	e	enum:__anon26
CURL_SSLVERSION_MAX_TLSv1_0	curl/curl.h	/^  CURL_SSLVERSION_MAX_TLSv1_0 =  (CURL_SSLVERSION_TLSv1_0 << 16),$/;"	e	enum:__anon26
CURL_SSLVERSION_MAX_TLSv1_1	curl/curl.h	/^  CURL_SSLVERSION_MAX_TLSv1_1 =  (CURL_SSLVERSION_TLSv1_1 << 16),$/;"	e	enum:__anon26
CURL_SSLVERSION_MAX_TLSv1_2	curl/curl.h	/^  CURL_SSLVERSION_MAX_TLSv1_2 =  (CURL_SSLVERSION_TLSv1_2 << 16),$/;"	e	enum:__anon26
CURL_SSLVERSION_MAX_TLSv1_3	curl/curl.h	/^  CURL_SSLVERSION_MAX_TLSv1_3 =  (CURL_SSLVERSION_TLSv1_3 << 16),$/;"	e	enum:__anon26
CURL_SSLVERSION_SSLv2	curl/curl.h	/^  CURL_SSLVERSION_SSLv2,$/;"	e	enum:__anon25
CURL_SSLVERSION_SSLv3	curl/curl.h	/^  CURL_SSLVERSION_SSLv3,$/;"	e	enum:__anon25
CURL_SSLVERSION_TLSv1	curl/curl.h	/^  CURL_SSLVERSION_TLSv1, \/* TLS 1.x *\/$/;"	e	enum:__anon25
CURL_SSLVERSION_TLSv1_0	curl/curl.h	/^  CURL_SSLVERSION_TLSv1_0,$/;"	e	enum:__anon25
CURL_SSLVERSION_TLSv1_1	curl/curl.h	/^  CURL_SSLVERSION_TLSv1_1,$/;"	e	enum:__anon25
CURL_SSLVERSION_TLSv1_2	curl/curl.h	/^  CURL_SSLVERSION_TLSv1_2,$/;"	e	enum:__anon25
CURL_SSLVERSION_TLSv1_3	curl/curl.h	/^  CURL_SSLVERSION_TLSv1_3,$/;"	e	enum:__anon25
CURL_STRICTER	curl/curl.h	34;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	106;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	112;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	122;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	128;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	134;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	144;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	153;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	163;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	170;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	176;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	185;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	193;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	201;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	212;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	218;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	228;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	244;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	250;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	256;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	273;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	279;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	285;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	297;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	305;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	319;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	326;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	338;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	344;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	360;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	366;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	386;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	396;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	408;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	58;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	64;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	73;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	82;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	88;"	d
CURL_SUFFIX_CURL_OFF_T	curl/system.h	97;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	107;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	113;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	123;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	129;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	135;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	145;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	154;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	164;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	171;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	177;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	186;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	194;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	202;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	213;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	219;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	229;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	245;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	251;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	257;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	274;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	280;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	286;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	298;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	306;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	320;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	327;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	339;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	345;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	361;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	367;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	387;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	397;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	409;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	59;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	65;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	74;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	83;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	89;"	d
CURL_SUFFIX_CURL_OFF_TU	curl/system.h	98;"	d
CURL_TIMECOND_IFMODSINCE	curl/curl.h	/^  CURL_TIMECOND_IFMODSINCE,$/;"	e	enum:__anon27
CURL_TIMECOND_IFUNMODSINCE	curl/curl.h	/^  CURL_TIMECOND_IFUNMODSINCE,$/;"	e	enum:__anon27
CURL_TIMECOND_LAST	curl/curl.h	/^  CURL_TIMECOND_LAST$/;"	e	enum:__anon27
CURL_TIMECOND_LASTMOD	curl/curl.h	/^  CURL_TIMECOND_LASTMOD,$/;"	e	enum:__anon27
CURL_TIMECOND_NONE	curl/curl.h	/^  CURL_TIMECOND_NONE,$/;"	e	enum:__anon27
CURL_TLSAUTH	curl/curl.h	/^enum CURL_TLSAUTH {$/;"	g
CURL_TLSAUTH_LAST	curl/curl.h	/^  CURL_TLSAUTH_LAST \/* never use, keep last *\/$/;"	e	enum:CURL_TLSAUTH
CURL_TLSAUTH_NONE	curl/curl.h	/^  CURL_TLSAUTH_NONE,$/;"	e	enum:CURL_TLSAUTH
CURL_TLSAUTH_SRP	curl/curl.h	/^  CURL_TLSAUTH_SRP,$/;"	e	enum:CURL_TLSAUTH
CURL_TRAILERFUNC_ABORT	curl/curl.h	377;"	d
CURL_TRAILERFUNC_OK	curl/curl.h	374;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	103;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	109;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	119;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	125;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	131;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	141;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	150;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	160;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	167;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	173;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	182;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	190;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	198;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	209;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	215;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	225;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	241;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	247;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	253;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	270;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	276;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	282;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	294;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	302;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	316;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	323;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	335;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	341;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	357;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	363;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	383;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	393;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	405;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	55;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	61;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	70;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	79;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	85;"	d
CURL_TYPEOF_CURL_OFF_T	curl/system.h	94;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	115;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	137;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	146;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	155;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	179;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	187;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	195;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	203;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	221;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	230;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	259;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	288;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	299;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	307;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	329;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	347;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	369;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	399;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	410;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	67;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	75;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	91;"	d
CURL_TYPEOF_CURL_SOCKLEN_T	curl/system.h	99;"	d
CURL_UPKEEP_INTERVAL_DEFAULT	curl/curl.h	847;"	d
CURL_VERSION_ALTSVC	curl/curl.h	2819;"	d
CURL_VERSION_ASYNCHDNS	curl/curl.h	2799;"	d
CURL_VERSION_BITS	curl/curlver.h	73;"	d
CURL_VERSION_BROTLI	curl/curl.h	2818;"	d
CURL_VERSION_CONV	curl/curl.h	2805;"	d
CURL_VERSION_CURLDEBUG	curl/curl.h	2806;"	d
CURL_VERSION_DEBUG	curl/curl.h	2798;"	d
CURL_VERSION_GSSAPI	curl/curl.h	2811;"	d
CURL_VERSION_GSSNEGOTIATE	curl/curl.h	2796;"	d
CURL_VERSION_HTTP2	curl/curl.h	2810;"	d
CURL_VERSION_HTTP3	curl/curl.h	2820;"	d
CURL_VERSION_HTTPS_PROXY	curl/curl.h	2816;"	d
CURL_VERSION_IDN	curl/curl.h	2802;"	d
CURL_VERSION_IPV6	curl/curl.h	2790;"	d
CURL_VERSION_KERBEROS4	curl/curl.h	2791;"	d
CURL_VERSION_KERBEROS5	curl/curl.h	2812;"	d
CURL_VERSION_LARGEFILE	curl/curl.h	2801;"	d
CURL_VERSION_LIBZ	curl/curl.h	2794;"	d
CURL_VERSION_MULTI_SSL	curl/curl.h	2817;"	d
CURL_VERSION_NTLM	curl/curl.h	2795;"	d
CURL_VERSION_NTLM_WB	curl/curl.h	2808;"	d
CURL_VERSION_PSL	curl/curl.h	2814;"	d
CURL_VERSION_SPNEGO	curl/curl.h	2800;"	d
CURL_VERSION_SSL	curl/curl.h	2793;"	d
CURL_VERSION_SSPI	curl/curl.h	2804;"	d
CURL_VERSION_TLSAUTH_SRP	curl/curl.h	2807;"	d
CURL_VERSION_UNIX_SOCKETS	curl/curl.h	2813;"	d
CURL_WAIT_POLLIN	curl/multi.h	110;"	d
CURL_WAIT_POLLOUT	curl/multi.h	112;"	d
CURL_WAIT_POLLPRI	curl/multi.h	111;"	d
CURL_WIN32	curl/curl.h	46;"	d
CURL_WITH_MULTI_SSL	curl/Makefile	/^CURL_WITH_MULTI_SSL = $/;"	m
CURL_WRITEFUNC_PAUSE	curl/curl.h	259;"	d
CURL_ZERO_TERMINATED	curl/curl.h	2106;"	d
CURLcode	curl/curl.h	/^} CURLcode;$/;"	t	typeref:enum:__anon15
CURLformoption	curl/curl.h	/^} CURLformoption;$/;"	t	typeref:enum:__anon28
CURLoption	curl/curl.h	/^} CURLoption;$/;"	t	typeref:enum:__anon22
CURLsslset	curl/curl.h	/^} CURLsslset;$/;"	t	typeref:enum:__anon31
CURLversion	curl/curl.h	/^} CURLversion;$/;"	t	typeref:enum:__anon38
CYAN	BaseType.h	139;"	d
CYGPATH_W	curl/Makefile	/^CYGPATH_W = echo$/;"	m
CameraMode	NET_DEV_STRUCT.H	/^    DWORD CameraMode;		\/\/ 0: 用户自定义， 1：默认值$/;"	m	struct:_NET_DEV_CAMERACFG
CameraParam	NET_DEV_STRUCT.H	/^    NET_DEV_CAMERAPARAM CameraParam;		\/\/用户自定义$/;"	m	struct:_NET_DEV_CAMERACFG
ChannNo	NET_DEV_STRUCT.H	/^    DWORD ChannNo;		\/\/通道号（0-255）$/;"	m	struct:_NET_DEV_REMOTE_CHANNEL
ChannNum	NET_DEV_STRUCT.H	/^    DWORD ChannNum;		\/\/总通道数$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
ChannState	NET_DEV_STRUCT.H	/^        NET_DEV_CHANNSTATES ChannState;$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
ChannState	NET_DEV_STRUCT.H	/^    NET_DEV_CHANNSTATES ChannState;		\/\/ 通道状态$/;"	m	struct:_NET_DEV_WORKSTATE
Channel	NET_DEV_STRUCT.H	/^    DWORD Channel;		\/\/通道号$/;"	m	struct:_NET_DEV_ALARM_ITEM
Channel	NET_DEV_STRUCT.H	/^    WORD Channel;		\/\/ 远程数据通道号 默认 0$/;"	m	struct:_NET_DEV_DEC_BIND
ChannelCap	NET_DEV_STRUCT.H	/^    NET_DEV_CH_CAPABILITIES ChannelCap;		\/\/通道能力$/;"	m	struct:_NET_DEV_CAPABILITIES
ChannelNum	NET_DEV_STRUCT.H	/^    BYTE ChannelNum;                    \/*音频通道数目, 如 1，2 *\/$/;"	m	struct:_NET_DEV_MEDIA_AFRAMEEXT
ChannelNum	NET_DEV_STRUCT.H	/^    WORD ChannelNum;                \/*音频通道数目, 如 1，2 *\/$/;"	m	struct:_NET_DEV_MEDIA_AUDIOPARAM
CheckIP	BaseType.h	/^static INT32 CheckIP(char *pchIP) $/;"	f
ClientIpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR ClientIpAddr;		\/\/客户端IP$/;"	m	struct:_NET_DEV_MEDIA_URL
CmsIP	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR CmsIP;		\/\/服务器IP$/;"	m	struct:_NET_DEV_CMS_CFG
CmsPort	NET_DEV_STRUCT.H	/^    WORD CmsPort;		\/\/ CMS端口$/;"	m	struct:_NET_DEV_SADPCMSINFO
CmsPort	NET_DEV_STRUCT.H	/^    WORD CmsPort;		\/\/服务器端口$/;"	m	struct:_NET_DEV_CMS_CFG
Color	NET_DEV_STRUCT.H	/^    DWORD Color;		\/\/遮挡时使用的颜色$/;"	m	struct:_NET_DEV_VENC_OVERLAY
Command	NET_DEV_STRUCT.H	/^    DWORD Command;		\/\/控制命令类型    \/\/NET_DEV_CONTROL_TYPE$/;"	m	struct:_NET_DEV_CONTROL
ConType	NET_DEV_STRUCT.H	/^    BYTE  ConType;        \/* 1:tcp 0:udp *\/$/;"	m	struct:_NET_DEV_WSX_CFG
Cond	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_COND Cond;$/;"	m	struct:_NET_DEV_LOG_QUERY_REQ
Cond	NET_DEV_STRUCT.H	/^    NET_DEV_PIC_COND Cond;$/;"	m	struct:_NET_DEV_PIC_QUERY_REQ
Cond	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_COND Cond;$/;"	m	struct:_NET_DEV_RECORD_QUERY_REQ
ConnectType	NET_DEV_STRUCT.H	/^    BYTE ConnectType;		\/\/WPS连接方式：0- PBC，1- AP PIN$/;"	m	struct:_NET_DEV_WIFI_WPS
Contrast	NET_DEV_STRUCT.H	/^    DWORD Contrast;		\/\/对比度$/;"	m	struct:_NET_DEV_VIDEO_EFFECT
ControlPort	NET_DEV_STRUCT.H	/^    DWORD ControlPort;$/;"	m	struct:_NET_DEV_WSX_CFG
Count	NET_DEV_STRUCT.H	/^    DWORD Count;		\/\/ 个数$/;"	m	struct:_NET_DEV_WIFI_APSET
Count	NET_DEV_STRUCT.H	/^    DWORD Count;		\/\/多边形顶点数$/;"	m	struct:_NET_DEV_POLYGON
Count	NET_DEV_STRUCT.H	/^    DWORD Count;$/;"	m	struct:_NET_DEV_DAY
Count	NET_DEV_STRUCT.H	/^    DWORD Count;$/;"	m	struct:_NET_DEV_WEEK
Count	NET_DEV_STRUCT.H	/^    WORD Count;		\/\/数据中区域个??$/;"	m	struct:_NET_DEV_AREA
CountMax	NET_DEV_STRUCT.H	/^    BYTE CountMax;		\/\/ Maximum targets couted in one frame$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
CreatMedia	main.c	/^void * CreatMedia(int Chnl, int Level,STREAM_DATA_PROCESS ProcessFrame,NET_DEV_MEDIA *m)$/;"	f
Cross	NET_DEV_STRUCT.H	/^    BYTE Cross;               \/\/ NET_DEV_CPC_CROSS_TYPE$/;"	m	struct:_NET_DEV_CPC_TARGET
Cross	NET_DEV_STRUCT.H	/^    DWORD Cross;		\/\/ NET_DEV_CROSS_TYPE$/;"	m	struct:_NET_DEV_TRIPWIRE_RULE
Cruise	NET_DEV_STRUCT.H	/^        NET_DEV_PTZ_CRUISE Cruise;$/;"	m	union:_NET_DEV_PTZ_CONTROL::__anon54
Cruise	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_CRUISE Cruise;$/;"	m	struct:_NET_DEV_PTZ_CRUISEWAY
CruiseCount	NET_DEV_STRUCT.H	/^    DWORD CruiseCount;		\/\/巡航路径数量$/;"	m	struct:_NET_DEV_PTZ_CRUISEWAYSET
CruiseNo	NET_DEV_STRUCT.H	/^        DWORD CruiseNo;		\/\/巡航号 当  ParamId == NET_DEV_PARAM_CRUISEWAY$/;"	m	union:_NET_DEV_PARAM_QUERY::__anon58
Cruises	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_CRUISE Cruises[NET_DEV_MAX_CRZ_NUM];		\/\/巡航路径集合$/;"	m	struct:_NET_DEV_PTZ_CRUISEWAYSET
CruisesPerChn	NET_DEV_STRUCT.H	/^    BYTE CruisesPerChn;		\/\/ 每个通道最大支持的巡航个数（<= NET_DEV_MAX_CRZ_NUM ）$/;"	m	struct:_NET_DEV_CAPABILITIES
CustomizeMode	NET_DEV_STRUCT.H	/^    NET_DEV_VIDEO_EFFECT CustomizeMode;		\/\/自定义模式参数$/;"	m	struct:_NET_DEV_VIDEO_INPUT_EFFECT
D3D	NET_DEV_STRUCT.H	/^        NET_DEV_PTZ_3D D3D;$/;"	m	union:_NET_DEV_PTZ_CONTROL::__anon54
DATA_RELEASE	fifolib.h	/^typedef int (*DATA_RELEASE)(void * pData);$/;"	t
DATA_TYPE_AUDIO	main.c	/^    DATA_TYPE_AUDIO,$/;"	e	enum:__anon44	file:
DATA_TYPE_DEFINE_SINGLE	NET_DEV_STRUCT.H	7;"	d
DATA_TYPE_INFOR	main.c	/^    DATA_TYPE_INFOR,$/;"	e	enum:__anon44	file:
DATA_TYPE_NULL	main.c	/^    DATA_TYPE_NULL       $/;"	e	enum:__anon44	file:
DATA_TYPE_PICTURE	main.c	/^    DATA_TYPE_PICTURE,$/;"	e	enum:__anon44	file:
DATA_TYPE_TEMPLE	main.c	/^    DATA_TYPE_TEMPLE,$/;"	e	enum:__anon44	file:
DATA_TYPE_VIDEO	main.c	/^    DATA_TYPE_VIDEO = 0,$/;"	e	enum:__anon44	file:
DC	NET_DEV_STRUCT.H	/^    }DC;$/;"	t	typeref:struct:__DC
DCClose	NET_DEV_PU_SDK.H	/^    void (*DCClose) (NET_DEV_DATACHN *Dc);$/;"	m	struct:_NET_DEV_SDK_FUNCS
DCOpen	NET_DEV_PU_SDK.H	/^    int  (*DCOpen) (NET_DEV_DATACHN *Dc);$/;"	m	struct:_NET_DEV_SDK_FUNCS
DCRecv	NET_DEV_PU_SDK.H	/^    int  (*DCRecv) (NET_DEV_DATACHN *Dc, void *Ddata, int Size);$/;"	m	struct:_NET_DEV_SDK_FUNCS
DEFAULT_SSL_BACKEND	curl/Makefile	/^DEFAULT_SSL_BACKEND = no$/;"	m
DEFS	curl/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	curl/Makefile	/^DEPDIR = .deps$/;"	m
DEV_NAME	main.c	92;"	d	file:
DEV_SYS_CAP_3G	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_3G       = 2,   \/\/ 3G$/;"	e	enum:_NET_DEV_SYS_CAP
DEV_SYS_CAP_IR	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_IR       = 4,   \/\/ 红外$/;"	e	enum:_NET_DEV_SYS_CAP
DEV_SYS_CAP_IVS	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_IVS      = 3,   \/\/ 智能分析$/;"	e	enum:_NET_DEV_SYS_CAP
DEV_SYS_CAP_PIR	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_PIR      = 5,   \/\/ 人体红外感应$/;"	e	enum:_NET_DEV_SYS_CAP
DEV_SYS_CAP_PTZ	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_PTZ      = 0,   \/\/ 云台$/;"	e	enum:_NET_DEV_SYS_CAP
DEV_SYS_CAP_TZ	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_TZ       = 6,   \/\/ 时区$/;"	e	enum:_NET_DEV_SYS_CAP
DEV_SYS_CAP_WIFI	NET_DEV_STRUCT.H	/^    DEV_SYS_CAP_WIFI     = 1,   \/\/ WIFI$/;"	e	enum:_NET_DEV_SYS_CAP
DIALState	NET_DEV_STRUCT.H	/^    BYTE DIALState;		\/\/NET_DEV_NIC_STATE$/;"	m	struct:_NET_DEV_NETSTATES
DISTFILES	curl/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	curl/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(pkginclude_HEADERS) \\$/;"	m
DIST_SOURCES	curl/Makefile	/^DIST_SOURCES =$/;"	m
DLLTOOL	curl/Makefile	/^DLLTOOL = false$/;"	m
DLL_DECLARE	BaseType.h	70;"	d
DLL_DECLARE	BaseType.h	72;"	d
DNS1	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR DNS1;		\/\/主DNS服务器地址$/;"	m	struct:_NET_DEV_NICCFG
DNS2	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR DNS2;		\/\/次DNS服务器地址$/;"	m	struct:_NET_DEV_NICCFG
DSP_SW_VER	main.c	89;"	d	file:
DSYMUTIL	curl/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	curl/Makefile	/^DUMPBIN = $/;"	m
DWORD	NET_DEV_STRUCT.H	/^typedef  unsigned int       DWORD;$/;"	t
DWORD	file.c	/^typedef 	unsigned int  DWORD;$/;"	t	file:
DWORD64	file.c	/^typedef		unsigned long long DWORD64;$/;"	t	file:
Data	NET_DEV_STRUCT.H	/^    BYTE *Data;                       \/*帧数据*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAME
Data	NET_DEV_STRUCT.H	/^    BYTE Data[128];                    \/*Meta私有数据内容*\/$/;"	m	struct:_NET_DEV_MEDIA_METAPARAM
Data	NET_DEV_STRUCT.H	/^    BYTE Data[NET_DEV_ALARM_DATA_SIZE];		\/\/SubType=AVD\/PEAOSC:NET_DEV_ALARM_DESC;SubType=STATE_CHANNNEL:NET_DEV_CHANNSTATE;$/;"	m	struct:_NET_DEV_ALARM_ITEM
Data	NET_DEV_STRUCT.H	/^    BYTE Data[NET_DEV_MAX_PIC_SIZE];$/;"	m	struct:_NET_DEV_MANUL_SNAPPIC_RSP
Data	NET_DEV_STRUCT.H	/^    BYTE Data[NET_DEV_UPGRADE_HDR_SIZE];$/;"	m	struct:_NET_DEV_UPGRADE
DataBit	NET_DEV_STRUCT.H	/^    BYTE DataBit;		\/\/ 数据位   请参考 NET_DEV_RS232_CFG 定义解释$/;"	m	struct:_NET_DEV_PTZ_CFG
DataBit	NET_DEV_STRUCT.H	/^    BYTE DataBit;		\/\/数据位 5, 6, 7, 8$/;"	m	struct:_NET_DEV_SERIAL_CFG
DataEncrypt	NET_DEV_STRUCT.H	/^    BYTE DataEncrypt;		\/\/数据加密,0-否,1-是$/;"	m	struct:_NET_DEV_PPPCFG
DataLen	NET_DEV_STRUCT.H	/^    DWORD DataLen;$/;"	m	struct:_NET_DEV_UPGRADE
Data_FIFO	fifolib.h	/^} Data_FIFO,*PData_FIFO;$/;"	t	typeref:struct:data_fifo
Date	NET_DEV_STRUCT.H	/^    BYTE Date;		\/\/日$/;"	m	struct:_NET_DEV_TIME_EX
Day	NET_DEV_STRUCT.H	/^    BYTE Day;		\/\/星期$/;"	m	struct:_NET_DEV_TIME_EX
DayId	NET_DEV_STRUCT.H	/^    DWORD DayId;		\/\/NET_DEV_WEEKDAY$/;"	m	struct:_NET_DEV_DAY
DayNightFilterType	NET_DEV_STRUCT.H	/^    BYTE DayNightFilterType;		\/\/0-白天，1-夜晚，2-自动，3-定时，4-报警输入触发$/;"	m	struct:_NET_DEV_DAYNIGHT
Days	NET_DEV_STRUCT.H	/^    NET_DEV_DAY Days[NET_DEV_WEEKDAY_BUTT];$/;"	m	struct:_NET_DEV_WEEK
DeNoiseLevel	NET_DEV_STRUCT.H	/^    DWORD DeNoiseLevel;		\/\/降噪等级 0--关闭 1--低 2--中 3--高$/;"	m	struct:_NET_DEV_CAMERAPARAM
DecChnCount	NET_DEV_STRUCT.H	/^    BYTE DecChnCount;		\/\/ 解码通道个数$/;"	m	struct:_NET_DEV_CAPABILITIES
Desc	NET_DEV_STRUCT.H	/^    CHAR Desc[NET_DEV_ALARM_DESC_LEN];$/;"	m	struct:_NET_DEV_ALARM_DESC
Desc	NET_DEV_STRUCT.H	/^    CHAR Desc[NET_DEV_DEC_DESCRIBE_LEN];$/;"	m	struct:_NET_DEV_DEC_DIVMODE
DetailType	NET_DEV_STRUCT.H	/^    DWORD DetailType;		\/\/NET_DEV_RECORD_DETAIL_TYPE$/;"	m	struct:_NET_DEV_RECORD_COND
DevID	NET_DEV_PU_SDK.H	/^    char DevID[NET_DEV_IVS_ID_LEN];$/;"	m	struct:_NET_DEV_IVS_CONFIG
DevID	NET_DEV_STRUCT.H	/^    CHAR DevID[NET_DEV_ID_LEN];		\/\/ 设备平台ID$/;"	m	struct:_NET_DEV_SADPCMSINFO
DevID	NET_DEV_STRUCT.H	/^    CHAR DevID[NET_DEV_ID_LEN];$/;"	m	struct:_NET_DEV_PF_GETMDS_REQ
DevID	NET_DEV_STRUCT.H	/^    CHAR DevID[NET_DEV_ID_LEN];$/;"	m	struct:_NET_DEV_PF_REGISTER_REQ
DevIP	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR DevIP;		\/\/ 设备IP$/;"	m	struct:_NET_DEV_SADPCMSINFO
DevIRId	NET_DEV_STRUCT.H	/^    DWORD DevIRId;		\/\/ 设备IRId, 用于遥控器$/;"	m	struct:_NET_DEV_NVRCFG
DevName	NET_DEV_STRUCT.H	/^    CHAR DevName[NET_DEV_DEVICE_NAME_LEN];		\/\/ 设备名称$/;"	m	struct:_NET_DEV_BASECFG
DevName	NET_DEV_STRUCT.H	/^    CHAR DevName[NET_DEV_DEVICE_NAME_LEN];$/;"	m	struct:_NET_DEV_SADPCMSINFO
DevName	NET_DEV_STRUCT.H	/^    CHAR DevName[NET_DEV_DEVICE_NAME_LEN];$/;"	m	struct:_NET_DEV_SADPINFO
DevPort	NET_DEV_STRUCT.H	/^    WORD DevPort;		\/\/ 设备端口$/;"	m	struct:_NET_DEV_SADPCMSINFO
DevType	NET_DEV_STRUCT.H	/^    BYTE DevType;		\/\/ NET_DEV_TYPE$/;"	m	struct:_NET_DEV_SADPCMSINFO
DevType	NET_DEV_STRUCT.H	/^    BYTE DevType;		\/\/ NET_DEV_TYPE$/;"	m	struct:_NET_DEV_SADPINFO
DevType	NET_DEV_STRUCT.H	/^    BYTE DevType;		\/\/ 设备类型 NET_DEV_TYPE$/;"	m	struct:_NET_DEV_CAPABILITIES
DevType	NET_DEV_STRUCT.H	/^    BYTE DevType;		\/\/设备类型  NET_DEV_TYPE$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
DevType	NET_DEV_STRUCT.H	/^    DWORD DevType;		\/\/ 设备类型： NET_DEV_TYPE$/;"	m	struct:_NET_DEV_VERSION
DeviceCount	NET_DEV_STRUCT.H	/^    DWORD DeviceCount;		\/\/返回的设备个数$/;"	m	struct:_NET_DEV_NVR_DEVLIST_RSP
DeviceId	NET_DEV_STRUCT.H	/^    CHAR DeviceId[NET_DEV_ID_LEN];		\/\/ 设备ID$/;"	m	struct:_NET_DEV_GB28181_CFG
DevicePwd	NET_DEV_STRUCT.H	/^    CHAR DevicePwd[NET_DEV_PASSWORD_LEN];		\/\/ 设备密码$/;"	m	struct:_NET_DEV_GB28181_CFG
DeviceState	NET_DEV_STRUCT.H	/^    DWORD DeviceState;		\/\/ 设备的状态：0－正常；1－CPU占用率太高，超过85%；$/;"	m	struct:_NET_DEV_WORKSTATE
Devices	NET_DEV_STRUCT.H	/^    NET_DEV_REMOTE_DEVICE Devices[NET_DEV_MAX_DEVLIST_NUM];		\/\/设备列表$/;"	m	struct:_NET_DEV_NVR_DEVLIST_RSP
DialMethod	NET_DEV_STRUCT.H	/^    BYTE DialMethod;		\/\/ dial methold: 0: auto dial; 1: manual dial;$/;"	m	struct:_NET_DEV_DIALPARAM
DialNum	NET_DEV_STRUCT.H	/^    CHAR DialNum[NET_DEV_USERNAME_LEN];		\/\/ dial number, eg. "#777"$/;"	m	struct:_NET_DEV_PPPDPARAM
DirLevel	NET_DEV_STRUCT.H	/^    BYTE DirLevel;		\/\/0- 不使用目录结构，直接保存在根目录；1- 使用1级目录；2- 使用2级目录$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
Directory	NET_DEV_STRUCT.H	/^    CHAR Directory[NET_DEV_MAX_PATH_LEN];		\/\/ PATHNAME_LEN = 256$/;"	m	struct:_NET_DEV_NET_SINGLE_DISK
DiskCount	NET_DEV_STRUCT.H	/^    BYTE DiskCount;		\/\/ 硬盘口个数$/;"	m	struct:_NET_DEV_CAPABILITIES
DiskCount	NET_DEV_STRUCT.H	/^    DWORD DiskCount;$/;"	m	struct:_NET_DEV_NET_DISKCFG
DiskCount	NET_DEV_STRUCT.H	/^    DWORD DiskCount;$/;"	m	struct:_NET_DEV_PHY_DISK
DiskNo	NET_DEV_STRUCT.H	/^    DWORD DiskNo;		\/\/ 磁盘号$/;"	m	struct:_NET_DEV_FORMATDISK_REQ
DiskNo	NET_DEV_STRUCT.H	/^    DWORD DiskNo;		\/\/ 磁盘号$/;"	m	struct:_NET_DEV_FORMATDISK_RSP
DiskNo	NET_DEV_STRUCT.H	/^    DWORD DiskNo;		\/\/磁盘号$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
DiskState	NET_DEV_STRUCT.H	/^        NET_DEV_DISKSTATES DiskState;$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
DiskState	NET_DEV_STRUCT.H	/^    NET_DEV_DISKSTATES DiskState;		\/\/ 磁盘状态$/;"	m	struct:_NET_DEV_WORKSTATE
DiskType	NET_DEV_STRUCT.H	/^    DWORD DiskType;		\/\/NET_DEV_DISK_TYPE$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
DispChann	NET_DEV_STRUCT.H	/^    DWORD DispChann;		\/\/显示通道编号$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
DispChann	NET_DEV_STRUCT.H	/^    DWORD DispChann;		\/\/显示通道号$/;"	m	struct:_NET_DEV_DEC_DIV
DispChann	NET_DEV_STRUCT.H	/^    DWORD DispChann;		\/\/显示通道号$/;"	m	struct:_NET_DEV_DEC_SCREEN
DisplayAttr	NET_DEV_STRUCT.H	/^    DWORD DisplayAttr;		\/\/osd 反色；1：开启，0：关闭$/;"	m	struct:_NET_DEV_VENC_OSD
DisplayColor	NET_DEV_STRUCT.H	/^    DWORD DisplayColor;		\/\/osd显示颜色$/;"	m	struct:_NET_DEV_VENC_OSD
DivCount	NET_DEV_STRUCT.H	/^    DWORD DivCount;		\/\/本次下发的编码器个数$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
DivCount	NET_DEV_STRUCT.H	/^    DWORD DivCount;		\/\/分割个数$/;"	m	struct:_NET_DEV_DEC_SCREENSTATE
DivId	NET_DEV_STRUCT.H	/^    DWORD DivId;		\/\/分屏模式ID NET_DEV_DEC_DIVID$/;"	m	struct:_NET_DEV_DEC_DIVMODE
DivId	NET_DEV_STRUCT.H	/^    DWORD DivId;		\/\/分屏模式ID NET_DEV_DEC_DIVID$/;"	m	struct:_NET_DEV_DEC_SCREEN
DivId	NET_DEV_STRUCT.H	/^    DWORD DivId;		\/\/分屏模式ID NET_DEV_DEC_DIVID$/;"	m	struct:_NET_DEV_DEC_SCREENSTATE
DivId	NET_DEV_STRUCT.H	/^    DWORD DivId;		\/\/分屏模式ID NET_DEV_DEC_DIVID$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
DivInfo	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIVINFO DivInfo[NET_DEV_DEC_MAX_DIV_NUM];$/;"	m	struct:_NET_DEV_DEC_SCREENSTATE
DivInfo	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIVINFO DivInfo[NET_DEV_DEC_MAX_DIV_NUM];$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
DivNo	NET_DEV_STRUCT.H	/^    DWORD DivNo;		\/\/分割序号 -1: 表示清除所有分割$/;"	m	struct:_NET_DEV_DEC_DIV
Dns	NET_DEV_STRUCT.H	/^    CHAR  Dns[16];$/;"	m	struct:_NET_DEV_WSX_CFG
DspSoftwareDate	NET_DEV_STRUCT.H	/^    CHAR DspSoftwareDate[NET_DEV_DATE_LEN];		\/\/ DSP软件生成日期$/;"	m	struct:_NET_DEV_VERSION
DspSoftwareVer	NET_DEV_STRUCT.H	/^    CHAR DspSoftwareVer[NET_DEV_VERSION_LEN];		\/\/ DSP软件版本$/;"	m	struct:_NET_DEV_VERSION
Dwell	NET_DEV_STRUCT.H	/^    WORD Dwell;		\/\/停留时间$/;"	m	struct:_NET_DEV_PTZ_CRUISEPOINT
ECHO_C	curl/Makefile	/^ECHO_C = $/;"	m
ECHO_N	curl/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	curl/Makefile	/^ECHO_T = $/;"	m
EGREP	curl/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENABLE_SHARED	curl/Makefile	/^ENABLE_SHARED = yes$/;"	m
ENABLE_STATIC	curl/Makefile	/^ENABLE_STATIC = yes$/;"	m
ETAGS	curl/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	curl/Makefile	/^EXEEXT = $/;"	m
EffectMode	NET_DEV_STRUCT.H	/^    DWORD EffectMode;		\/\/模式,0:用户定义, 1: 默认值$/;"	m	struct:_NET_DEV_VIDEO_INPUT_EFFECT
Email	NET_DEV_STRUCT.H	/^    BYTE Email;$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
EnaAlarmInDial	NET_DEV_STRUCT.H	/^    BYTE EnaAlarmInDial;		\/\/ 使能报警输入触发拨号; 0: disable; 1: enable$/;"	m	struct:_NET_DEV_DIALPARAM
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ 0 不检测 1 检测$/;"	m	struct:_NET_DEV_AVD_RULE
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ 1: 使能, 0: 关闭$/;"	m	struct:_NET_DEV_DEC_BIND
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ pea,osc 使能$/;"	m	struct:_NET_DEV_PEAOSC_CFG
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ 上平台开关$/;"	m	struct:_NET_DEV_SADPCMSINFO
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ 使能尺寸过滤$/;"	m	struct:_NET_DEV_PEAOSC_FILTER_RULE
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ 使能目标过滤$/;"	m	struct:_NET_DEV_PEAOSC_TARGET_FILTER
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/ 是否启用规则$/;"	m	struct:_NET_DEV_CPC_RULE
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/使能规则$/;"	m	struct:_NET_DEV_PEAOSC_RULE
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/使能过滤$/;"	m	struct:_NET_DEV_PEAOSC_TIME_FILTER
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/是否启用：0-不启用，1-启用$/;"	m	struct:_NET_DEV_PTZ_PARKACTION_CFG
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;		\/\/是否启用：0-不启用，1-启用$/;"	m	struct:_NET_DEV_PTZ_TIME_TASK
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;$/;"	m	struct:_NET_DEV_AVD_CFG
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;$/;"	m	struct:_NET_DEV_CPC_CFG
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
Enable	NET_DEV_STRUCT.H	/^    BYTE Enable;$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;		\/\/1:开启    0: 不开启$/;"	m	struct:_NET_DEV_ROI
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;		\/\/报警上传使能开关$/;"	m	struct:_NET_DEV_ALARMHOST_CFG
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;		\/\/是否开启$/;"	m	struct:_NET_DEV_CMS_CFG
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;		\/\/是否启用遮挡$/;"	m	struct:_NET_DEV_VENC_OVERLAY
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;		\/\/是否生效$/;"	m	struct:_NET_DEV_TIMESEG
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;		\/\/通道使能（0: 禁止、1: 开启）$/;"	m	struct:_NET_DEV_NVR_CHANNEL
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;$/;"	m	struct:_NET_DEV_HIDE_ALARM
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;$/;"	m	struct:_NET_DEV_LOST_ALARM
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;$/;"	m	struct:_NET_DEV_MOTION_ALARM
Enable	NET_DEV_STRUCT.H	/^    DWORD Enable;$/;"	m	struct:_NET_DEV_PIR_ALARM
Enable	NET_DEV_STRUCT.H	/^    WORD Enable;		\/\/ 是否开启$/;"	m	struct:_NET_DEV_ALARMOUTCFG
Enable	NET_DEV_STRUCT.H	/^    WORD Enable;		\/\/DDNS开关$/;"	m	struct:_NET_DEV_DDNS_CFG
Enable	NET_DEV_STRUCT.H	/^    WORD Enable;		\/\/该端口是否使能映射$/;"	m	struct:_NET_DEV_UPNP_PORT
Enable	NET_DEV_STRUCT.H	/^    WORD Enable;		\/\/是否开启$/;"	m	struct:_NET_DEV_ALARMIN_ALARM
Enable3G	NET_DEV_STRUCT.H	/^    BYTE Enable3G;		\/\/ 0: disable; 1: enable 3g$/;"	m	struct:_NET_DEV_DIALPARAM
EnableAnony	NET_DEV_STRUCT.H	/^    BYTE EnableAnony;		\/\/启用匿名：0- 否，1- 是$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
EnableAutoDNS	NET_DEV_STRUCT.H	/^    BYTE EnableAutoDNS;		\/\/是否允许自动获取DNS$/;"	m	struct:_NET_DEV_NICCFG
EnableDHCP	NET_DEV_STRUCT.H	/^    BYTE EnableDHCP;		\/\/是否启用DHCP$/;"	m	struct:_NET_DEV_NICCFG
EnableDST	NET_DEV_STRUCT.H	/^    DWORD EnableDST;		\/\/夏令时使能；1：启用，0：不启用$/;"	m	struct:_NET_DEV_NTPCFG
EnableFlag	NET_DEV_STRUCT.H	/^    BYTE  EnableFlag; \/* 0:不启用;  1:启用. *\/$/;"	m	struct:_NET_DEV_WSX_CFG
EnableHb	NET_DEV_STRUCT.H	/^    DWORD EnableHb;$/;"	m	struct:_NET_DEV_WSX_CFG
EnableNTP	NET_DEV_STRUCT.H	/^    DWORD EnableNTP;		\/\/是否开启: 0：不开启，1：NTP对时，2：CMS对时$/;"	m	struct:_NET_DEV_NTPCFG
EnableNat	NET_DEV_STRUCT.H	/^    WORD EnableNat;		\/\/UPNP端口映射（NAT）功能是否启用$/;"	m	struct:_NET_DEV_UPNP_CFG
EnablePPPOE	NET_DEV_STRUCT.H	/^    DWORD EnablePPPOE;$/;"	m	struct:_NET_DEV_PPPOECFG
EnableSipHeartbeat	NET_DEV_STRUCT.H	/^    DWORD EnableSipHeartbeat;$/;"	m	struct:_NET_DEV_WSX_CFG
EnableSipReg	NET_DEV_STRUCT.H	/^    DWORD EnableSipReg;$/;"	m	struct:_NET_DEV_WSX_CFG
EnableUpnp	NET_DEV_STRUCT.H	/^    WORD EnableUpnp;		\/\/UPNP功能是否启用$/;"	m	struct:_NET_DEV_UPNP_CFG
EnableWeek	NET_DEV_STRUCT.H	/^    WORD EnableWeek;		\/\/是否开启定时录像 0-禁止 1-开启$/;"	m	struct:_NET_DEV_RECORD
EnableWifi	NET_DEV_STRUCT.H	/^    DWORD EnableWifi;		\/\/WIFI使能: 0-禁止, 1-允许$/;"	m	struct:_NET_DEV_WIFINIC
EncChann	NET_DEV_STRUCT.H	/^    DWORD EncChann;		\/\/编码器通道$/;"	m	struct:_NET_DEV_DEC_DIVINFO
EncChnCount	NET_DEV_STRUCT.H	/^    BYTE EncChnCount;		\/\/ 编码通道个数$/;"	m	struct:_NET_DEV_CAPABILITIES
EncChnCount	NET_DEV_STRUCT.H	/^    BYTE EncChnCount;		\/\/ 编码通道个数$/;"	m	struct:_NET_DEV_SADPCMSINFO
EncChnCount	NET_DEV_STRUCT.H	/^    BYTE EncChnCount;		\/\/ 编码通道个数$/;"	m	struct:_NET_DEV_SADPINFO
EncChnn	NET_DEV_STRUCT.H	/^    DWORD EncChnn;		\/\/编码器通道$/;"	m	struct:_NET_DEV_DEC_FULLSCREENINFO
EncodeLevel	NET_DEV_STRUCT.H	/^    DWORD EncodeLevel;		\/\/编码等级 'NET_DEV_ENCODELEVEL'$/;"	m	struct:_NET_DEV_ENCODEPARAM
EncodeType	NET_DEV_STRUCT.H	/^    WORD  EncodeType;                   \/*编码类型*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
EncodeType	NET_DEV_STRUCT.H	/^    WORD EncodeType;                  \/*编码类型*\/$/;"	m	struct:_NET_DEV_MEDIA_VIDEOPARAM
EncodeType	NET_DEV_STRUCT.H	/^    WORD EncodeType;                \/*编码类型*\/$/;"	m	struct:_NET_DEV_MEDIA_AUDIOPARAM
Encoder	NET_DEV_STRUCT.H	/^    CHAR Encoder[NET_DEV_DEC_NAME_LEN];		\/\/编码器名称$/;"	m	struct:_NET_DEV_DEC_DIVINFO
Encoder	NET_DEV_STRUCT.H	/^    CHAR Encoder[NET_DEV_DEC_NAME_LEN];		\/\/编码器名称$/;"	m	struct:_NET_DEV_DEC_FULLSCREENINFO
EncryptType	NET_DEV_STRUCT.H	/^    DWORD EncryptType;		\/\/ 加密类型NET_DEV_WIFI_WPAPSK_ET$/;"	m	struct:_NET_DEV_WIFI_WPAPSK
EncryptType	NET_DEV_STRUCT.H	/^    DWORD EncryptType;		\/\/加密类型 'NET_DEV_WIFI_WPAPSK_ET', 只对应于加密类型为WPAPSK\/WPA2PSK的情况$/;"	m	struct:_NET_DEV_WIFI_AP
End	NET_DEV_STRUCT.H	/^    NET_DEV_POINT End;$/;"	m	struct:_NET_DEV_LINE
EndHour	NET_DEV_STRUCT.H	/^    BYTE EndHour;		\/\/结束时间$/;"	m	struct:_NET_DEV_TIMESEG
EndMin	NET_DEV_STRUCT.H	/^    BYTE EndMin;$/;"	m	struct:_NET_DEV_TIMESEG
EndTime	NET_DEV_STRUCT.H	/^    DWORD EndTime;		\/\/结束时间$/;"	m	struct:_NET_DEV_LOG_COND
EndTime	NET_DEV_STRUCT.H	/^    DWORD EndTime;		\/\/结束时间$/;"	m	struct:_NET_DEV_PIC_COND
EndTime	NET_DEV_STRUCT.H	/^    DWORD EndTime;                   \/*媒体结束时间*\/$/;"	m	struct:_NET_DEV_MEDIA_PARAM
EndTime	NET_DEV_STRUCT.H	/^    DWORD EndTime;$/;"	m	struct:_NET_DEV_RECORD_COND
EndTime	NET_DEV_STRUCT.H	/^    DWORD EndTime;$/;"	m	struct:_NET_DEV_RECORD_ITEM
EssID	NET_DEV_STRUCT.H	/^    CHAR EssID[NET_DEV_WIFI_ESSID_LEN];		\/\/Wifi服务号$/;"	m	struct:_NET_DEV_WIFICFG
EssId	NET_DEV_STRUCT.H	/^    CHAR EssId[NET_DEV_WIFI_ESSID_LEN];		\/\/服务区别号$/;"	m	struct:_NET_DEV_WIFI_AP
EssId	NET_DEV_STRUCT.H	/^    CHAR EssId[NET_DEV_WIFI_ESSID_LEN];		\/\/服务区别号$/;"	m	struct:_NET_DEV_WIFI_WPS
EthCfg	NET_DEV_STRUCT.H	/^    NET_DEV_ETHCFG EthCfg;$/;"	m	struct:_NET_DEV_MODIFY_NET
EthCfg	NET_DEV_STRUCT.H	/^    NET_DEV_ETHCFG EthCfg;$/;"	m	struct:_NET_DEV_SADPINFO
EthCount	NET_DEV_STRUCT.H	/^    BYTE EthCount;		\/\/ 网络口个数$/;"	m	struct:_NET_DEV_CAPABILITIES
EthNICs	NET_DEV_STRUCT.H	/^    NET_DEV_NICCFG EthNICs[NET_DEV_MAX_ETH_NICS];$/;"	m	struct:_NET_DEV_ETHCFG
Event	NET_DEV_STRUCT.H	/^    DWORD Event;          \/\/目标触发的事件类型 NET_DEV_PEAOSC_EVENT_TYPE$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
EventNum	NET_DEV_STRUCT.H	/^  BYTE EventNum;      \/\/ 包含事件个数(Mask & 0x1 == 1时有效) <= NET_DEV_MAX_PEAOSC_EVENT_NUM\/NET_DEV_MAX_CPC_EVENT_NUM$/;"	m	struct:_NET_DEV_MEDIA_IVS_HDR
ExpectHttpPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT ExpectHttpPort;$/;"	m	struct:_NET_DEV_UPNP_CFG
ExpectMsgPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT ExpectMsgPort;$/;"	m	struct:_NET_DEV_UPNP_CFG
ExpectRtmpPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT ExpectRtmpPort;$/;"	m	struct:_NET_DEV_UPNP_CFG
ExpectRtspPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT ExpectRtspPort;$/;"	m	struct:_NET_DEV_UPNP_CFG
ExtPort	NET_DEV_STRUCT.H	/^    WORD ExtPort;		\/\/映射的外部端口号$/;"	m	struct:_NET_DEV_UPNP_PORT
ExternalPort	NET_DEV_STRUCT.H	/^    WORD ExternalPort;		\/\/映射后的端口$/;"	m	struct:_NET_DEV_UPNP_PORT_STATE
FALSE	NET_DEV_STRUCT.H	39;"	d
FAST	BaseType.h	77;"	d
FGREP	curl/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FIFOClear	fifolib.c	/^void FIFOClear(Data_FIFO *_ptFifo)$/;"	f
FISH_FUNCTIONS_DIR	curl/Makefile	/^FISH_FUNCTIONS_DIR = ${prefix}\/share\/fish\/vendor_completions.d$/;"	m
FPS	NET_DEV_STRUCT.H	/^    DWORD FPS[NET_DEV_MAX_STREAM_NUM];		\/\/支持的最大帧率集 数值表示支持的最大帧率值$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
FRAME_SIZE	main.c	1267;"	d	file:
FRAME_SIZE	main.c	66;"	d	file:
FRAME_TYPE_I	main.c	/^    FRAME_TYPE_I = 0,$/;"	e	enum:__anon43	file:
FRAME_TYPE_NULL	main.c	/^    FRAME_TYPE_NULL       $/;"	e	enum:__anon43	file:
FRAME_TYPE_P	main.c	/^    FRAME_TYPE_P = 1,$/;"	e	enum:__anon43	file:
FileLen	NET_DEV_STRUCT.H	/^    DWORD FileLen;$/;"	m	struct:_NET_DEV_UPGRADE
FileSystemType	NET_DEV_STRUCT.H	/^    DWORD FileSystemType;		\/\/NET_DEV_FILESYSTEM_TYPE$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
Filter	NET_DEV_STRUCT.H	/^    } Filter;$/;"	m	struct:_NET_DEV_PEAOSC_FILTER_RULE	typeref:union:_NET_DEV_PEAOSC_FILTER_RULE::__anon57
FilterLevel	NET_DEV_STRUCT.H	/^    BYTE FilterLevel;		\/\/自动切换时 0 低电平切换 1 高电平切换$/;"	m	struct:_NET_DEV_DAYNIGHT
FilterSize	NET_DEV_STRUCT.H	/^        NET_DEV_PEAOSC_SIZE_FILTER FilterSize;$/;"	m	union:_NET_DEV_PEAOSC_FILTER_RULE::__anon57
FilterType	NET_DEV_STRUCT.H	/^    BYTE FilterType;		\/\/ 限制类型，0: 限制总体尺寸，1: 限制宽高$/;"	m	struct:_NET_DEV_PEAOSC_FILTER_RULE
FilterWH	NET_DEV_STRUCT.H	/^        NET_DEV_PEAOSC_WH_FILTER FilterWH;$/;"	m	union:_NET_DEV_PEAOSC_FILTER_RULE::__anon57
Flag	NET_DEV_STRUCT.H	/^    DWORD Flag;		\/\/ 方向操作启停标志  1: 开始 0: 停止;$/;"	m	struct:_NET_DEV_PTZ_CONTROL
Flag	NET_DEV_STRUCT.H	/^    DWORD Flag;		\/\/清分割标志（0：不清除分割1：清除分割）$/;"	m	struct:_NET_DEV_DEC_DIVINFO
Flip	NET_DEV_STRUCT.H	/^    DWORD Flip;		\/\/翻转(图像上下调换) 1 翻转 0 不翻转$/;"	m	struct:_NET_DEV_CAMERAPARAM
Fliter	NET_DEV_STRUCT.H	/^    DWORD Fliter;		\/\/ 目前，bit0: 人, bit1: 车$/;"	m	struct:_NET_DEV_PEAOSC_TARGET_FILTER
FlowControl	NET_DEV_STRUCT.H	/^    BYTE FlowControl;		\/\/ 流控     请参考 NET_DEV_RS232_CFG 定义解释$/;"	m	struct:_NET_DEV_PTZ_CFG
FlowControl	NET_DEV_STRUCT.H	/^    BYTE FlowControl;		\/\/流控 0－无，1－软流控, 2-硬流控$/;"	m	struct:_NET_DEV_SERIAL_CFG
FrameRate	NET_DEV_STRUCT.H	/^    DWORD FrameRate;		\/\/帧率 数值型 常用值：5，10, 15, 20, 25, 30$/;"	m	struct:_NET_DEV_ENCODEPARAM
FrameRate	NET_DEV_STRUCT.H	/^    WORD FrameRate;                   \/*帧率*\/$/;"	m	struct:_NET_DEV_MEDIA_VIDEOPARAM
FrameRate	NET_DEV_STRUCT.H	/^    WORD FrameRate;                 \/*帧率*\/$/;"	m	struct:_NET_DEV_MEDIA_AUDIOPARAM
FreeSize	NET_DEV_STRUCT.H	/^    DWORD FreeSize;		\/\/剩余容量 单位M$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
FreeSpace	NET_DEV_STRUCT.H	/^    DWORD FreeSpace;		\/\/硬盘剩余空间 M$/;"	m	struct:_NET_DEV_DISKSTATE
Frezon	NET_DEV_STRUCT.H	/^    DWORD Frezon;		\/\/视频冻结0 关闭 1 打开$/;"	m	struct:_NET_DEV_CAMERAPARAM
FromAddr	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR FromAddr;		\/\/发送邮件地址$/;"	m	struct:_NET_DEV_SMTP_CFG
FromNIC	NET_DEV_STRUCT.H	/^    BYTE FromNIC;		\/\/NVR搜索设备时，标记此设备通过哪个网口接入; NET_DEV_NIC_IDX$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
FromPassWord	NET_DEV_STRUCT.H	/^    CHAR FromPassWord[NET_DEV_PASSWORD_LEN];		\/\/发送邮件密码$/;"	m	struct:_NET_DEV_SMTP_CFG
FromUserName	NET_DEV_STRUCT.H	/^    CHAR FromUserName[NET_DEV_USERNAME_LEN];		\/\/发送邮件账号$/;"	m	struct:_NET_DEV_SMTP_CFG
Ftp	NET_DEV_STRUCT.H	/^    BYTE Ftp;		\/\/$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
Ftp	NET_DEV_STRUCT.H	/^    BYTE Ftp;		\/\/定时抓拍ftp 上传$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
FullScreenInfo	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_FULLSCREENINFO FullScreenInfo;		\/\/$/;"	m	struct:_NET_DEV_DEC_SCREENSTATE
G711A_AUDIO_ENCODER	main.c	/^    G711A_AUDIO_ENCODER,$/;"	e	enum:__anon46	file:
G711A_AUDIO_PATH	main.c	54;"	d	file:
G711A_FRAME_SIZE	main.c	860;"	d	file:
G711U_AUDIO_ENCODER	main.c	/^    G711U_AUDIO_ENCODER,$/;"	e	enum:__anon46	file:
G726_AUDIO_ENCODER	main.c	/^    G726_AUDIO_ENCODER,$/;"	e	enum:__anon46	file:
GCOV	curl/Makefile	/^GCOV = $/;"	m
GREEN	BaseType.h	135;"	d
GREP	curl/Makefile	/^GREP = \/bin\/grep$/;"	m
GSFAUDIO_DATA_PROCESS	main.c	/^typedef int (*GSFAUDIO_DATA_PROCESS)(char *_cBuf,int _iLen,char * FileName);$/;"	t	file:
GSF_DATA_ERR_CONN	gsf_data_struct.h	44;"	d
GSF_DATA_ERR_DEV	gsf_data_struct.h	47;"	d
GSF_DATA_ERR_DWON_FIND	gsf_data_struct.h	54;"	d
GSF_DATA_ERR_IO	gsf_data_struct.h	43;"	d
GSF_DATA_ERR_KEEP	gsf_data_struct.h	45;"	d
GSF_DATA_ERR_OK	gsf_data_struct.h	41;"	d
GSF_DATA_ERR_TALK_BUSY	gsf_data_struct.h	52;"	d
GSF_DATA_ERR_UPG_BUSY	gsf_data_struct.h	49;"	d
GSF_DATA_ERR_UPG_PKG	gsf_data_struct.h	50;"	d
GSF_DATA_FMT_HTON	gsf_data_struct.h	77;"	d
GSF_DATA_FMT_NTOH	gsf_data_struct.h	83;"	d
GSF_DATA_MAX_SIZE	gsf_data_struct.h	5;"	d
GSF_DATA_PACKET_EOF_ALL	gsf_data_struct.h	/^    GSF_DATA_PACKET_EOF_ALL  = 2    \/* 所有文件结束标记 *\/$/;"	e	enum:_GSF_DATA_PACKET_EOF
GSF_DATA_PACKET_EOF_E	gsf_data_struct.h	/^}GSF_DATA_PACKET_EOF_E;$/;"	t	typeref:enum:_GSF_DATA_PACKET_EOF
GSF_DATA_PACKET_EOF_FILE	gsf_data_struct.h	/^    GSF_DATA_PACKET_EOF_FILE = 1,   \/* 单个文件结束标记 *\/   $/;"	e	enum:_GSF_DATA_PACKET_EOF
GSF_DATA_PACKET_EOF_NONE	gsf_data_struct.h	/^    GSF_DATA_PACKET_EOF_NONE = 0,   \/* 不是结束包 *\/$/;"	e	enum:_GSF_DATA_PACKET_EOF
GSF_DATA_PACKET_HTON	gsf_data_struct.h	241;"	d
GSF_DATA_PACKET_NTOH	gsf_data_struct.h	246;"	d
GSF_DATA_PACKET_TYPE_CMS	gsf_data_struct.h	/^    GSF_DATA_PACKET_TYPE_CMS = 2,   \/* CMS存储数据包 *\/$/;"	e	enum:_GSF_DATA_PACKET_TYPE
GSF_DATA_PACKET_TYPE_E	gsf_data_struct.h	/^}GSF_DATA_PACKET_TYPE_E;$/;"	t	typeref:enum:_GSF_DATA_PACKET_TYPE
GSF_DATA_PACKET_TYPE_IPC	gsf_data_struct.h	/^	GSF_DATA_PACKET_TYPE_IPC = 4	\/* IPC存储数据包 *\/$/;"	e	enum:_GSF_DATA_PACKET_TYPE
GSF_DATA_PACKET_TYPE_JPEG	gsf_data_struct.h	/^    GSF_DATA_PACKET_TYPE_JPEG= 3,   \/* 标准JPEG图片  gsf_data_trans_pic *\/ $/;"	e	enum:_GSF_DATA_PACKET_TYPE
GSF_DATA_PACKET_TYPE_NVR	gsf_data_struct.h	/^    GSF_DATA_PACKET_TYPE_NVR = 1,   \/* NVR存储数据包 *\/$/;"	e	enum:_GSF_DATA_PACKET_TYPE
GSF_DATA_TALK_FRAME_HTON	gsf_data_struct.h	163;"	d
GSF_DATA_TALK_FRAME_NTOH	gsf_data_struct.h	169;"	d
GSF_DATA_TRANS_DIR_E	gsf_data_struct.h	/^}GSF_DATA_TRANS_DIR_E;$/;"	t	typeref:enum:_GSF_DATA_TRANS_DIR
GSF_DATA_TRANS_DIR_NONE	gsf_data_struct.h	/^    GSF_DATA_TRANS_DIR_NONE = 0,    \/* 数据 *\/$/;"	e	enum:_GSF_DATA_TRANS_DIR
GSF_DATA_TRANS_DIR_REQ	gsf_data_struct.h	/^    GSF_DATA_TRANS_DIR_REQ  = 1,    \/* 请求消息 *\/$/;"	e	enum:_GSF_DATA_TRANS_DIR
GSF_DATA_TRANS_DIR_RSP	gsf_data_struct.h	/^    GSF_DATA_TRANS_DIR_RSP  = 2     \/* 回应消息 *\/$/;"	e	enum:_GSF_DATA_TRANS_DIR
GSF_DATA_TRANS_DOWN_PIC1	gsf_data_struct.h	/^    GSF_DATA_TRANS_DOWN_PIC1 = 3,   \/* property *\/$/;"	e	enum:_GSF_DATA_TRANS_DOWN_TYPE
GSF_DATA_TRANS_DOWN_PIC2	gsf_data_struct.h	/^    GSF_DATA_TRANS_DOWN_PIC2 = 4,   \/* begin_time , end_time *\/$/;"	e	enum:_GSF_DATA_TRANS_DOWN_TYPE
GSF_DATA_TRANS_DOWN_REC1	gsf_data_struct.h	/^    GSF_DATA_TRANS_DOWN_REC1 = 1,   \/* property *\/$/;"	e	enum:_GSF_DATA_TRANS_DOWN_TYPE
GSF_DATA_TRANS_DOWN_REC2	gsf_data_struct.h	/^    GSF_DATA_TRANS_DOWN_REC2 = 2,   \/* begin_time , end_time *\/$/;"	e	enum:_GSF_DATA_TRANS_DOWN_TYPE
GSF_DATA_TRANS_DOWN_REQ_HTON	gsf_data_struct.h	275;"	d
GSF_DATA_TRANS_DOWN_REQ_NTOH	gsf_data_struct.h	284;"	d
GSF_DATA_TRANS_DOWN_RSP_HTON	gsf_data_struct.h	304;"	d
GSF_DATA_TRANS_DOWN_RSP_NTOH	gsf_data_struct.h	312;"	d
GSF_DATA_TRANS_DOWN_SPEED_HTON	gsf_data_struct.h	326;"	d
GSF_DATA_TRANS_DOWN_SPEED_NTOH	gsf_data_struct.h	330;"	d
GSF_DATA_TRANS_DOWN_TYPE	gsf_data_struct.h	/^}GSF_DATA_TRANS_DOWN_TYPE;$/;"	t	typeref:enum:_GSF_DATA_TRANS_DOWN_TYPE
GSF_DATA_TRANS_ID_DOWN_DATA	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_DOWN_DATA                                \/* gsf_data_fmt_t + gsf_data_packet_t + file data *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_DOWN_REQ	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_DOWN_REQ    = GSF_DATA_TRANS_TYPE_DOWN+0 \/* gsf_data_fmt_t + gsf_data_trans_down_req *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_DOWN_RSP	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_DOWN_RSP                                 \/* gsf_data_fmt_t + gsf_data_trans_down_rsp *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_DOWN_SPEED	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_DOWN_SPEED                               \/* gsf_data_fmt_t + req: gsf_data_trans_down_speed, rsp: null *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_E	gsf_data_struct.h	/^}GSF_DATA_TRANS_ID_E;$/;"	t	typeref:enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_KEEPALIVE	gsf_data_struct.h	/^     GSF_DATA_TRANS_ID_KEEPALIVE   = 0                          \/* gsf_data_fmt_t + null *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_SNAP_DATA	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_SNAP_DATA                                \/* gsf_data_fmt_t + gsf_data_packet_t + picture data *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_SNAP_REQ	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_SNAP_REQ   = GSF_DATA_TRANS_TYPE_SNAP+0  \/* gsf_data_fmt_t + gsf_data_trans_snap_req *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_SNAP_RSP	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_SNAP_RSP                                 \/* gsf_data_fmt_t + gsf_data_trans_snap_rsp *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_TALK_DATA	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_TALK_DATA                                \/* gsf_data_fmt_t + gsf_data_talk_frame_t + audio data *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_TALK_REQ	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_TALK_REQ    = GSF_DATA_TRANS_TYPE_TALK+0 \/* gsf_data_fmt_t + gsf_data_trans_talk_req *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_TALK_RSP	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_TALK_RSP                                 \/* gsf_data_fmt_t + gsf_data_trans_talk_rsp *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_UPG_DATA	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_UPG_DATA                                 \/* gsf_data_fmt_t + file data *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_UPG_PERCENT	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_UPG_PERCENT                              \/* gsf_data_fmt_t + req: null, rsp: gsf_data_upg_percent_rsp *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_UPG_REQ	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_UPG_REQ     = GSF_DATA_TRANS_TYPE_UPG+0  \/* gsf_data_fmt_t + gsf_data_trans_upg_req *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_ID_UPG_RSP	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_ID_UPG_RSP                                  \/* gsf_data_fmt_t + gsf_data_trans_upg_rsp *\/$/;"	e	enum:_GSF_DATA_TRANS_ID
GSF_DATA_TRANS_SNAP_PIC_HTON	gsf_data_struct.h	377;"	d
GSF_DATA_TRANS_SNAP_PIC_NTOH	gsf_data_struct.h	382;"	d
GSF_DATA_TRANS_SNAP_REQ_HTON	gsf_data_struct.h	344;"	d
GSF_DATA_TRANS_SNAP_REQ_NTOH	gsf_data_struct.h	350;"	d
GSF_DATA_TRANS_SNAP_RSP_HTON	gsf_data_struct.h	362;"	d
GSF_DATA_TRANS_SNAP_RSP_NTOH	gsf_data_struct.h	366;"	d
GSF_DATA_TRANS_TALK_REQ_HTON	gsf_data_struct.h	190;"	d
GSF_DATA_TRANS_TALK_REQ_NTOH	gsf_data_struct.h	195;"	d
GSF_DATA_TRANS_TALK_RSP_HTON	gsf_data_struct.h	205;"	d
GSF_DATA_TRANS_TALK_RSP_NTOH	gsf_data_struct.h	209;"	d
GSF_DATA_TRANS_TALK_TYPE_BC	gsf_data_struct.h	/^    GSF_DATA_TRANS_TALK_TYPE_BC   = 1   \/* CU单向广播PU *\/$/;"	e	enum:_GSF_DATA_TRANS_TALK_TYPE
GSF_DATA_TRANS_TALK_TYPE_DUAL	gsf_data_struct.h	/^    GSF_DATA_TRANS_TALK_TYPE_DUAL = 0,  \/* 双向语音     *\/$/;"	e	enum:_GSF_DATA_TRANS_TALK_TYPE
GSF_DATA_TRANS_TALK_TYPE_E	gsf_data_struct.h	/^}GSF_DATA_TRANS_TALK_TYPE_E;$/;"	t	typeref:enum:_GSF_DATA_TRANS_TALK_TYPE
GSF_DATA_TRANS_TYPE_DOWN	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_TYPE_DOWN= 0x0300   \/* 下载ID 偏移地址 低8位必须为0x00 *\/$/;"	e	enum:_GSF_DATA_TRANS_TYPE
GSF_DATA_TRANS_TYPE_E	gsf_data_struct.h	/^}GSF_DATA_TRANS_TYPE_E;$/;"	t	typeref:enum:_GSF_DATA_TRANS_TYPE
GSF_DATA_TRANS_TYPE_GET	gsf_data_struct.h	16;"	d
GSF_DATA_TRANS_TYPE_SNAP	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_TYPE_SNAP= 0x0400   \/* 抓拍ID 偏移地址 低8位必须为0x00 *\/$/;"	e	enum:_GSF_DATA_TRANS_TYPE
GSF_DATA_TRANS_TYPE_TALK	gsf_data_struct.h	/^    ,GSF_DATA_TRANS_TYPE_TALK= 0x0200   \/* 对讲ID 偏移地址 低8位必须为0x00 *\/$/;"	e	enum:_GSF_DATA_TRANS_TYPE
GSF_DATA_TRANS_TYPE_UPG	gsf_data_struct.h	/^     GSF_DATA_TRANS_TYPE_UPG = 0x0100   \/* 升级ID 偏移地址 低8位必须为0x00 *\/$/;"	e	enum:_GSF_DATA_TRANS_TYPE
GSF_DATA_TRANS_UPG_PERCENT_RSP_HTON	gsf_data_struct.h	143;"	d
GSF_DATA_TRANS_UPG_PERCENT_RSP_NTOH	gsf_data_struct.h	147;"	d
GSF_DATA_TRANS_UPG_REQ_HTON	gsf_data_struct.h	115;"	d
GSF_DATA_TRANS_UPG_REQ_NTOH	gsf_data_struct.h	119;"	d
GSF_DATA_TRANS_UPG_RSP_HTON	gsf_data_struct.h	129;"	d
GSF_DATA_TRANS_UPG_RSP_NTOH	gsf_data_struct.h	133;"	d
GSF_DATA_TRANS_URL_LEN	gsf_data_struct.h	93;"	d
GSF_DATA_UPG_FILE_HDR_LEN	gsf_data_struct.h	105;"	d
GSF_DEFAULT_LOCAL_TIME	gsf_net_api.h	33;"	d
GSF_DEFAULT_RECV_TIMEOUT	gsf_net_api.h	30;"	d
GSF_DEFAULT_SEND_TIMEOUT	gsf_net_api.h	31;"	d
GSF_LOCAL_TCP_SOCK	gsf_net_api.h	/^    GSF_LOCAL_TCP_SOCK  ,$/;"	e	enum:_GSF_SOCK_TYPE_
GSF_LOCAL_UDP_SOCK	gsf_net_api.h	/^    GSF_LOCAL_UDP_SOCK  ,$/;"	e	enum:_GSF_SOCK_TYPE_
GSF_MAX_BLOCK_RECV_TIME	gsf_net_api.h	28;"	d
GSF_MAX_BLOCK_SEND_TIME	gsf_net_api.h	27;"	d
GSF_RETURN_FAIL	gsf_net_api.h	35;"	d
GSF_RETURN_OK	gsf_net_api.h	36;"	d
GSF_SOCK_TYPE	gsf_net_api.h	/^}GSF_SOCK_TYPE;$/;"	t	typeref:enum:_GSF_SOCK_TYPE_
GSF_TCP_SOCK	gsf_net_api.h	/^    GSF_TCP_SOCK         = 1,$/;"	e	enum:_GSF_SOCK_TYPE_
GSF_UDP_SOCK	gsf_net_api.h	/^    GSF_UDP_SOCK        ,$/;"	e	enum:_GSF_SOCK_TYPE_
Gateway	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR Gateway;		\/\/网关$/;"	m	struct:_NET_DEV_NICCFG
GetDataFromFiFo	fifolib.c	/^DLL_DECLARE void *GetDataFromFiFo(Data_FIFO *_ptFifo)$/;"	f
GetFifoByteNum	fifolib.c	/^DLL_DECLARE int GetFifoByteNum( Data_FIFO *_ptFifo)$/;"	f
GetP	NET_DEV_PU_SDK.H	/^    int  (*GetP) (NET_DEV_PEER *Peer, int Chnl, int PID, void *In, void *Out);$/;"	m	struct:_NET_DEV_SDK_FUNCS
GsfLiveMedia	main.c	/^typedef struct _GsfLiveMedia GsfLiveMedia;$/;"	t	typeref:struct:_GsfLiveMedia	file:
H264_VIDEO_ENCODER	main.c	/^    H264_VIDEO_ENCODER,$/;"	e	enum:__anon45	file:
H264_VIDEO_PATH	main.c	56;"	d	file:
H265_VIDEO_ENCODER	main.c	/^    H265_VIDEO_ENCODER,$/;"	e	enum:__anon45	file:
HANDLE	NET_DEV_STRUCT.H	/^typedef  void*              HANDLE;$/;"	t
HAVE_BROTLI	curl/Makefile	/^HAVE_BROTLI = $/;"	m
HAVE_GNUTLS_SRP	curl/Makefile	/^HAVE_GNUTLS_SRP = $/;"	m
HAVE_LDAP_SSL	curl/Makefile	/^HAVE_LDAP_SSL = 1$/;"	m
HAVE_LIBZ	curl/Makefile	/^HAVE_LIBZ = 1$/;"	m
HAVE_OPENSSL_SRP	curl/Makefile	/^HAVE_OPENSSL_SRP = 1$/;"	m
HAVE_PROTO_BSDSOCKET_H	curl/Makefile	/^HAVE_PROTO_BSDSOCKET_H = $/;"	m
HClose	NET_DEV_PU_SDK.H	/^    void (*HClose) (NET_DEV_MEDIA *Media);$/;"	m	struct:_NET_DEV_SDK_FUNCS
HDC	NET_DEV_STRUCT.H	/^    typedef DC* HDC;$/;"	t
HDC	NET_DEV_STRUCT.H	/^    typedef void* HDC;$/;"	t
HEADERS	curl/Makefile	/^HEADERS = $(pkginclude_HEADERS)$/;"	m
HEVC_VIDEO_PATH	main.c	55;"	d	file:
HI_AUDIO_INFO_S	file.c	/^}HI_AUDIO_INFO_S, *LPHI_AUDIO_INFO_S;$/;"	t	typeref:struct:_HI_AUDIO_INFO_S	file:
HI_FRAME_HEAD_S	file.c	/^}HI_FRAME_HEAD_S, *LPHI_FRAME_HEAD_S;$/;"	t	typeref:struct:_HI_FRAME_HEAD_S	file:
HI_VIDEO_INFO_S	file.c	/^}HI_VIDEO_INFO_S,*LPHI_VIDEO_INFO_S;$/;"	t	typeref:struct:_HI_VIDEO_INFO_S	file:
HLseek	NET_DEV_PU_SDK.H	/^    int  (*HLseek) (NET_DEV_MEDIA *Media, unsigned Timestamp);$/;"	m	struct:_NET_DEV_SDK_FUNCS
HOpen	NET_DEV_PU_SDK.H	/^    int  (*HOpen) (NET_DEV_MEDIA *Media, int Chnl, int Level,$/;"	m	struct:_NET_DEV_SDK_FUNCS
HPause	NET_DEV_PU_SDK.H	/^    int  (*HPause) (NET_DEV_MEDIA *Media);$/;"	m	struct:_NET_DEV_SDK_FUNCS
HPlay	NET_DEV_PU_SDK.H	/^    int  (*HPlay) (NET_DEV_MEDIA *Media);$/;"	m	struct:_NET_DEV_SDK_FUNCS
HProbe	NET_DEV_PU_SDK.H	/^    int  (*HProbe) (int Chnl, int Level, unsigned StartTime, unsigned EndTime,$/;"	m	struct:_NET_DEV_SDK_FUNCS
HPull	NET_DEV_PU_SDK.H	/^    int  (*HPull) (NET_DEV_MEDIA *Media, void **PFrame);$/;"	m	struct:_NET_DEV_SDK_FUNCS
HTTP_PORT	main.c	79;"	d	file:
HTTP_POST_FMT	main.c	157;"	d	file:
HWND	NET_DEV_STRUCT.H	/^    typedef unsigned int HWND;$/;"	t
HWND	NET_DEV_STRUCT.H	/^    typedef void* HWND;$/;"	t
HW_VER	main.c	88;"	d	file:
Handles	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE Handles[NET_DEV_EXCEPTION_TYPE_BUTT];$/;"	m	struct:_NET_DEV_EXCEPTION
HardwareState	NET_DEV_STRUCT.H	/^    BYTE HardwareState;		\/\/通道硬件状态：  0－正常，  1－异常（例如DSP异常）$/;"	m	struct:_NET_DEV_CHANNSTATE
HardwareVer	NET_DEV_STRUCT.H	/^    CHAR HardwareVer[NET_DEV_VERSION_LEN];		\/\/ 硬件版本$/;"	m	struct:_NET_DEV_VERSION
HardwareVer	NET_DEV_STRUCT.H	/^    CHAR HardwareVer[NET_DEV_VERSION_LEN];$/;"	m	struct:_NET_DEV_SADPINFO
HbPeriod	NET_DEV_STRUCT.H	/^    DWORD HbPeriod;$/;"	m	struct:_NET_DEV_WSX_CFG
HbSvrIp	NET_DEV_STRUCT.H	/^    CHAR  HbSvrIp[64];$/;"	m	struct:_NET_DEV_WSX_CFG
HbSvrPort	NET_DEV_STRUCT.H	/^    DWORD HbSvrPort;$/;"	m	struct:_NET_DEV_WSX_CFG
Hdr	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAMEHEADER Hdr;    \/*帧头*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAME
Height	NET_DEV_STRUCT.H	/^    WORD  Height;                       \/*视频高度*\/$/;"	m	struct:_NET_DEV_MEDIA_VFRAMEEXT
HideAlarmCount	NET_DEV_STRUCT.H	/^    BYTE HideAlarmCount;		\/\/ 遮挡报警区域个数$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
Host	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR Host;		\/\/报警主机IP$/;"	m	struct:_NET_DEV_ALARMHOST_CFG
Hour	NET_DEV_STRUCT.H	/^    BYTE Hour;		\/\/时$/;"	m	struct:_NET_DEV_TIME_EX
HttpPort	NET_DEV_STRUCT.H	/^    WORD HttpPort;		\/\/设备HTTP端口$/;"	m	struct:_NET_DEV_SERVICECFG
Hue	NET_DEV_STRUCT.H	/^    DWORD Hue;		\/\/灰度$/;"	m	struct:_NET_DEV_VIDEO_EFFECT
IDN_ENABLED	curl/Makefile	/^IDN_ENABLED = $/;"	m
IMA_CAP	main.c	70;"	d	file:
IMA_RESOLUTION_0	main.c	75;"	d	file:
IMA_RESOLUTION_1	main.c	76;"	d	file:
INITINFO	NET_DEV_STRUCT.H	/^}INITINFO;$/;"	t	typeref:struct:__InitInfo
INSTALL	curl/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	curl/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	curl/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	curl/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	curl/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	curl/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT16	BaseType.h	/^typedef signed short			INT16;$/;"	t
INT32	BaseType.h	/^typedef signed int				INT32;$/;"	t
INT64	BaseType.h	/^typedef __int64           INT64;$/;"	t
INT64	BaseType.h	/^typedef long long		INT64;$/;"	t
INT8	BaseType.h	/^typedef signed char				INT8;$/;"	t
INVALID_SOCKET	BaseType.h	163;"	d
IP	BaseType.h	213;"	d
IPAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IPAddr;		\/\/ 远程设备IP$/;"	m	struct:_NET_DEV_DEC_BIND
IPAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IPAddr;		\/\/IP地址$/;"	m	struct:_NET_DEV_PPPOECFG
IPAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IPAddr;		\/\/设备IP$/;"	m	struct:_NET_DEV_NICCFG
IPPORT	BaseType.h	212;"	d
IPV4_ADDR	main.c	81;"	d	file:
IPV4_DNS1	main.c	84;"	d	file:
IPV4_DNS2	main.c	85;"	d	file:
IPV4_GATEWAY	main.c	83;"	d	file:
IPV4_MAC	main.c	86;"	d	file:
IPV4_NETMASK	main.c	82;"	d	file:
IPV6_ENABLED	curl/Makefile	/^IPV6_ENABLED = 1$/;"	m
Id	NET_DEV_STRUCT.H	/^    DWORD Id;		\/\/ 保留$/;"	m	struct:_NET_DEV_ALARM_DESC
Id	NET_DEV_STRUCT.H	/^    DWORD Id;             \/\/ 目标ID$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Id	NET_DEV_STRUCT.H	/^    DWORD Id;         \/\/事件标识$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
IframeInterval	NET_DEV_STRUCT.H	/^    DWORD IframeInterval;		\/\/I帧间隔 数值型 常用值: 25，50，75，100$/;"	m	struct:_NET_DEV_ENCODEPARAM
Ima	NET_DEV_STRUCT.H	/^    DWORD Ima;		\/\/图像参数能力集NET_DEV_IMA_CAP$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
ImageResolution	NET_DEV_STRUCT.H	/^    DWORD ImageResolution;		\/\/图像分辨率 'NET_DEV_IMAGERESOLUTION'$/;"	m	struct:_NET_DEV_ENCODEPARAM
InProtolCap	NET_DEV_STRUCT.H	/^    DWORD InProtolCap;		\/\/ NVR接入的IPC协议能力 NET_DEV_PROTOL_TYPE$/;"	m	struct:_NET_DEV_CAPABILITIES
Index	NET_DEV_STRUCT.H	/^    BYTE Index;          \/\/目标 触发的规则编号, 值为NET_DEV_PEAOSC_RESULT_RULE.Index, 即参数配置里的第几条规则,未触发规则为0xff$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Index	NET_DEV_STRUCT.H	/^    BYTE Index;       \/\/事件触发的规则编号, 值为NET_DEV_PEAOSC_RESULT_RULE.Index, 即参数配置里的第几条规则$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
Index	NET_DEV_STRUCT.H	/^    BYTE Index;     \/\/ 实际规则号( 0 ~ NET_DEV_MAX_PEAOSC_RULE_NUM - 1)$/;"	m	struct:_NET_DEV_PEAOSC_RESULT_RULE
Index	NET_DEV_STRUCT.H	/^    BYTE Index;   \/\/reserved$/;"	m	struct:_NET_DEV_CPC_RESULT_RULE
Ingress	NET_DEV_STRUCT.H	/^    CHAR Ingress[NET_DEV_HOST_LEN];$/;"	m	struct:_NET_DEV_PF_GETMDS_REQ
Ingress	NET_DEV_STRUCT.H	/^    CHAR Ingress[NET_DEV_HOST_LEN];$/;"	m	struct:_NET_DEV_PF_REGISTER_REQ
InitP2PLock	BaseType.h	197;"	d
InitP2PLock	BaseType.h	203;"	d
InputType	NET_DEV_STRUCT.H	/^    DWORD InputType;		\/\/报警输入类型，1：常开(默认)，0：常闭$/;"	m	struct:_NET_DEV_ALARMIN_ALARM
Interface	NET_DEV_STRUCT.H	/^    BYTE Interface;		\/\/网络接口 1-10MBase-T 2-10MBase-T全双工 3-100MBase-TX 4-100M全双工 5-10M\/100M\/1000M自适应$/;"	m	struct:_NET_DEV_NICCFG
InternalPort	NET_DEV_STRUCT.H	/^    WORD InternalPort;		\/\/映射前的端口$/;"	m	struct:_NET_DEV_UPNP_PORT_STATE
Interval	NET_DEV_STRUCT.H	/^    BYTE Interval;		\/\/抓拍间隔$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
Interval	NET_DEV_STRUCT.H	/^    BYTE Interval;		\/\/抓拍间隔$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
IntfSync	NET_DEV_STRUCT.H	/^    DWORD IntfSync;		\/\/NET_DEV_VO_INTF_SYNC$/;"	m	struct:_NET_DEV_VO_CFG
Ip	NET_DEV_PU_SDK.H	/^    char Ip[NET_HOST_NAME_LEN];   \/* IVS-CMS *\/$/;"	m	struct:_NET_DEV_IVS_CONFIG
Ip	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR Ip;$/;"	m	struct:_NET_DEV_PF_MDSIP
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR IpAddr;		\/\/smtp 服务器地址$/;"	m	struct:_NET_DEV_SMTP_CFG
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR IpAddr;		\/\/服务器地址$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IpAddr;		\/\/IP地址$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IpAddr;		\/\/NAT路由器LAN IP地址$/;"	m	struct:_NET_DEV_UPNP_CFG
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IpAddr;		\/\/操作IP地址$/;"	m	struct:_NET_DEV_LOG_ITEM
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IpAddr;		\/\/服务器IP$/;"	m	struct:_NET_DEV_MEDIA_URL
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IpAddr;		\/\/用户IP  不指定为0$/;"	m	struct:_NET_DEV_LOG_COND
IpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR IpAddr;$/;"	m	struct:_NET_DEV_UPGRADE
IpV4	NET_DEV_STRUCT.H	/^    CHAR IpV4[NET_DEV_IPV4_ADDR_LEN];$/;"	m	struct:_NET_DEV_IPADDR
IpV6	NET_DEV_STRUCT.H	/^    CHAR IpV6[NET_DEV_IPV6_ADDR_LEN];$/;"	m	struct:_NET_DEV_IPADDR
IrisCalState	NET_DEV_STRUCT.H	/^        DWORD IrisCalState;		\/\/NET_DEV_IRIS_CAL_STATE$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
IsBackup	NET_DEV_STRUCT.H	/^    DWORD IsBackup;		\/\/是否备份盘$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
IsFrameRatePreferred	NET_DEV_STRUCT.H	/^    DWORD IsFrameRatePreferred;		\/\/是否帧率优先 1: 是, 0: 不是$/;"	m	struct:_NET_DEV_ENCODEPARAM
IsFullScreen	NET_DEV_STRUCT.H	/^    DWORD IsFullScreen;		\/\/是否全屏$/;"	m	struct:_NET_DEV_DEC_SCREENSTATE
IscsiPort	NET_DEV_STRUCT.H	/^    WORD IscsiPort;		\/\/ iscsi端口，现在为默认$/;"	m	struct:_NET_DEV_NET_SINGLE_DISK
Items	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIVMODE Items[NET_DEV_DEC_MAX_MODE_NUM];$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_RSP
Items	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_ITEM Items[NET_DEV_MAX_LOG_PAGE_SIZE];$/;"	m	struct:_NET_DEV_LOG_QUERY_RSP
Items	NET_DEV_STRUCT.H	/^    NET_DEV_PIC_ITEM Items[NET_DEV_MAX_PIC_PAGE_SIZE];$/;"	m	struct:_NET_DEV_PIC_QUERY_RSP
Items	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_ITEM Items[NET_DEV_MAX_REC_PAGE_SIZE];$/;"	m	struct:_NET_DEV_RECORD_QUERY_RSP
IvsCap	NET_DEV_STRUCT.H	/^    DWORD IvsCap;		\/\/ 智能分析能力 NET_DEV_IVS_CAP$/;"	m	struct:_NET_DEV_CAPABILITIES
JPEG_VIDEO_ENCODER	main.c	/^    JPEG_VIDEO_ENCODER,$/;"	e	enum:__anon45	file:
Joint	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_JOINT Joint;		\/\/ 事件联动$/;"	m	struct:_NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE
KeepAlive	NET_DEV_STRUCT.H	/^    DWORD KeepAlive;$/;"	m	struct:_NET_DEV_PF_KEEPALIVE_RSP
KeepAlive	NET_DEV_STRUCT.H	/^    DWORD KeepAlive;$/;"	m	struct:_NET_DEV_PF_REGISTER_RSP
KeepAliveTime	NET_DEV_STRUCT.H	/^    DWORD KeepAliveTime;		\/\/ 心跳周期 单位 s$/;"	m	struct:_NET_DEV_LOGIN_REQ
KeepOther	NET_DEV_STRUCT.H	/^    DWORD KeepOther;		\/\/是否保持其它分割的运行状态, 0-不保持, 黑屏, 1-保持$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
Key	NET_DEV_STRUCT.H	/^    } Key;$/;"	m	struct:_NET_DEV_WIFICFG	typeref:union:_NET_DEV_WIFICFG::__anon53
KeyInfo	NET_DEV_STRUCT.H	/^    BYTE KeyInfo[NET_DEV_WIFI_KEY_LEN];$/;"	m	struct:_NET_DEV_WIFI_WEP
KeyInfo	NET_DEV_STRUCT.H	/^    BYTE KeyInfo[NET_DEV_WIFI_KEY_LEN];$/;"	m	struct:_NET_DEV_WIFI_WPAEAP
KeyInfo	NET_DEV_STRUCT.H	/^    BYTE KeyInfo[NET_DEV_WIFI_KEY_LEN];$/;"	m	struct:_NET_DEV_WIFI_WPAPSK
KeyType	NET_DEV_STRUCT.H	/^    DWORD KeyType;		\/\/0-16进制；1-ASCII$/;"	m	struct:_NET_DEV_WIFI_WEP
LCOV	curl/Makefile	/^LCOV = $/;"	m
LClose	NET_DEV_PU_SDK.H	/^    void (*LClose) (NET_DEV_MEDIA *Media);$/;"	m	struct:_NET_DEV_SDK_FUNCS
LCtrl	NET_DEV_PU_SDK.H	/^    int  (*LCtrl) (NET_DEV_MEDIA *Media, unsigned Cmd, void *Data);        \/* 控制：Cmd=1 I帧请求 *\/$/;"	m	struct:_NET_DEV_SDK_FUNCS
LD	curl/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	curl/Makefile	/^LDFLAGS = $/;"	m
LIBCURL_COPYRIGHT	curl/curlver.h	29;"	d
LIBCURL_LIBS	curl/Makefile	/^LIBCURL_LIBS = -lssl -lcrypto -lssl -lcrypto -lz$/;"	m
LIBCURL_TIMESTAMP	curl/curlver.h	71;"	d
LIBCURL_VERSION	curl/curlver.h	33;"	d
LIBCURL_VERSION_MAJOR	curl/curlver.h	37;"	d
LIBCURL_VERSION_MINOR	curl/curlver.h	38;"	d
LIBCURL_VERSION_NUM	curl/curlver.h	60;"	d
LIBCURL_VERSION_PATCH	curl/curlver.h	39;"	d
LIBMETALINK_CPPFLAGS	curl/Makefile	/^LIBMETALINK_CPPFLAGS = $/;"	m
LIBMETALINK_LDFLAGS	curl/Makefile	/^LIBMETALINK_LDFLAGS = $/;"	m
LIBMETALINK_LIBS	curl/Makefile	/^LIBMETALINK_LIBS = $/;"	m
LIBOBJS	curl/Makefile	/^LIBOBJS = $/;"	m
LIBS	curl/Makefile	/^LIBS = -lssl -lcrypto -lssl -lcrypto -lz$/;"	m
LIBTOOL	curl/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIPO	curl/Makefile	/^LIPO = $/;"	m
LISTENQ	gsf_net_api.h	26;"	d
LN_S	curl/Makefile	/^LN_S = ln -s$/;"	m
LOG_FILE_NAM	BaseType.h	669;"	d
LOG_FILE_SIZE	BaseType.h	670;"	d
LOG_TAG	BaseType.h	119;"	d
LOpen	NET_DEV_PU_SDK.H	/^    int  (*LOpen) (NET_DEV_MEDIA *Media, int Chnl, int Level);$/;"	m	struct:_NET_DEV_SDK_FUNCS
LPDWORD	NET_DEV_STRUCT.H	/^typedef  unsigned int*      LPDWORD;$/;"	t
LPHI_AUDIO_INFO_S	file.c	/^}HI_AUDIO_INFO_S, *LPHI_AUDIO_INFO_S;$/;"	t	typeref:struct:_HI_AUDIO_INFO_S	file:
LPHI_FRAME_HEAD_S	file.c	/^}HI_FRAME_HEAD_S, *LPHI_FRAME_HEAD_S;$/;"	t	typeref:struct:_HI_FRAME_HEAD_S	file:
LPHI_VIDEO_INFO_S	file.c	/^}HI_VIDEO_INFO_S,*LPHI_VIDEO_INFO_S;$/;"	t	typeref:struct:_HI_VIDEO_INFO_S	file:
LPVOID	NET_DEV_STRUCT.H	/^typedef  void*              LPVOID;$/;"	t
LPlay	NET_DEV_PU_SDK.H	/^    int  (*LPlay) (NET_DEV_MEDIA *Media);                                  \/* 此后可以使用 NET_DEV_SDK_MEDIA_LPUSH()发送实时流 *\/$/;"	m	struct:_NET_DEV_SDK_FUNCS
LProbe	NET_DEV_PU_SDK.H	/^    int  (*LProbe) (int Chnl, int Level, void *MediaParamIn);             \/* 获取媒体参数,可能被多次调用 *\/$/;"	m	struct:_NET_DEV_SDK_FUNCS
LTLIBOBJS	curl/Makefile	/^LTLIBOBJS = $/;"	m
LT_SYS_LIBRARY_PATH	curl/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
Language	NET_DEV_STRUCT.H	/^    BYTE Language;		\/\/ 语言, NET_DEV_LANGUAGE$/;"	m	struct:_NET_DEV_BASECFG
LdcStreng	NET_DEV_STRUCT.H	/^    DWORD LdcStreng;		\/\/畸变校正强度(0-255)：0 不启用    1-255 畸变校正强度值$/;"	m	struct:_NET_DEV_CAMERAPARAM
Left	NET_DEV_STRUCT.H	/^        NET_DEV_LEFT_RULE Left;$/;"	m	union:_NET_DEV_PEAOSC_RULE_PARAM::__anon56
Left	NET_DEV_STRUCT.H	/^    WORD Left;$/;"	m	struct:_NET_DEV_RECT
Level	NET_DEV_STRUCT.H	/^    BYTE Level;		\/\/ Algorithm Sensitivity$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
Level	NET_DEV_STRUCT.H	/^    BYTE Level;		\/\/ 灵敏度0-4 值越大灵敏度越高$/;"	m	struct:_NET_DEV_AVD_RULE
Level	NET_DEV_STRUCT.H	/^    BYTE Level;		\/\/ 目标输出灵敏度级别0~2 高中低，预留定义，目前设置无效果$/;"	m	struct:_NET_DEV_PEAOSC_CFG
Level	NET_DEV_STRUCT.H	/^    BYTE Level;		\/\/警戒级别0 ~3 无警报 低级警报 中级警报 高级警报，预留定义$/;"	m	struct:_NET_DEV_PEAOSC_RULE
Level	NET_DEV_STRUCT.H	/^    BYTE Level;       \/\/事件警报级别$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
Level	NET_DEV_STRUCT.H	/^    DWORD Level;		\/\/码流类型$/;"	m	struct:_NET_DEV_DEC_DIVINFO
Level	NET_DEV_STRUCT.H	/^    DWORD Level;		\/\/码流类型$/;"	m	struct:_NET_DEV_DEC_FULLSCREENINFO
Limit	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_RULE_LIMIT Limit;		\/\/ 规则限制定义$/;"	m	struct:_NET_DEV_PEAOSC_RULE
Line	NET_DEV_STRUCT.H	/^    NET_DEV_LINE Line;$/;"	m	struct:_NET_DEV_TRIPWIRE_RULE
Local	NET_DEV_PU_SDK.H	/^    char Local[NET_PEER_IP_LEN];$/;"	m	struct:_NET_DEV_PEER
LocalDisplayState	NET_DEV_STRUCT.H	/^    DWORD LocalDisplayState;		\/\/本地显示状态：0-正常，1-不正常$/;"	m	struct:_NET_DEV_WORKSTATE
LocalIP	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR LocalIP;		\/\/本地IP地址$/;"	m	struct:_NET_DEV_PPPCFG
LocalIp	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR LocalIp;		\/\/ local IP address$/;"	m	struct:_NET_DEV_PPPDPARAM
LocalMsgPort	NET_DEV_STRUCT.H	/^    WORD LocalMsgPort;		\/\/ 本地消息端口$/;"	m	struct:_NET_DEV_GB28181_CFG
LocalNetmask	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR LocalNetmask;		\/\/本地IP地址掩码$/;"	m	struct:_NET_DEV_PPPCFG
LocalRight	NET_DEV_STRUCT.H	/^    DWORD LocalRight;		\/\/ 本地操作权限掩码 ???$/;"	m	struct:_NET_DEV_USER_MODIFY
LocalRight	NET_DEV_STRUCT.H	/^    DWORD LocalRight;		\/\/本地操作权限掩码 NET_DEV_USER_LOCALRIGHT$/;"	m	struct:_NET_DEV_USER_INFO
LockDuration	NET_DEV_STRUCT.H	/^    WORD LockDuration;		\/\/录像锁定时长，单位小时 0表示不锁定，0xffff表示永久锁定，录像段的时长大于锁定的持续时长的录像，将不会锁定$/;"	m	struct:_NET_DEV_RECORD
LockP2PLock	BaseType.h	198;"	d
LockP2PLock	BaseType.h	204;"	d
LostAlarm	NET_DEV_STRUCT.H	/^    BYTE LostAlarm;		\/\/ 是否支持视频丢失报警$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
MACAddr	NET_DEV_STRUCT.H	/^    CHAR MACAddr[NET_DEV_MAC_ADDR_LEN];		\/\/MAC地址$/;"	m	struct:_NET_DEV_NICCFG
MAGENTA	BaseType.h	138;"	d
MAINT	curl/Makefile	/^MAINT = #$/;"	m
MAKEINFO	curl/Makefile	/^MAKEINFO = ${SHELL} \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/missing makeinfo$/;"	m
MANIFEST_TOOL	curl/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANOPT	curl/Makefile	/^MANOPT = -man$/;"	m
MAX	BaseType.h	210;"	d
MAX_DEVNAME_LEN	BaseType.h	187;"	d
MAX_FILENAME_LEN	BaseType.h	189;"	d
MAX_FRAME_SIZE	main.c	2018;"	d	file:
MAX_ID_LEN	BaseType.h	186;"	d
MAX_IFRMAE_NUM	main.c	140;"	d	file:
MAX_OFFLINE_NUM	BaseType.h	184;"	d
MAX_PLATLIST_NUM	BaseType.h	182;"	d
MAX_POSITIONVALUE_LEN	NET_DEV_STRUCT.H	121;"	d
MAX_PSFRAME_SIZE	main.c	138;"	d	file:
MAX_READBUF_SIZE	main.c	139;"	d	file:
MAX_SERVERNAME_LEN	BaseType.h	188;"	d
MAX_SIZE	main.c	2019;"	d	file:
MEDIA_TYPE_AUDIO	NET_DEV_STRUCT.H	/^    MEDIA_TYPE_AUDIO    = 0x02,$/;"	e	enum:_NET_DEV_MEDIA_TYPE
MEDIA_TYPE_METADATA	NET_DEV_STRUCT.H	/^    MEDIA_TYPE_METADATA = 0x04$/;"	e	enum:_NET_DEV_MEDIA_TYPE
MEDIA_TYPE_VIDEO	NET_DEV_STRUCT.H	/^    MEDIA_TYPE_VIDEO    = 0x01,$/;"	e	enum:_NET_DEV_MEDIA_TYPE
MEMPOOL_MAGIC_NUM	mempool.c	4;"	d	file:
MGRP_SIZE_LV0	mempool.h	22;"	d
MGRP_SIZE_LV1	mempool.h	23;"	d
MGRP_SIZE_LV2	mempool.h	24;"	d
MGRP_SIZE_LV3	mempool.h	25;"	d
MGRP_SIZE_LV4	mempool.h	26;"	d
MGRP_SIZE_LV5	mempool.h	27;"	d
MGRP_SIZE_LV6	mempool.h	28;"	d
MGRP_SIZE_LV7	mempool.h	29;"	d
MGRP_SIZE_LV8	mempool.h	30;"	d
MGRP_SIZE_LV9	mempool.h	31;"	d
MIN	BaseType.h	211;"	d
MKDIR_P	curl/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MPEG_VIDEO_ENCODER	main.c	/^    MPEG_VIDEO_ENCODER,$/;"	e	enum:__anon45	file:
MPOOL_GRP_SIZE	mempool.h	21;"	d
MPOOL_MAX_SIZE	mempool.h	19;"	d
MPOOL_SIZE_LV0	mempool.h	9;"	d
MPOOL_SIZE_LV1	mempool.h	10;"	d
MPOOL_SIZE_LV2	mempool.h	11;"	d
MPOOL_SIZE_LV3	mempool.h	12;"	d
MPOOL_SIZE_LV4	mempool.h	13;"	d
MPOOL_SIZE_LV5	mempool.h	14;"	d
MPOOL_SIZE_LV6	mempool.h	15;"	d
MPOOL_SIZE_LV7	mempool.h	16;"	d
MPOOL_SIZE_LV8	mempool.h	17;"	d
MPOOL_SIZE_LV9	mempool.h	18;"	d
MPOOL_SIZE_LVS	mempool.h	20;"	d
MP_DEFAULT_SIZE	mempool.c	12;"	d	file:
MSG_PORT	main.c	77;"	d	file:
Main	NET_DEV_STRUCT.H	/^    NET_DEV_ENCODEPARAM Main;		\/\/主码流    编码参数$/;"	m	struct:_NET_DEV_ENCODECFG
MainResolution	NET_DEV_STRUCT.H	/^    BYTE MainResolution;		\/\/ (主屏)分辨率 NET_DEV_VOUT_RESOLUTION$/;"	m	struct:_NET_DEV_NVRCFG
MainVideoOut	NET_DEV_STRUCT.H	/^    BYTE MainVideoOut;		\/\/ 输出设备  NET_DEV_VIDEOOUT$/;"	m	struct:_NET_DEV_NVRCFG
MajorType	NET_DEV_STRUCT.H	/^    DWORD MajorType;		\/\/ 掩码 NET_DEV_LOG_MAJOR_TYPE$/;"	m	struct:_NET_DEV_LOG_ITEM
MajorType	NET_DEV_STRUCT.H	/^    DWORD MajorType;		\/\/掩码  NET_DEV_LOG_MAJOR_TYPE$/;"	m	struct:_NET_DEV_LOG_COND
Make_FIFO	fifolib.c	/^Data_FIFO *Make_FIFO(int _iSize,DATA_RELEASE _Release) $/;"	f
Mask	NET_DEV_STRUCT.H	/^    DWORD Mask;                      \/*媒体类型掩码*\/$/;"	m	struct:_NET_DEV_MEDIA_PARAM
Mask	NET_DEV_STRUCT.H	/^  BYTE Mask;          \/\/ 目前使用bit0: 有效帧标识，为0 表示清除所有的规则\/目标$/;"	m	struct:_NET_DEV_MEDIA_IVS_HDR
MaxBitDL	NET_DEV_STRUCT.H	/^    WORD MaxBitDL;		\/\/ the maximum number of kbits\/s in down-link traffic$/;"	m	struct:_NET_DEV_QOSPARAM
MaxBitUL	NET_DEV_STRUCT.H	/^    WORD MaxBitUL;		\/\/ the maximum number of kbits\/s in up-link traffic$/;"	m	struct:_NET_DEV_QOSPARAM
MaxHeight	NET_DEV_STRUCT.H	/^    DWORD MaxHeight;		\/\/最大高度$/;"	m	struct:_NET_DEV_AREA
MaxHeight	NET_DEV_STRUCT.H	/^    DWORD MaxHeight;		\/\/最大高度$/;"	m	struct:_NET_DEV_VENC_OSD
MaxHeight	NET_DEV_STRUCT.H	/^    WORD MaxHeight;		\/\/规则定义参考高度$/;"	m	struct:_NET_DEV_CPC_CFG
MaxHeight	NET_DEV_STRUCT.H	/^    WORD MaxHeight;		\/\/规则定义参考高度$/;"	m	struct:_NET_DEV_PEAOSC_CFG
MaxHeight	NET_DEV_STRUCT.H	/^    WORD MaxHeight;		\/\/最大高度$/;"	m	struct:_NET_DEV_PEAOSC_WH_FILTER
MaxHeight	NET_DEV_STRUCT.H	/^  WORD MaxHeight;     \/\/ 参考高度$/;"	m	struct:_NET_DEV_MEDIA_IVS_HDR
MaxSize	NET_DEV_STRUCT.H	/^    DWORD MaxSize;		\/\/最大尺寸$/;"	m	struct:_NET_DEV_PEAOSC_SIZE_FILTER
MaxSize	NET_DEV_STRUCT.H	/^    WORD MaxSize;		\/\/ Maximum diamater of target heads$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
MaxTime	NET_DEV_STRUCT.H	/^    BYTE MaxTime;		\/\/最大时间$/;"	m	struct:_NET_DEV_PEAOSC_TIME_FILTER
MaxWidth	NET_DEV_STRUCT.H	/^    DWORD MaxWidth;		\/\/最大宽度$/;"	m	struct:_NET_DEV_AREA
MaxWidth	NET_DEV_STRUCT.H	/^    DWORD MaxWidth;		\/\/最大宽度$/;"	m	struct:_NET_DEV_VENC_OSD
MaxWidth	NET_DEV_STRUCT.H	/^    WORD MaxWidth;		\/\/规则定义参考宽度$/;"	m	struct:_NET_DEV_CPC_CFG
MaxWidth	NET_DEV_STRUCT.H	/^    WORD MaxWidth;		\/\/规则定义参考宽度$/;"	m	struct:_NET_DEV_PEAOSC_CFG
MaxWidth	NET_DEV_STRUCT.H	/^    WORD MaxWidth;		\/\/最大宽度$/;"	m	struct:_NET_DEV_PEAOSC_WH_FILTER
MaxWidth	NET_DEV_STRUCT.H	/^  WORD MaxWidth;      \/\/ 参考宽度$/;"	m	struct:_NET_DEV_MEDIA_IVS_HDR
MdsIP	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR MdsIP;		\/\/流媒体IP$/;"	m	struct:_NET_DEV_CMS_CFG
MdsPort	NET_DEV_STRUCT.H	/^    WORD MdsPort;		\/\/流媒体端口$/;"	m	struct:_NET_DEV_CMS_CFG
MediaFrameCall	main.c	/^int MediaFrameCall(void * _pMedia,frame_element_t * pFrame,void *_pContext)$/;"	f
MediaType	NET_DEV_STRUCT.H	/^    DWORD MediaType;		\/\/NET_DEV_MEDIA_URL_TYPE$/;"	m	struct:_NET_DEV_MEDIA_URL
MemAllloc	mempool.c	/^void * MemAllloc(INT32 _iSize)$/;"	f
MemFree	mempool.c	/^INT32  MemFree(void * pData)$/;"	f
MemGroup	mempool.h	/^} MemGroup;$/;"	t	typeref:struct:__anon51
MemGroupDestroy	mempool.c	/^static void MemGroupDestroy(MemGroup *_ptGrp)$/;"	f	file:
MemPackage	mempool.h	/^} MemPackage;$/;"	t	typeref:struct:__anon50
MemPackageAlloc	mempool.c	/^ static MemPackage *MemPackageAlloc(INT32 _iSize)$/;"	f	file:
MemPackageCreate	mempool.c	/^static MemPackage *MemPackageCreate(INT32 _iSize, MemPool *_ptPool)  \/\/数据包创建$/;"	f	file:
MemPackageFree	mempool.c	/^static void MemPackageFree(MemPackage *_ptPkg) $/;"	f	file:
MemPool	mempool.h	/^}MemPool;$/;"	t	typeref:struct:__anon52
MemPoolCreate	mempool.c	/^static MemPool *MemPoolCreate(INT32 _iMaxMemSize)	$/;"	f	file:
MemPoolDestroy	mempool.c	/^void MemPoolDestroy(MemPool *_ptPool)	\/\/数据池销毁$/;"	f
MemSizeToGroup	mempool.c	/^ static int MemSizeToGroup(int _iSize, int *_piNewSize)$/;"	f	file:
Meta	NET_DEV_STRUCT.H	/^        NET_DEV_MEDIA_MFRAMEEXT Meta;   \/*Meta扩展*\/$/;"	m	union:_NET_DEV_MEDIA_FRAMEHEADER::__anon60
Meta	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_METAPARAM  Meta;   \/*Meta媒体信息*\/$/;"	m	struct:_NET_DEV_MEDIA_PARAM
MilliSec	NET_DEV_STRUCT.H	/^    DWORD MilliSec;		\/\/毫秒$/;"	m	struct:_NET_DEV_TIME_EX
MinHeight	NET_DEV_STRUCT.H	/^    WORD MinHeight;		\/\/最小高度$/;"	m	struct:_NET_DEV_PEAOSC_WH_FILTER
MinSize	NET_DEV_STRUCT.H	/^    DWORD MinSize;		\/\/最小尺寸$/;"	m	struct:_NET_DEV_PEAOSC_SIZE_FILTER
MinSize	NET_DEV_STRUCT.H	/^    WORD MinSize;		\/\/ Minimum diamater of target heads$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
MinTime	NET_DEV_STRUCT.H	/^    BYTE MinTime;		\/\/最小时间$/;"	m	struct:_NET_DEV_PEAOSC_TIME_FILTER
MinWidth	NET_DEV_STRUCT.H	/^    WORD MinWidth;		\/\/最小宽度$/;"	m	struct:_NET_DEV_PEAOSC_WH_FILTER
MinorType	NET_DEV_STRUCT.H	/^    DWORD MinorType;		\/\/ MINOR_TYPE$/;"	m	struct:_NET_DEV_LOG_ITEM
Minute	NET_DEV_STRUCT.H	/^    BYTE Minute;		\/\/分$/;"	m	struct:_NET_DEV_TIME_EX
Mirror	NET_DEV_STRUCT.H	/^    DWORD Mirror;		\/\/镜像(图像左右调换) 1 镜像 0 不镜像$/;"	m	struct:_NET_DEV_CAMERAPARAM
MixEncChn	NET_DEV_STRUCT.H	/^    BYTE MixEncChn;		\/\/ 混合编码通道使能$/;"	m	struct:_NET_DEV_CAPABILITIES
Mode	NET_DEV_STRUCT.H	/^    DWORD Mode;		\/\/周界模式 0 入侵 1 进入 2 离开$/;"	m	struct:_NET_DEV_PERIMETER_RULE
Month	NET_DEV_STRUCT.H	/^    BYTE Month;		\/\/月$/;"	m	struct:_NET_DEV_TIME_EX
MotionAlarmCount	NET_DEV_STRUCT.H	/^    BYTE MotionAlarmCount;		\/\/ 移动侦测报警个数$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
MountParam	NET_DEV_STRUCT.H	/^    NET_DEV_NAS_MOUNT_PARAM MountParam;		\/\/ NAS挂载方式 (byNetDiskType为NFS(NAS)时生效)$/;"	m	struct:_NET_DEV_NET_SINGLE_DISK
MountType	NET_DEV_STRUCT.H	/^    BYTE MountType;		\/\/0～保留,1~NFS, 2~ SMB\/CIFS$/;"	m	struct:_NET_DEV_NAS_MOUNT_PARAM
MoveDirection	NET_DEV_STRUCT.H	/^    WORD MoveDirection;  \/\/ 移动方向（0~359度）-1 未知$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
MoveSpeed	NET_DEV_STRUCT.H	/^    WORD MoveSpeed;      \/\/ 移动速率（coord \/s）-1 未知$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
MsgPort	NET_DEV_STRUCT.H	/^    WORD MsgPort;		\/\/设备信令端口$/;"	m	struct:_NET_DEV_SERVICECFG
Mtu	NET_DEV_STRUCT.H	/^    BYTE Mtu;		\/\/MTU大小默认 1500$/;"	m	struct:_NET_DEV_NICCFG
Mtu	NET_DEV_STRUCT.H	/^    DWORD Mtu;		\/\/MTU$/;"	m	struct:_NET_DEV_PPPCFG
Mtu	NET_DEV_STRUCT.H	/^    WORD Mtu;		\/\/ max transfer unit of ppp interface$/;"	m	struct:_NET_DEV_PPPDPARAM
NAN	cJSON.c	81;"	d	file:
NET_DEV_AENC_AAC	NET_DEV_STRUCT.H	/^    NET_DEV_AENC_AAC   = 0x03,$/;"	e	enum:_NET_DEV_AENC_TYPE
NET_DEV_AENC_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_AENC_BUTT$/;"	e	enum:_NET_DEV_AENC_TYPE
NET_DEV_AENC_G711A	NET_DEV_STRUCT.H	/^    NET_DEV_AENC_G711A = 0x00,$/;"	e	enum:_NET_DEV_AENC_TYPE
NET_DEV_AENC_G711U	NET_DEV_STRUCT.H	/^    NET_DEV_AENC_G711U = 0x01,$/;"	e	enum:_NET_DEV_AENC_TYPE
NET_DEV_AENC_G726	NET_DEV_STRUCT.H	/^    NET_DEV_AENC_G726  = 0x02,$/;"	e	enum:_NET_DEV_AENC_TYPE
NET_DEV_AENC_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_AENC_TYPE;$/;"	t	typeref:enum:_NET_DEV_AENC_TYPE
NET_DEV_AIM_LINE	NET_DEV_STRUCT.H	/^    NET_DEV_AIM_LINE$/;"	e	enum:_NET_DEV_AUDIOINPUTMODE
NET_DEV_AIM_MIC	NET_DEV_STRUCT.H	/^    NET_DEV_AIM_MIC = 0,$/;"	e	enum:_NET_DEV_AUDIOINPUTMODE
NET_DEV_ALARMHOST_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARMHOST_CFG NET_DEV_ALARMHOST_CFG;$/;"	t	typeref:struct:_NET_DEV_ALARMHOST_CFG
NET_DEV_ALARMIN_ALARM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARMIN_ALARM NET_DEV_ALARMIN_ALARM;$/;"	t	typeref:struct:_NET_DEV_ALARMIN_ALARM
NET_DEV_ALARMOUTCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARMOUTCFG NET_DEV_ALARMOUTCFG;$/;"	t	typeref:struct:_NET_DEV_ALARMOUTCFG
NET_DEV_ALARMSUBSCRIBE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARMSUBSCRIBE NET_DEV_ALARMSUBSCRIBE;$/;"	t	typeref:struct:_NET_DEV_ALARMSUBSCRIBE
NET_DEV_ALARM_DATA_SIZE	NET_DEV_STRUCT.H	139;"	d
NET_DEV_ALARM_DESC	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARM_DESC NET_DEV_ALARM_DESC;$/;"	t	typeref:struct:_NET_DEV_ALARM_DESC
NET_DEV_ALARM_DESC_LEN	NET_DEV_STRUCT.H	147;"	d
NET_DEV_ALARM_HANDLE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARM_HANDLE NET_DEV_ALARM_HANDLE;$/;"	t	typeref:struct:_NET_DEV_ALARM_HANDLE
NET_DEV_ALARM_HANDLE_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_ALARM_HANDLE_TYPE;$/;"	t	typeref:enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_ALARMHOST	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_ALARMHOST  = 3,   \/\/发送到报警主机$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_ALARMOUT	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_ALARMOUT   = 2,   \/\/联动输出$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_BEEP	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_BEEP       = 0,   \/\/声音警告$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_EMAIL	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_EMAIL      = 6,   \/\/联动Email$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_PTZ	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_PTZ        = 5,   \/\/联动ptz$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_RECORD	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_RECORD     = 1,   \/\/联动录像$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_HANDLE_TYPE_SNAPPIC	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE_TYPE_SNAPPIC    = 4,   \/\/联动抓拍$/;"	e	enum:_NET_DEV_ALARM_HANDLE_TYPE
NET_DEV_ALARM_ITEM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARM_ITEM NET_DEV_ALARM_ITEM;$/;"	t	typeref:struct:_NET_DEV_ALARM_ITEM
NET_DEV_ALARM_JOINT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARM_JOINT NET_DEV_ALARM_JOINT;$/;"	t	typeref:struct:_NET_DEV_ALARM_JOINT
NET_DEV_ALARM_MAJOR_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_MAJOR_ALARM     = 0,    \/\/告警 AlarmSubType = NET_DEV_ALARM_TYPE$/;"	e	enum:_NET_DEV_ALARM_MAJOR_TYPE
NET_DEV_ALARM_MAJOR_EXCEPTION	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_MAJOR_EXCEPTION,        \/\/异常 AlarmSubType = NET_DEV_EXCEPTION_TYPE$/;"	e	enum:_NET_DEV_ALARM_MAJOR_TYPE
NET_DEV_ALARM_MAJOR_EXT	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_MAJOR_EXT,              \/\/扩展 AlarmSubType = NET_DEV_EXT_TYPE$/;"	e	enum:_NET_DEV_ALARM_MAJOR_TYPE
NET_DEV_ALARM_MAJOR_STATE	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_MAJOR_STATE,            \/\/状态 AlarmSubType = NET_DEV_STATE_IDX$/;"	e	enum:_NET_DEV_ALARM_MAJOR_TYPE
NET_DEV_ALARM_MAJOR_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_ALARM_MAJOR_TYPE;$/;"	t	typeref:enum:_NET_DEV_ALARM_MAJOR_TYPE
NET_DEV_ALARM_NAME_LEN	NET_DEV_STRUCT.H	120;"	d
NET_DEV_ALARM_PTZ_ACTION	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARM_PTZ_ACTION NET_DEV_ALARM_PTZ_ACTION;$/;"	t	typeref:struct:_NET_DEV_ALARM_PTZ_ACTION
NET_DEV_ALARM_SRC	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ALARM_SRC NET_DEV_ALARM_SRC;$/;"	t	typeref:struct:_NET_DEV_ALARM_SRC
NET_DEV_ALARM_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_ALARM_TYPE;$/;"	t	typeref:enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_AVD	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_AVD    = 5,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_BUTT$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_HIDE	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_HIDE   = 2,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_IO	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_IO     = 3,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_LOST	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_LOST   = 1,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_MOTION	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_MOTION = 0,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_PEA_OSC	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_PEA_OSC= 6,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_ALARM_TYPE_PIR	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_TYPE_PIR    = 4,$/;"	e	enum:_NET_DEV_ALARM_TYPE
NET_DEV_API	NET_DEV_STRUCT.H	16;"	d
NET_DEV_API	NET_DEV_STRUCT.H	18;"	d
NET_DEV_API	NET_DEV_STRUCT.H	45;"	d
NET_DEV_AREA	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_AREA NET_DEV_AREA;$/;"	t	typeref:struct:_NET_DEV_AREA
NET_DEV_AUDIOINPUTMODE	NET_DEV_STRUCT.H	/^}NET_DEV_AUDIOINPUTMODE;$/;"	t	typeref:enum:_NET_DEV_AUDIOINPUTMODE
NET_DEV_AUTHORIZECODE_LEN	NET_DEV_STRUCT.H	90;"	d
NET_DEV_AVD_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_AVD_CFG NET_DEV_AVD_CFG;$/;"	t	typeref:struct:_NET_DEV_AVD_CFG
NET_DEV_AVD_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_AVD_RULE NET_DEV_AVD_RULE;$/;"	t	typeref:struct:_NET_DEV_AVD_RULE
NET_DEV_AVD_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_AVD_TYPE;$/;"	t	typeref:enum:_NET_DEV_AVD_TYPE
NET_DEV_AVD_TYPE_BRIGHT	NET_DEV_STRUCT.H	/^  NET_DEV_AVD_TYPE_BRIGHT   = 0,    \/\/ 亮度异常检测$/;"	e	enum:_NET_DEV_AVD_TYPE
NET_DEV_AVD_TYPE_CLARITY	NET_DEV_STRUCT.H	/^  NET_DEV_AVD_TYPE_CLARITY  = 1,    \/\/ 清晰度异常检测$/;"	e	enum:_NET_DEV_AVD_TYPE
NET_DEV_AVD_TYPE_COLOR	NET_DEV_STRUCT.H	/^  NET_DEV_AVD_TYPE_COLOR    = 3,    \/\/ 偏色检测$/;"	e	enum:_NET_DEV_AVD_TYPE
NET_DEV_AVD_TYPE_NOISE	NET_DEV_STRUCT.H	/^  NET_DEV_AVD_TYPE_NOISE    = 2,    \/\/ 噪声异常检测$/;"	e	enum:_NET_DEV_AVD_TYPE
NET_DEV_AVD_TYPE_SCENE	NET_DEV_STRUCT.H	/^  NET_DEV_AVD_TYPE_SCENE    = 4     \/\/ 场景变换检测$/;"	e	enum:_NET_DEV_AVD_TYPE
NET_DEV_BASECFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_BASECFG NET_DEV_BASECFG;$/;"	t	typeref:struct:_NET_DEV_BASECFG
NET_DEV_BOOTGUIDE	NET_DEV_STRUCT.H	/^}NET_DEV_BOOTGUIDE;$/;"	t	typeref:enum:_NET_DEV_BOOTGUIDE
NET_DEV_BOOTGUIDE_NO	NET_DEV_STRUCT.H	/^    NET_DEV_BOOTGUIDE_NO  = 0,$/;"	e	enum:_NET_DEV_BOOTGUIDE
NET_DEV_BOOTGUIDE_YES	NET_DEV_STRUCT.H	/^    NET_DEV_BOOTGUIDE_YES = 1$/;"	e	enum:_NET_DEV_BOOTGUIDE
NET_DEV_BT_ABR	NET_DEV_STRUCT.H	/^    NET_DEV_BT_ABR = 0,$/;"	e	enum:_NET_DEV_VENC_BITRATE_TYPE
NET_DEV_BT_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_BT_BUTT$/;"	e	enum:_NET_DEV_VENC_BITRATE_TYPE
NET_DEV_BT_CBR	NET_DEV_STRUCT.H	/^    NET_DEV_BT_CBR,$/;"	e	enum:_NET_DEV_VENC_BITRATE_TYPE
NET_DEV_BT_FIXQP	NET_DEV_STRUCT.H	/^    NET_DEV_BT_FIXQP,$/;"	e	enum:_NET_DEV_VENC_BITRATE_TYPE
NET_DEV_BT_VBR	NET_DEV_STRUCT.H	/^    NET_DEV_BT_VBR,$/;"	e	enum:_NET_DEV_VENC_BITRATE_TYPE
NET_DEV_CALL	NET_DEV_STRUCT.H	20;"	d
NET_DEV_CALL	NET_DEV_STRUCT.H	46;"	d
NET_DEV_CAMERACFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CAMERACFG NET_DEV_CAMERACFG;$/;"	t	typeref:struct:_NET_DEV_CAMERACFG
NET_DEV_CAMERAPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CAMERAPARAM NET_DEV_CAMERAPARAM;$/;"	t	typeref:struct:_NET_DEV_CAMERAPARAM
NET_DEV_CAPABILITIES	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CAPABILITIES NET_DEV_CAPABILITIES;$/;"	t	typeref:struct:_NET_DEV_CAPABILITIES
NET_DEV_CHANNEL_LOCAL	NET_DEV_STRUCT.H	/^    NET_DEV_CHANNEL_LOCAL,             \/\/通道类型: 本地$/;"	e	enum:_NET_DEV_CHANNEL_TYPE
NET_DEV_CHANNEL_NET	NET_DEV_STRUCT.H	/^    NET_DEV_CHANNEL_NET                \/\/通道类型: 网络$/;"	e	enum:_NET_DEV_CHANNEL_TYPE
NET_DEV_CHANNEL_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_CHANNEL_TYPE;$/;"	t	typeref:enum:_NET_DEV_CHANNEL_TYPE
NET_DEV_CHANNSTATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CHANNSTATE NET_DEV_CHANNSTATE;$/;"	t	typeref:struct:_NET_DEV_CHANNSTATE
NET_DEV_CHANNSTATES	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CHANNSTATES NET_DEV_CHANNSTATES;$/;"	t	typeref:struct:_NET_DEV_CHANNSTATES
NET_DEV_CHANN_NAME_LEN	NET_DEV_STRUCT.H	105;"	d
NET_DEV_CH_CAPABILITIES	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CH_CAPABILITIES NET_DEV_CH_CAPABILITIES;$/;"	t	typeref:struct:_NET_DEV_CH_CAPABILITIES
NET_DEV_CLOSE_IO	NET_DEV_STRUCT.H	/^    NET_DEV_CLOSE_IO                = 0X08,        \/\/关闭IO$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_CMS_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CMS_CFG NET_DEV_CMS_CFG;$/;"	t	typeref:struct:_NET_DEV_CMS_CFG
NET_DEV_CONTROL	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CONTROL NET_DEV_CONTROL;$/;"	t	typeref:struct:_NET_DEV_CONTROL
NET_DEV_CONTROL_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_CONTROL_TYPE;$/;"	t	typeref:enum:_NET_DEV_CONTROL_TYPE
NET_DEV_CPC_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CPC_CFG NET_DEV_CPC_CFG;$/;"	t	typeref:struct:_NET_DEV_CPC_CFG
NET_DEV_CPC_CROSS_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_CPC_CROSS_TYPE;$/;"	t	typeref:enum:_NET_DEV_CPC_CROSS_TYPE
NET_DEV_CPC_CROSS_TYPE_ENTER	NET_DEV_STRUCT.H	/^  NET_DEV_CPC_CROSS_TYPE_ENTER = 0,   \/\/ 进入$/;"	e	enum:_NET_DEV_CPC_CROSS_TYPE
NET_DEV_CPC_CROSS_TYPE_LEAVE	NET_DEV_STRUCT.H	/^  NET_DEV_CPC_CROSS_TYPE_LEAVE = 1    \/\/ 离开$/;"	e	enum:_NET_DEV_CPC_CROSS_TYPE
NET_DEV_CPC_EVENT	NET_DEV_STRUCT.H	/^}NET_DEV_CPC_EVENT;$/;"	t	typeref:struct:_NET_DEV_CPC_EVENT
NET_DEV_CPC_RESULT_RULE	NET_DEV_STRUCT.H	/^}NET_DEV_CPC_RESULT_RULE;$/;"	t	typeref:struct:_NET_DEV_CPC_RESULT_RULE
NET_DEV_CPC_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CPC_RULE NET_DEV_CPC_RULE;$/;"	t	typeref:struct:_NET_DEV_CPC_RULE
NET_DEV_CPC_RULE_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CPC_RULE_CFG NET_DEV_CPC_RULE_CFG;$/;"	t	typeref:struct:_NET_DEV_CPC_RULE_CFG
NET_DEV_CPC_TARGET	NET_DEV_STRUCT.H	/^}NET_DEV_CPC_TARGET;$/;"	t	typeref:struct:_NET_DEV_CPC_TARGET
NET_DEV_CROSS_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_CROSS_TYPE;$/;"	t	typeref:enum:_NET_DEV_CROSS_TYPE
NET_DEV_CROSS_TYPE_BOTH	NET_DEV_STRUCT.H	/^  NET_DEV_CROSS_TYPE_BOTH = 0,    \/\/双向$/;"	e	enum:_NET_DEV_CROSS_TYPE
NET_DEV_CROSS_TYPE_L2R	NET_DEV_STRUCT.H	/^  NET_DEV_CROSS_TYPE_L2R  = 1,    \/\/垂直线为从左到右，水平线为从上到下$/;"	e	enum:_NET_DEV_CROSS_TYPE
NET_DEV_CROSS_TYPE_R2L	NET_DEV_STRUCT.H	/^  NET_DEV_CROSS_TYPE_R2L  = 2     \/\/垂直线为从右到左, 水平线为从下到上$/;"	e	enum:_NET_DEV_CROSS_TYPE
NET_DEV_DATACHN	NET_DEV_PU_SDK.H	/^typedef struct _NET_DEV_DATACHN NET_DEV_DATACHN;$/;"	t	typeref:struct:_NET_DEV_DATACHN
NET_DEV_DATE_LEN	NET_DEV_STRUCT.H	88;"	d
NET_DEV_DAY	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DAY NET_DEV_DAY;$/;"	t	typeref:struct:_NET_DEV_DAY
NET_DEV_DAYNIGHT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DAYNIGHT NET_DEV_DAYNIGHT;$/;"	t	typeref:struct:_NET_DEV_DAYNIGHT
NET_DEV_DDNS_3322	NET_DEV_STRUCT.H	/^    NET_DEV_DDNS_3322 = 1,$/;"	e	enum:_NET_DEV_DDNS_TYPE
NET_DEV_DDNS_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DDNS_CFG NET_DEV_DDNS_CFG;$/;"	t	typeref:struct:_NET_DEV_DDNS_CFG
NET_DEV_DDNS_DYNDNS	NET_DEV_STRUCT.H	/^    NET_DEV_DDNS_DYNDNS,$/;"	e	enum:_NET_DEV_DDNS_TYPE
NET_DEV_DDNS_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_DDNS_TYPE;$/;"	t	typeref:enum:_NET_DEV_DDNS_TYPE
NET_DEV_DEC_ACTION	NET_DEV_STRUCT.H	/^}NET_DEV_DEC_ACTION;$/;"	t	typeref:enum:_NET_DEV_DEC_ACTION
NET_DEV_DEC_BIND	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_BIND NET_DEV_DEC_BIND;$/;"	t	typeref:struct:_NET_DEV_DEC_BIND
NET_DEV_DEC_BIND_AUDIO	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_BIND_AUDIO  = 0x02,   \/\/ 音频$/;"	e	enum:_NET_DEV_DEC_BIND_TYPE
NET_DEV_DEC_BIND_COM	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_BIND_COM    = 0x01,   \/\/ 串口$/;"	e	enum:_NET_DEV_DEC_BIND_TYPE
NET_DEV_DEC_BIND_Q	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_BIND_Q NET_DEV_DEC_BIND_Q;$/;"	t	typeref:struct:_NET_DEV_DEC_BIND_Q
NET_DEV_DEC_BIND_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_DEC_BIND_TYPE;$/;"	t	typeref:enum:_NET_DEV_DEC_BIND_TYPE
NET_DEV_DEC_DESCRIBE_LEN	NET_DEV_STRUCT.H	3081;"	d
NET_DEV_DEC_DIV	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_DIV NET_DEV_DEC_DIV;$/;"	t	typeref:struct:_NET_DEV_DEC_DIV
NET_DEV_DEC_DIV1	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV1  = 0x01,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV16	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV16 = 0x05,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV25	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV25 = 0x06,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV36	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV36 = 0x07,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV4	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV4  = 0x02,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV6	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV6  = 0x03,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV64	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV64 = 0x08$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIV9	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_DIV9  = 0x04,$/;"	e	enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIVID	NET_DEV_STRUCT.H	/^}NET_DEV_DEC_DIVID;$/;"	t	typeref:enum:_NET_DEV_DEC_DIVID
NET_DEV_DEC_DIVINFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_DIVINFO NET_DEV_DEC_DIVINFO;$/;"	t	typeref:struct:_NET_DEV_DEC_DIVINFO
NET_DEV_DEC_DIVMODE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_DIVMODE NET_DEV_DEC_DIVMODE;$/;"	t	typeref:struct:_NET_DEV_DEC_DIVMODE
NET_DEV_DEC_DIVMODE_QUERY_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_DIVMODE_QUERY_REQ NET_DEV_DEC_DIVMODE_QUERY_REQ;$/;"	t	typeref:struct:_NET_DEV_DEC_DIVMODE_QUERY_REQ
NET_DEV_DEC_DIVMODE_QUERY_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_DIVMODE_QUERY_RSP NET_DEV_DEC_DIVMODE_QUERY_RSP;$/;"	t	typeref:struct:_NET_DEV_DEC_DIVMODE_QUERY_RSP
NET_DEV_DEC_FULLSCREENINFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_FULLSCREENINFO NET_DEV_DEC_FULLSCREENINFO;$/;"	t	typeref:struct:_NET_DEV_DEC_FULLSCREENINFO
NET_DEV_DEC_GROUP	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_GROUP = 0x03$/;"	e	enum:_NET_DEV_DEC_ACTION
NET_DEV_DEC_MAX_DIV_NUM	NET_DEV_STRUCT.H	3080;"	d
NET_DEV_DEC_MAX_MODE_NUM	NET_DEV_STRUCT.H	3079;"	d
NET_DEV_DEC_NAME_LEN	NET_DEV_STRUCT.H	3082;"	d
NET_DEV_DEC_SCREEN	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_SCREEN NET_DEV_DEC_SCREEN;$/;"	t	typeref:struct:_NET_DEV_DEC_SCREEN
NET_DEV_DEC_SCREENSTATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_SCREENSTATE NET_DEV_DEC_SCREENSTATE;$/;"	t	typeref:struct:_NET_DEV_DEC_SCREENSTATE
NET_DEV_DEC_STEP	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_STEP  = 0x01,$/;"	e	enum:_NET_DEV_DEC_ACTION
NET_DEV_DEC_TOUR	NET_DEV_STRUCT.H	/^    NET_DEV_DEC_TOUR  = 0x02,$/;"	e	enum:_NET_DEV_DEC_ACTION
NET_DEV_DEC_TVWPLAY	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DEC_TVWPLAY NET_DEV_DEC_TVWPLAY;$/;"	t	typeref:struct:_NET_DEV_DEC_TVWPLAY
NET_DEV_DETECT_DEAL_PIX	NET_DEV_STRUCT.H	/^    NET_DEV_DETECT_DEAL_PIX         = 0x04,        \/\/坏点检测$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_DETECT_IRIS	NET_DEV_STRUCT.H	/^    NET_DEV_DETECT_IRIS             = 0x05,        \/\/光圈校正$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_DEVICE_NAME_LEN	NET_DEV_STRUCT.H	86;"	d
NET_DEV_DIALPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DIALPARAM NET_DEV_DIALPARAM;$/;"	t	typeref:struct:_NET_DEV_DIALPARAM
NET_DEV_DISKSTATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DISKSTATE NET_DEV_DISKSTATE;$/;"	t	typeref:struct:_NET_DEV_DISKSTATE
NET_DEV_DISKSTATES	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DISKSTATES NET_DEV_DISKSTATES;$/;"	t	typeref:struct:_NET_DEV_DISKSTATES
NET_DEV_DISK_FORMATTING	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_FORMATTING     \/* 正在格式化 *\/$/;"	e	enum:_NET_DEV_DISK_STATE
NET_DEV_DISK_ISCSI	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_ISCSI,$/;"	e	enum:_NET_DEV_DISK_TYPE
NET_DEV_DISK_MOUNTED	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_MOUNTED,       \/* 已挂载     *\/$/;"	e	enum:_NET_DEV_DISK_STATE
NET_DEV_DISK_NFS	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_NFS,$/;"	e	enum:_NET_DEV_DISK_TYPE
NET_DEV_DISK_SATA	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_SATA=0,$/;"	e	enum:_NET_DEV_DISK_TYPE
NET_DEV_DISK_SD	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_SD$/;"	e	enum:_NET_DEV_DISK_TYPE
NET_DEV_DISK_STATE	NET_DEV_STRUCT.H	/^}NET_DEV_DISK_STATE;$/;"	t	typeref:enum:_NET_DEV_DISK_STATE
NET_DEV_DISK_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_DISK_TYPE;$/;"	t	typeref:enum:_NET_DEV_DISK_TYPE
NET_DEV_DISK_UNMOUNT	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_UNMOUNT,       \/* 未挂载     *\/$/;"	e	enum:_NET_DEV_DISK_STATE
NET_DEV_DISK_USB	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_USB,$/;"	e	enum:_NET_DEV_DISK_TYPE
NET_DEV_DISK_USING	NET_DEV_STRUCT.H	/^    NET_DEV_DISK_USING = 0,     \/* 正在使用   *\/$/;"	e	enum:_NET_DEV_DISK_STATE
NET_DEV_DOMAINADDR	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_DOMAINADDR NET_DEV_DOMAINADDR;$/;"	t	typeref:struct:_NET_DEV_DOMAINADDR
NET_DEV_EL_BASELINE	NET_DEV_STRUCT.H	/^    NET_DEV_EL_BASELINE = 0,$/;"	e	enum:_NET_DEV_ENCODELEVEL
NET_DEV_EL_HIGH	NET_DEV_STRUCT.H	/^    NET_DEV_EL_HIGH$/;"	e	enum:_NET_DEV_ENCODELEVEL
NET_DEV_EL_MAIN	NET_DEV_STRUCT.H	/^    NET_DEV_EL_MAIN,$/;"	e	enum:_NET_DEV_ENCODELEVEL
NET_DEV_EMAIL_ADDR_LEN	NET_DEV_STRUCT.H	131;"	d
NET_DEV_ENCODECFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ENCODECFG NET_DEV_ENCODECFG;$/;"	t	typeref:struct:_NET_DEV_ENCODECFG
NET_DEV_ENCODELEVEL	NET_DEV_STRUCT.H	/^}NET_DEV_ENCODELEVEL;$/;"	t	typeref:enum:_NET_DEV_ENCODELEVEL
NET_DEV_ENCODEPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ENCODEPARAM NET_DEV_ENCODEPARAM;$/;"	t	typeref:struct:_NET_DEV_ENCODEPARAM
NET_DEV_ERROR_ALARMPORT	NET_DEV_STRUCT.H	168;"	d
NET_DEV_ERROR_BUSY	NET_DEV_STRUCT.H	159;"	d
NET_DEV_ERROR_CHAN_EXCEPTION	NET_DEV_STRUCT.H	171;"	d
NET_DEV_ERROR_CHAN_NO	NET_DEV_STRUCT.H	169;"	d
NET_DEV_ERROR_CHAN_NOTSUPPORT	NET_DEV_STRUCT.H	172;"	d
NET_DEV_ERROR_DISK_ERROR	NET_DEV_STRUCT.H	176;"	d
NET_DEV_ERROR_DISK_FORMATING	NET_DEV_STRUCT.H	177;"	d
NET_DEV_ERROR_DISK_NO	NET_DEV_STRUCT.H	174;"	d
NET_DEV_ERROR_DISK_SLEEP	NET_DEV_STRUCT.H	175;"	d
NET_DEV_ERROR_FAILED	NET_DEV_STRUCT.H	153;"	d
NET_DEV_ERROR_MAX_USERNUM	NET_DEV_STRUCT.H	163;"	d
NET_DEV_ERROR_NOENOUGHPRI	NET_DEV_STRUCT.H	164;"	d
NET_DEV_ERROR_NOINIT	NET_DEV_STRUCT.H	156;"	d
NET_DEV_ERROR_NORESOURCE	NET_DEV_STRUCT.H	160;"	d
NET_DEV_ERROR_NOSUPPORT	NET_DEV_STRUCT.H	158;"	d
NET_DEV_ERROR_OVER_MAXLINK	NET_DEV_STRUCT.H	157;"	d
NET_DEV_ERROR_PASSWORD	NET_DEV_STRUCT.H	162;"	d
NET_DEV_ERROR_SERIALPORT	NET_DEV_STRUCT.H	167;"	d
NET_DEV_ERROR_SUCCESS	NET_DEV_STRUCT.H	151;"	d
NET_DEV_ERROR_TIMEOUT	NET_DEV_STRUCT.H	152;"	d
NET_DEV_ERROR_VERSIONNOMATCH	NET_DEV_STRUCT.H	155;"	d
NET_DEV_ERROR_VOICEOPENED	NET_DEV_STRUCT.H	166;"	d
NET_DEV_ETHCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ETHCFG NET_DEV_ETHCFG;$/;"	t	typeref:struct:_NET_DEV_ETHCFG
NET_DEV_ETHCFG_HTON	sadp_pu_api.h	44;"	d
NET_DEV_ETHCFG_NTOH	sadp_pu_api.h	48;"	d
NET_DEV_ETH_NAME_LEN	NET_DEV_STRUCT.H	96;"	d
NET_DEV_EVERYDAY	NET_DEV_STRUCT.H	/^    NET_DEV_EVERYDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_EXCEPTION	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_EXCEPTION NET_DEV_EXCEPTION;$/;"	t	typeref:struct:_NET_DEV_EXCEPTION
NET_DEV_EXCEPTION_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_EXCEPTION_TYPE;$/;"	t	typeref:enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXCEPTION_TYPE_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_EXCEPTION_TYPE_BUTT$/;"	e	enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXCEPTION_TYPE_HDD_ERR	NET_DEV_STRUCT.H	/^    NET_DEV_EXCEPTION_TYPE_HDD_ERR    = 2,$/;"	e	enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXCEPTION_TYPE_HDD_FULL	NET_DEV_STRUCT.H	/^    NET_DEV_EXCEPTION_TYPE_HDD_FULL   = 1,$/;"	e	enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXCEPTION_TYPE_HDD_NO	NET_DEV_STRUCT.H	/^    NET_DEV_EXCEPTION_TYPE_HDD_NO     = 0,$/;"	e	enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXCEPTION_TYPE_IP_CONFLICT	NET_DEV_STRUCT.H	/^    NET_DEV_EXCEPTION_TYPE_IP_CONFLICT= 4,$/;"	e	enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXCEPTION_TYPE_NET_BROKEN	NET_DEV_STRUCT.H	/^    NET_DEV_EXCEPTION_TYPE_NET_BROKEN = 3,$/;"	e	enum:_NET_DEV_EXCEPTION_TYPE
NET_DEV_EXT_POSITION	NET_DEV_STRUCT.H	/^    NET_DEV_EXT_POSITION   = 0,    \/\/设备位置信息$/;"	e	enum:_NET_DEV_EXT_TYPE
NET_DEV_EXT_POSITIONINFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_EXT_POSITIONINFO NET_DEV_EXT_POSITIONINFO;$/;"	t	typeref:struct:_NET_DEV_EXT_POSITIONINFO
NET_DEV_EXT_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_EXT_TYPE;$/;"	t	typeref:enum:_NET_DEV_EXT_TYPE
NET_DEV_FILESYSTEM_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_FILESYSTEM_TYPE;$/;"	t	typeref:enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FORCE_IFRAME	NET_DEV_STRUCT.H	/^    NET_DEV_FORCE_IFRAME            = 0x06,        \/\/强制I帧$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_FORMATDISK_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_FORMATDISK_REQ NET_DEV_FORMATDISK_REQ;$/;"	t	typeref:struct:_NET_DEV_FORMATDISK_REQ
NET_DEV_FORMATDISK_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_FORMATDISK_RSP NET_DEV_FORMATDISK_RSP;$/;"	t	typeref:struct:_NET_DEV_FORMATDISK_RSP
NET_DEV_FRIDAY	NET_DEV_STRUCT.H	/^    NET_DEV_FRIDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_FS_EXT	NET_DEV_STRUCT.H	/^    NET_DEV_FS_EXT,$/;"	e	enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FS_EXT3	NET_DEV_STRUCT.H	/^    NET_DEV_FS_EXT3,$/;"	e	enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FS_EXT4	NET_DEV_STRUCT.H	/^    NET_DEV_FS_EXT4$/;"	e	enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FS_FAT16	NET_DEV_STRUCT.H	/^    NET_DEV_FS_FAT16=0,$/;"	e	enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FS_FAT32	NET_DEV_STRUCT.H	/^    NET_DEV_FS_FAT32,$/;"	e	enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FS_NTFS	NET_DEV_STRUCT.H	/^    NET_DEV_FS_NTFS,$/;"	e	enum:_NET_DEV_FILESYSTEM_TYPE
NET_DEV_FTPUPLOAD_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_FTPUPLOAD_CFG NET_DEV_FTPUPLOAD_CFG;$/;"	t	typeref:struct:_NET_DEV_FTPUPLOAD_CFG
NET_DEV_GB28181_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_GB28181_CFG NET_DEV_GB28181_CFG;$/;"	t	typeref:struct:_NET_DEV_GB28181_CFG
NET_DEV_HIDE_ALARM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_HIDE_ALARM NET_DEV_HIDE_ALARM;$/;"	t	typeref:struct:_NET_DEV_HIDE_ALARM
NET_DEV_HOST_LEN	NET_DEV_STRUCT.H	91;"	d
NET_DEV_ID_LEN	NET_DEV_STRUCT.H	142;"	d
NET_DEV_IMAGERESOLUTION	NET_DEV_STRUCT.H	/^}NET_DEV_IMAGERESOLUTION;$/;"	t	typeref:enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMA_AE_MAXTIME_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_AE_MAXTIME_CAP  = 19,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_AE_MINTIME_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_AE_MINTIME_CAP  = 18,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_AGAIN_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_AGAIN_CAP       = 20$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_ANTIFLICKER_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_ANTIFLICKER_CAP = 9,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_ANTIFOG_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_ANTIFOG_CAP     = 13,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_AWB_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_AWB_CAP         = 14,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_BLC_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_BLC_CAP         = 15,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_BRIGHT_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_BRIGHT_CAP      = 1,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_CAP	NET_DEV_STRUCT.H	/^}NET_DEV_IMA_CAP;$/;"	t	typeref:enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_CONTRAST_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_CONTRAST_CAP    = 2,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_DN_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_DN_CAP          = 17,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_FLIP_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_FLIP_CAP        = 7,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_FREZON_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_FREZON_CAP      = 16,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_HUE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_HUE_CAP         = 3,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_LDC_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_LDC_CAP         = 12,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_MIRROR_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_MIRROR_CAP      = 6,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_ROTATE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_ROTATE_CAP      = 8,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_SATURATION_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_SATURATION_CAP  = 4,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_SCENCE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_SCENCE_CAP      = 0,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_SHARPNESS_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_SHARPNESS_CAP   = 5,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_SHUTTER_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_SHUTTER_CAP     = 11,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMA_WDR_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IMA_WDR_CAP         = 10,$/;"	e	enum:_NET_DEV_IMA_CAP
NET_DEV_IMG_1080P	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_1080P       = 14,   \/\/ 1920*1080$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_3Mega	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_3Mega       = 15,   \/\/ 2048*1536$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_4Mega	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_4Mega       = 16,   \/\/ 2560x1440$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_5Mega	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_5Mega       = 17,   \/\/ 2592*1944$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_720P	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_720P        = 12,   \/\/ 1280*720$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_960	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_960         = 13,   \/\/ 1280*960$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_BUTT$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_CIF	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_CIF         = 1,    \/\/ 352*288    n制352*240$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_D1	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_D1          = 3,    \/\/ 704*576    n制704*480$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_HD1	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_HD1         = 2,    \/\/ 704*288    n制704*240$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_QCIF	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_QCIF        = 0,    \/\/ 176*144    n制176*120$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_QQVGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_QQVGA       = 4,    \/\/ 160*112$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_QVGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_QVGA        = 5,    \/\/ 320*240$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_SVGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_SVGA        = 7,    \/\/ 800*600$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_SXGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_SXGA        = 10,   \/\/ 1280*1024$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_UXGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_UXGA        = 11,   \/\/ 1600*1200$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_UltraHD	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_UltraHD     = 18,   \/\/ 3840*2160 4k ultra hd$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_VGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_VGA         = 6,    \/\/ 640*480$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_WXGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_WXGA        = 9,    \/\/ 1280*800$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IMG_XGA	NET_DEV_STRUCT.H	/^    NET_DEV_IMG_XGA         = 8,    \/\/ 1024*768$/;"	e	enum:_NET_DEV_IMAGERESOLUTION
NET_DEV_IPADDR	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_IPADDR NET_DEV_IPADDR;$/;"	t	typeref:struct:_NET_DEV_IPADDR
NET_DEV_IPV4_ADDR_LEN	NET_DEV_STRUCT.H	92;"	d
NET_DEV_IPV6_ADDR_LEN	NET_DEV_STRUCT.H	93;"	d
NET_DEV_IRIS_CAL_END	NET_DEV_STRUCT.H	/^    NET_DEV_IRIS_CAL_END    = 0x1,      \/\/光圈校正结束(成功)$/;"	e	enum:_NET_DEV_IRIS_CAL_STATE
NET_DEV_IRIS_CAL_FAIL	NET_DEV_STRUCT.H	/^    NET_DEV_IRIS_CAL_FAIL   = 0x2,      \/\/光圈校正失败$/;"	e	enum:_NET_DEV_IRIS_CAL_STATE
NET_DEV_IRIS_CAL_START	NET_DEV_STRUCT.H	/^    NET_DEV_IRIS_CAL_START  = 0x0,      \/\/光圈校正开始$/;"	e	enum:_NET_DEV_IRIS_CAL_STATE
NET_DEV_IRIS_CAL_STATE	NET_DEV_STRUCT.H	/^}NET_DEV_IRIS_CAL_STATE;$/;"	t	typeref:enum:_NET_DEV_IRIS_CAL_STATE
NET_DEV_IRIS_CAL_TIMEOUT	NET_DEV_STRUCT.H	/^    NET_DEV_IRIS_CAL_TIMEOUT= 0x3,      \/\/光圈校正超时$/;"	e	enum:_NET_DEV_IRIS_CAL_STATE
NET_DEV_IVS_BRIGHT_ABMNL_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_BRIGHT_ABMNL_CAP        = 1,  \/\/ 亮度异常$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_CAP	NET_DEV_STRUCT.H	/^}NET_DEV_IVS_CAP;$/;"	t	typeref:enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_CLARITY_ABMNL_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_CLARITY_ABMNL_CAP       = 2,  \/\/ 清晰度异常$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_COLOR_ABMNL_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_COLOR_ABMNL_CAP         = 4,  \/\/ 颜色异常$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_CONFIG	NET_DEV_PU_SDK.H	/^typedef struct _NET_DEV_IVS_CONFIG NET_DEV_IVS_CONFIG;$/;"	t	typeref:struct:_NET_DEV_IVS_CONFIG
NET_DEV_IVS_DOUBLE_TRIP_WIRE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_DOUBLE_TRIP_WIRE_CAP    = 7,  \/\/ 双绊线$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_ID_LEN	NET_DEV_PU_SDK.H	7;"	d
NET_DEV_IVS_LEFT_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_LEFT_CAP                = 10, \/\/ 物品遗留$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_LOITER_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_LOITER_CAP              = 9,  \/\/ 徘徊检测$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_NOISE_ABMNL_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_NOISE_ABMNL_CAP         = 3,  \/\/ 噪声异常$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_PASSWD	NET_DEV_PU_SDK.H	8;"	d
NET_DEV_IVS_PERI_METER_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_PERI_METER_CAP          = 8,  \/\/ 警戒区$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_SCENE_CHANGE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_SCENE_CHANGE_CAP        = 5,  \/\/ 场景变换,人为干扰$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_TAKE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_TAKE_CAP                = 11, \/\/ 物品丢失$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_IVS_TRIP_WIRE_CAP	NET_DEV_STRUCT.H	/^    NET_DEV_IVS_TRIP_WIRE_CAP           = 6,  \/\/ 单绊线$/;"	e	enum:_NET_DEV_IVS_CAP
NET_DEV_KEEPALIVE_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_KEEPALIVE_RSP NET_DEV_KEEPALIVE_RSP;$/;"	t	typeref:struct:_NET_DEV_KEEPALIVE_RSP
NET_DEV_LANGUAGE	NET_DEV_STRUCT.H	/^}NET_DEV_LANGUAGE;$/;"	t	typeref:enum:_NET_DEV_LANGUAGE
NET_DEV_LANGUAGE_CHINESE	NET_DEV_STRUCT.H	/^    NET_DEV_LANGUAGE_CHINESE = 0,$/;"	e	enum:_NET_DEV_LANGUAGE
NET_DEV_LANGUAGE_ENGLISH	NET_DEV_STRUCT.H	/^    NET_DEV_LANGUAGE_ENGLISH = 1$/;"	e	enum:_NET_DEV_LANGUAGE
NET_DEV_LEFT_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LEFT_RULE NET_DEV_LEFT_RULE;$/;"	t	typeref:struct:_NET_DEV_LEFT_RULE
NET_DEV_LINE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LINE NET_DEV_LINE;$/;"	t	typeref:struct:_NET_DEV_LINE
NET_DEV_LOGIN_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOGIN_REQ NET_DEV_LOGIN_REQ;$/;"	t	typeref:struct:_NET_DEV_LOGIN_REQ
NET_DEV_LOGIN_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOGIN_RSP NET_DEV_LOGIN_RSP;$/;"	t	typeref:struct:_NET_DEV_LOGIN_RSP
NET_DEV_LOG_COND	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOG_COND NET_DEV_LOG_COND;$/;"	t	typeref:struct:_NET_DEV_LOG_COND
NET_DEV_LOG_ITEM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOG_ITEM NET_DEV_LOG_ITEM;$/;"	t	typeref:struct:_NET_DEV_LOG_ITEM
NET_DEV_LOG_MAJOR_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_ALARM      = 0x0002,      \/\/告警日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_ALL        = 0xffffffff   \/\/所有日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_EXCEPTION	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_EXCEPTION  = 0x0006,      \/\/异常日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_NETWORK	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_NETWORK    = 0x0004,      \/\/网络日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_OPERATE	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_OPERATE    = 0x0003,      \/\/操作日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_PARAM	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_PARAM      = 0x0005,      \/\/参数日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_SYSTEM	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MAJOR_SYSTEM     = 0x0001,      \/\/系统日志$/;"	e	enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MAJOR_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_MAJOR_TYPE;$/;"	t	typeref:enum:_NET_DEV_LOG_MAJOR_TYPE
NET_DEV_LOG_MINOR_ALARM_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_ALL      = 0xffff \/\/所有告警日志$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_DI_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_DI_START ,        \/\/输入告警发生$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_DI_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_DI_STOP,          \/\/输入告警停止$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_MD_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_MD_START = 0x0001,\/\/移动侦测告警发生$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_MD_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_MD_STOP,          \/\/移动侦测告警停止$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_OD_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_OD_START,         \/\/视频遮挡报警发生$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_OD_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_OD_STOP,          \/\/视频遮挡报警停止$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_PIR_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_PIR_START,    \/\/PIR告警发生$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_PIR_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_PIR_STOP,         \/\/PIR告警停止$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_MINOR_ALARM_TYPE;$/;"	t	typeref:enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_VL_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_VL_START,         \/\/视频丢失告警发生$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_ALARM_VL_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_ALARM_VL_STOP,          \/\/视频丢失告警停止$/;"	e	enum:_NET_DEV_LOG_MINOR_ALARM_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_ALL     = 0xffff        \/\/所有异常日志$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_HD_ERROR	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_HD_ERROR,               \/\/硬盘错误$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_HD_FULL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_HD_FULL,                \/\/硬盘满$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_HD_NO	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_HD_NO   = 0x0001,       \/\/无硬盘$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_HD_NORMAL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_HD_NORMAL,              \/\/磁盘正常$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_IP_CONFLICT	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_IP_CONFLICT,            \/\/IP冲突$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_IP_NORMAL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_IP_NORMAL,              \/\/IP正常$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_NET_BROKEN	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_NET_BROKEN,             \/\/网络断开$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_NET_NORMAL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_EXCEPTION_NET_NORMAL,             \/\/网络正常$/;"	e	enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_EXCEPTION_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_MINOR_EXCEPTION_TYPE;$/;"	t	typeref:enum:_NET_DEV_LOG_MINOR_EXCEPTION_TYPE
NET_DEV_LOG_MINOR_OPERATE_BACKUP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_BACKUP,            \/\/ 备份$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_CLR_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_CLR_ALARM,         \/\/ 清除报警$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_CTRL_ALARM_OUT	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_CTRL_ALARM_OUT,     \/\/ 手动控制报警输出$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_DEFAULT	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_DEFAULT,           \/\/ 恢复默认$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_DETECT_DEAL_PIX	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_DETECT_DEAL_PIX,    \/\/ 坏点检测$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_DETECT_IRIS	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_DETECT_IRIS,        \/\/ 光圈校正$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_FORMAT_DISK	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_FORMAT_DISK,       \/\/ 格式化硬盘$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_FORMAT_DISK_U	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_FORMAT_DISK_U,      \/\/ 格式化U盘$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_LOGIN	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_LOGIN = 0x0001,    \/\/ 登陆$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_LOGOUT	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_LOGOUT,            \/\/ 注销$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_LOG_BACKUP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_LOG_BACKUP,         \/\/ 备份日志$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_LOG_DEL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_LOG_DEL,           \/\/ 删除日志$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_LOG_EMPTY	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_LOG_EMPTY,         \/\/ 清空日志$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_MANUAL_RECORD_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_MANUAL_RECORD_START,\/\/ 手动启动录像$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_MANUAL_RECORD_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_MANUAL_RECORD_STOP, \/\/ 手动停止录像$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_MINOR_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_MINOR_ALL  = 0xffff \/\/ 所有操作日志$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_PLAYBACK	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_PLAYBACK,          \/\/ 回放$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_PTZ	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_PTZ,               \/\/ 云台控制$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_RECORD_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_RECORD_START,      \/\/ 启动录像$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_RECORD_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_RECORD_STOP,       \/\/ 停止录像$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_SETTIME	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_SETTIME,           \/\/ 设置系统时间$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_TALKBACK_START	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_TALKBACK_START,    \/\/ 对讲开始$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_TALKBACK_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_TALKBACK_STOP,     \/\/ 对讲结束$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_MINOR_OPERATE_TYPE;$/;"	t	typeref:enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_UPGRADE	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_UPGRADE,           \/\/ 升级$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_USER_ADD	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_USER_ADD,          \/\/ 用户管理-增加$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_USER_DEL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_USER_DEL,          \/\/ 用户管理-删除$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_OPERATE_USER_MODI	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_OPERATE_USER_MODI,         \/\/ 用户管理-修改$/;"	e	enum:_NET_DEV_LOG_MINOR_OPERATE_TYPE
NET_DEV_LOG_MINOR_PARAM_ALARMIN	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_ALARMIN,                \/\/ 输入告警配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_ALARMUP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_ALARMUP,                \/\/ 报警上传配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_BASE	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_BASE,                   \/\/ 设备基本参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_CHAN	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_CHAN,                   \/\/ 通道参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_DDNS	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_DDNS,                   \/\/ DDNS 配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_FTP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_FTP,                    \/\/ FTP 配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_MOTION	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_MOTION,                 \/\/ 移动侦测配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_NETFAULT	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_NETFAULT,               \/\/ 网络故障检测配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_NETWORK	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_NETWORK = 0x0001,       \/\/ 网络参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_NTP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_NTP,                    \/\/ NTP  配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_OD	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_OD,                     \/\/ 视频遮挡配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_OSD	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_OSD,                    \/\/ OSD配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_OVERLAY	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_OVERLAY,                \/\/ 遮挡区域配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_PIC_ATTR	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_PIC_ATTR,               \/\/ 图像属性配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_PIR	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_PIR,                    \/\/ PIR 配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_POLL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_POLL,                   \/\/ 轮巡配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_PREVIEW	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_PREVIEW,                \/\/ 预览配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_PTZ	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_PTZ,                    \/\/ 云台参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_RECORD	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_RECORD,                 \/\/ 录像参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_ROI	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_ROI,                    \/\/ 感兴趣区域配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_SMTP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_SMTP,                   \/\/ SMTP 配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_TV	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_TV,                     \/\/ TV参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_MINOR_PARAM_TYPE;$/;"	t	typeref:enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_UART	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_UART,                   \/\/ 串口参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_UPNP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_UPNP,                   \/\/ UPNP 配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_VENC	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_VENC,                   \/\/ 编码参数配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PARAM_VIDEOLOST	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PARAM_VIDEOLOST,              \/\/ 视频丢失配置$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_PRARM_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_PRARM_ALL    = 0xffff         \/\/ 所有参数日志$/;"	e	enum:_NET_DEV_LOG_MINOR_PARAM_TYPE
NET_DEV_LOG_MINOR_SYS_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_SYS_ALL     = 0xffff    \/\/所有系统日志$/;"	e	enum:_NET_DEV_LOG_MINOR_SYS_TYPE
NET_DEV_LOG_MINOR_SYS_REBOOT	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_SYS_REBOOT,             \/\/重启$/;"	e	enum:_NET_DEV_LOG_MINOR_SYS_TYPE
NET_DEV_LOG_MINOR_SYS_SHUTDOWN	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_SYS_SHUTDOWN,           \/\/关机$/;"	e	enum:_NET_DEV_LOG_MINOR_SYS_TYPE
NET_DEV_LOG_MINOR_SYS_STARTUP	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_MINOR_SYS_STARTUP = 0x0001,   \/\/开机$/;"	e	enum:_NET_DEV_LOG_MINOR_SYS_TYPE
NET_DEV_LOG_MINOR_SYS_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_MINOR_SYS_TYPE;$/;"	t	typeref:enum:_NET_DEV_LOG_MINOR_SYS_TYPE
NET_DEV_LOG_OPERATE	NET_DEV_STRUCT.H	/^}NET_DEV_LOG_OPERATE;$/;"	t	typeref:enum:_NET_DEV_LOG_OPERATE
NET_DEV_LOG_OP_DEL	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_OP_DEL,           \/\/ 删除(按时间段)$/;"	e	enum:_NET_DEV_LOG_OPERATE
NET_DEV_LOG_OP_EMPTY	NET_DEV_STRUCT.H	/^    NET_DEV_LOG_OP_EMPTY = 1,     \/\/ 清空(全部)$/;"	e	enum:_NET_DEV_LOG_OPERATE
NET_DEV_LOG_QUERY_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOG_QUERY_REQ NET_DEV_LOG_QUERY_REQ;$/;"	t	typeref:struct:_NET_DEV_LOG_QUERY_REQ
NET_DEV_LOG_QUERY_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOG_QUERY_RSP NET_DEV_LOG_QUERY_RSP;$/;"	t	typeref:struct:_NET_DEV_LOG_QUERY_RSP
NET_DEV_LOST_ALARM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_LOST_ALARM NET_DEV_LOST_ALARM;$/;"	t	typeref:struct:_NET_DEV_LOST_ALARM
NET_DEV_MAC_ADDR_LEN	NET_DEV_STRUCT.H	94;"	d
NET_DEV_MANUL_SNAPPIC_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MANUL_SNAPPIC_REQ NET_DEV_MANUL_SNAPPIC_REQ;$/;"	t	typeref:struct:_NET_DEV_MANUL_SNAPPIC_REQ
NET_DEV_MANUL_SNAPPIC_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MANUL_SNAPPIC_RSP NET_DEV_MANUL_SNAPPIC_RSP;$/;"	t	typeref:struct:_NET_DEV_MANUL_SNAPPIC_RSP
NET_DEV_MAX_ALARM_IN_NUM	NET_DEV_STRUCT.H	118;"	d
NET_DEV_MAX_ALARM_OUT_NUM	NET_DEV_STRUCT.H	119;"	d
NET_DEV_MAX_AREA_NUM	NET_DEV_STRUCT.H	137;"	d
NET_DEV_MAX_AVD_RULE_NUM	NET_DEV_STRUCT.H	2429;"	d
NET_DEV_MAX_CHANN_NUM	NET_DEV_STRUCT.H	104;"	d
NET_DEV_MAX_CPC_EVENT_NUM	NET_DEV_STRUCT.H	2442;"	d
NET_DEV_MAX_CPC_RULE_NUM	NET_DEV_STRUCT.H	2438;"	d
NET_DEV_MAX_CPC_RULE_POINT_NUM	NET_DEV_STRUCT.H	2439;"	d
NET_DEV_MAX_CPC_TARGET_NUM	NET_DEV_STRUCT.H	2441;"	d
NET_DEV_MAX_CPC_TARGET_POINT_NUM	NET_DEV_STRUCT.H	2440;"	d
NET_DEV_MAX_CRZ_NUM	NET_DEV_STRUCT.H	111;"	d
NET_DEV_MAX_CRZ_STEP_NUM	NET_DEV_STRUCT.H	110;"	d
NET_DEV_MAX_DEVLIST_NUM	NET_DEV_STRUCT.H	145;"	d
NET_DEV_MAX_ETH_NICS	NET_DEV_STRUCT.H	95;"	d
NET_DEV_MAX_IVS_NAME_LEN	NET_DEV_STRUCT.H	2430;"	d
NET_DEV_MAX_LOG_PAGE_SIZE	NET_DEV_STRUCT.H	123;"	d
NET_DEV_MAX_NET_DISK	NET_DEV_STRUCT.H	117;"	d
NET_DEV_MAX_PATH_LEN	NET_DEV_STRUCT.H	98;"	d
NET_DEV_MAX_PEAOSC_EVENT_NUM	NET_DEV_STRUCT.H	2436;"	d
NET_DEV_MAX_PEAOSC_RULE_NUM	NET_DEV_STRUCT.H	2433;"	d
NET_DEV_MAX_PEAOSC_TARGET_NUM	NET_DEV_STRUCT.H	2435;"	d
NET_DEV_MAX_PEAOSC_TARGET_TRACK_NUM	NET_DEV_STRUCT.H	2434;"	d
NET_DEV_MAX_PHY_DISK	NET_DEV_STRUCT.H	116;"	d
NET_DEV_MAX_PIC_PAGE_SIZE	NET_DEV_STRUCT.H	125;"	d
NET_DEV_MAX_PIC_SIZE	NET_DEV_STRUCT.H	2920;"	d
NET_DEV_MAX_POLYGON_POINT_NUM	NET_DEV_STRUCT.H	2431;"	d
NET_DEV_MAX_PRESET_NUM	NET_DEV_STRUCT.H	109;"	d
NET_DEV_MAX_REC_PAGE_SIZE	NET_DEV_STRUCT.H	124;"	d
NET_DEV_MAX_SEG_NUM	NET_DEV_STRUCT.H	136;"	d
NET_DEV_MAX_STREAM_NUM	NET_DEV_STRUCT.H	106;"	d
NET_DEV_MAX_URL_LEN	NET_DEV_STRUCT.H	97;"	d
NET_DEV_MAX_USER_NUM	NET_DEV_STRUCT.H	100;"	d
NET_DEV_MAX_WIFI_AP_NUM	NET_DEV_STRUCT.H	134;"	d
NET_DEV_MEDIA	NET_DEV_PU_SDK.H	/^typedef struct _NET_DEV_MEDIA NET_DEV_MEDIA;$/;"	t	typeref:struct:_NET_DEV_MEDIA
NET_DEV_MEDIA_AFRAMEEXT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_AFRAMEEXT NET_DEV_MEDIA_AFRAMEEXT;$/;"	t	typeref:struct:_NET_DEV_MEDIA_AFRAMEEXT
NET_DEV_MEDIA_AUDIOPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_AUDIOPARAM NET_DEV_MEDIA_AUDIOPARAM;$/;"	t	typeref:struct:_NET_DEV_MEDIA_AUDIOPARAM
NET_DEV_MEDIA_CPC_EVENT	NET_DEV_STRUCT.H	3382;"	d
NET_DEV_MEDIA_CPC_RULE	NET_DEV_STRUCT.H	3381;"	d
NET_DEV_MEDIA_CPC_TARGET	NET_DEV_STRUCT.H	3383;"	d
NET_DEV_MEDIA_ENCODETYPE	NET_DEV_STRUCT.H	/^}NET_DEV_MEDIA_ENCODETYPE;$/;"	t	typeref:enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_AAC	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_AAC,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_G711A	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_G711A,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_G711U	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_G711U,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_H264	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_H264,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_H265	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_H265,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_JPEG	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_JPEG,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_METADATA	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_METADATA,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_MPEG4	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_MPEG4,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_RESERVED1	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_RESERVED1,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_RESERVED2	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_RESERVED2,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_ENC_TYPE_RESERVED3	NET_DEV_STRUCT.H	/^   NET_DEV_MEDIA_ENC_TYPE_RESERVED3,$/;"	e	enum:_NET_DEV_MEDIA_ENCODETYPE
NET_DEV_MEDIA_FRAME	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_FRAME NET_DEV_MEDIA_FRAME;$/;"	t	typeref:struct:_NET_DEV_MEDIA_FRAME
NET_DEV_MEDIA_FRAMEHEADER	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_FRAMEHEADER NET_DEV_MEDIA_FRAMEHEADER;$/;"	t	typeref:struct:_NET_DEV_MEDIA_FRAMEHEADER
NET_DEV_MEDIA_FRAMETYPE	NET_DEV_STRUCT.H	/^}NET_DEV_MEDIA_FRAMETYPE;$/;"	t	typeref:enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_A	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_A   = 0x04,   \/*音频帧*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_B	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_B   = 0x03,   \/*视频B帧*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_EOF	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_EOF = 0xff    \/*结束帧*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_EXT	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_EXT = 0xfe,   \/*Ext帧(MSS)*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_I	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_I   = 0x01,   \/*视频I帧*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_M	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_M   = 0x05,   \/*Meta帧*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_FRAME_TYPE_P	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_FRAME_TYPE_P   = 0x02,   \/*视频P帧*\/$/;"	e	enum:_NET_DEV_MEDIA_FRAMETYPE
NET_DEV_MEDIA_IVS_HDR	NET_DEV_STRUCT.H	/^}NET_DEV_MEDIA_IVS_HDR;$/;"	t	typeref:struct:_NET_DEV_MEDIA_IVS_HDR
NET_DEV_MEDIA_METAPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_METAPARAM NET_DEV_MEDIA_METAPARAM;$/;"	t	typeref:struct:_NET_DEV_MEDIA_METAPARAM
NET_DEV_MEDIA_MFRAMEEXT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_MFRAMEEXT NET_DEV_MEDIA_MFRAMEEXT;$/;"	t	typeref:struct:_NET_DEV_MEDIA_MFRAMEEXT
NET_DEV_MEDIA_NALDESC	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_NALDESC NET_DEV_MEDIA_NALDESC;$/;"	t	typeref:struct:_NET_DEV_MEDIA_NALDESC
NET_DEV_MEDIA_PARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_PARAM NET_DEV_MEDIA_PARAM;$/;"	t	typeref:struct:_NET_DEV_MEDIA_PARAM
NET_DEV_MEDIA_PEAOSC_EVENT	NET_DEV_STRUCT.H	3378;"	d
NET_DEV_MEDIA_PEAOSC_RULE	NET_DEV_STRUCT.H	3377;"	d
NET_DEV_MEDIA_PEAOSC_TARGET	NET_DEV_STRUCT.H	3379;"	d
NET_DEV_MEDIA_PICPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_PICPARAM NET_DEV_MEDIA_PICPARAM;$/;"	t	typeref:struct:_NET_DEV_MEDIA_PICPARAM
NET_DEV_MEDIA_SAMPLERATE	NET_DEV_STRUCT.H	/^}NET_DEV_MEDIA_SAMPLERATE;$/;"	t	typeref:enum:_NET_DEV_MEDIA_SAMPLERATE
NET_DEV_MEDIA_SAMPLE_RATE_08K	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_SAMPLE_RATE_08K = 8,$/;"	e	enum:_NET_DEV_MEDIA_SAMPLERATE
NET_DEV_MEDIA_SAMPLE_RATE_90K	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_SAMPLE_RATE_90K = 90$/;"	e	enum:_NET_DEV_MEDIA_SAMPLERATE
NET_DEV_MEDIA_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_MEDIA_TYPE;$/;"	t	typeref:enum:_NET_DEV_MEDIA_TYPE
NET_DEV_MEDIA_URL	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_URL NET_DEV_MEDIA_URL;$/;"	t	typeref:struct:_NET_DEV_MEDIA_URL
NET_DEV_MEDIA_URL_HISTORY_AV	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_URL_HISTORY_AV,              \/\/历史音视频（点播）$/;"	e	enum:_NET_DEV_MEDIA_URL_TYPE
NET_DEV_MEDIA_URL_HISTORY_AV_DOWNLOAD	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_URL_HISTORY_AV_DOWNLOAD,     \/\/历史音视频（下载）$/;"	e	enum:_NET_DEV_MEDIA_URL_TYPE
NET_DEV_MEDIA_URL_HISTORY_PICTURE	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_URL_HISTORY_PICTURE          \/\/历史图片$/;"	e	enum:_NET_DEV_MEDIA_URL_TYPE
NET_DEV_MEDIA_URL_REALTIME_AV	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_URL_REALTIME_AV  = 0,        \/\/实时音视频流$/;"	e	enum:_NET_DEV_MEDIA_URL_TYPE
NET_DEV_MEDIA_URL_REALTIME_PICTURE	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_URL_REALTIME_PICTURE,        \/\/实时抓拍图片$/;"	e	enum:_NET_DEV_MEDIA_URL_TYPE
NET_DEV_MEDIA_URL_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_MEDIA_URL_TYPE;$/;"	t	typeref:enum:_NET_DEV_MEDIA_URL_TYPE
NET_DEV_MEDIA_VFRAMEEXT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_VFRAMEEXT NET_DEV_MEDIA_VFRAMEEXT;$/;"	t	typeref:struct:_NET_DEV_MEDIA_VFRAMEEXT
NET_DEV_MEDIA_VIDEOPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_VIDEOPARAM NET_DEV_MEDIA_VIDEOPARAM;$/;"	t	typeref:struct:_NET_DEV_MEDIA_VIDEOPARAM
NET_DEV_META_FRAMETYPE	NET_DEV_STRUCT.H	/^}NET_DEV_META_FRAMETYPE;$/;"	t	typeref:enum:_NET_DEV_META_FRAMETYPE
NET_DEV_META_FRAME_AGW_DATA	NET_DEV_STRUCT.H	/^    NET_DEV_META_FRAME_AGW_DATA = 0x10,   \/*AGW DATA*\/$/;"	e	enum:_NET_DEV_META_FRAMETYPE
NET_DEV_META_FRAME_DEV_POSITION	NET_DEV_STRUCT.H	/^    NET_DEV_META_FRAME_DEV_POSITION = 0x20, \/*DEV POSITION*\/$/;"	e	enum:_NET_DEV_META_FRAMETYPE
NET_DEV_META_FRAME_IVS_CPC	NET_DEV_STRUCT.H	/^    NET_DEV_META_FRAME_IVS_CPC = 0x02,    \/*IVS CPC*\/$/;"	e	enum:_NET_DEV_META_FRAMETYPE
NET_DEV_META_FRAME_IVS_PEA	NET_DEV_STRUCT.H	/^    NET_DEV_META_FRAME_IVS_PEA = 0x01,    \/*IVS PEA&OSC*\/$/;"	e	enum:_NET_DEV_META_FRAMETYPE
NET_DEV_MODIFY_NET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MODIFY_NET NET_DEV_MODIFY_NET;$/;"	t	typeref:struct:_NET_DEV_MODIFY_NET
NET_DEV_MODIFY_NET_HTON	sadp_pu_api.h	93;"	d
NET_DEV_MODIFY_NET_NTOH	sadp_pu_api.h	100;"	d
NET_DEV_MONDAY	NET_DEV_STRUCT.H	/^    NET_DEV_MONDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_MOTION_ALARM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MOTION_ALARM NET_DEV_MOTION_ALARM;$/;"	t	typeref:struct:_NET_DEV_MOTION_ALARM
NET_DEV_MSG_ALARMSUBMIT	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_ALARMSUBMIT     = 1012,     \/\/ NET_DEV_ALARM_ITEM           ----                        告警上报信息$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_ALARMSUBSCRIBE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_ALARMSUBSCRIBE  = 1003,     \/\/ NET_DEV_ALARMSUBSCRIBE       ----                        订阅告警信息$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_CAPABILITIES	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_CAPABILITIES    = 1002,     \/\/ ----                         NET_DEV_CAPABILITIES        获取能力集$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_BIND_SET	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_BIND_SET       = 1087,  \/\/NET_DEV_DEC_BIND              ----                          绑定数据源配置$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_BIND_STATE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_BIND_STATE     = 1088,  \/\/NET_DEV_DEC_BIND_Q            NET_DEV_DEC_BIND              绑定数据源状态$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_DIVMODE_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_DIVMODE_QUERY  = 1080,  \/\/NET_DEV_DEC_DIVMODE_QUERY_REQ NET_DEV_DEC_DIVMODE_QUERY_RSP 获取分屏模式集合$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_DIV_CLEAR	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_DIV_CLEAR      = 1086,  \/\/NET_DEV_DEC_DIV               ----                          清除分割显示$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_SCREEN_ENTERFULL	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_SCREEN_ENTERFULL=1083,  \/\/NET_DEV_DEC_DIV               ----                          进入全屏显示$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_SCREEN_EXITFULL	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_SCREEN_EXITFULL= 1084,  \/\/NET_DEV_DEC_DIV               ----                          退出全屏显示$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_SCREEN_SETDIV	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_SCREEN_SETDIV  = 1082,  \/\/NET_DEV_DEC_SCREEN            ----                          改变分屏模式$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_SCREEN_STATE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_SCREEN_STATE   = 1081,  \/\/ ----                         NET_DEV_DEC_SCREENSTATE       获取屏幕状态$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEC_TVW_PLAY	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEC_TVW_PLAY       = 1085,  \/\/NET_DEV_DEC_TVWPLAY           NET_DEV_DEC_TVWPLAY           电视墙播放$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEV_CONTROL	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEV_CONTROL     = 1009,     \/\/ NET_DEV_CONTROL              ----                        设备控制$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_DEV_STATE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_DEV_STATE       = 1010,     \/\/ NET_DEV_STATE_QUERY_REQ      NET_DEV_STATE_QUERY_RSP     设备状态$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_FORMATDISK	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_FORMATDISK      = 1011,     \/\/ NET_DEV_FORMATDISK_REQ       NET_DEV_FORMATDISK_RSP      磁盘格式化$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_ID	NET_DEV_STRUCT.H	/^}NET_DEV_MSG_ID;$/;"	t	typeref:enum:_NET_DEV_MSG_ID
NET_DEV_MSG_KEEPALIVE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_KEEPALIVE       = 1014,     \/\/ ----                         NET_DEV_KEEPALIVE_RSP       心跳$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_LOGIN	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_LOGIN           = 1000,     \/\/ NET_DEV_LOGIN_REQ            NET_DEV_LOGIN_RSP           用户登录$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_LOGOUT	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_LOGOUT          = 1001,     \/\/ ----                         ----                        用户注销$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_LOG_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_LOG_QUERY       = 1008,     \/\/ NET_DEV_LOG_QUERY_REQ        NET_DEV_LOG_QUERY_RSP       日志查询$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_MANUL_SNAPPIC	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_MANUL_SNAPPIC   = 1005,     \/\/ NET_DEV_MANUL_SNAPPIC_REQ    NET_DEV_MANUL_SNAPPIC_RSP   手动抓拍(DC)  CHN$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_MEDIA_URL	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_MEDIA_URL       = 1013,     \/\/ NET_DEV_MEDIA_URL            NET_DEV_MEDIA_URL           获取媒体URL   CHN$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_NVR_DEVLIST	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_NVR_DEVLIST     = 1015,     \/\/ NET_DEV_NVR_DEVLIST_REQ      NET_DEV_NVR_DEVLIST_RSP     获取设备列表$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PF_CMSTIME	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PF_CMSTIME      = 1104,     \/\/ NET_DEV_PF_CMSTIME           ----                        CMS时间$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PF_GETCHNLSTATE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PF_GETCHNLSTATE = 1105      \/\/ ----                         NET_DEV_PF_CHNLSTATE        获取通道在线状态$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PF_GETMDS	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PF_GETMDS       = 1101,     \/\/ NET_DEV_PF_GETMDS_REQ        NET_DEV_PF_MDSIP            获取MDS地址信息(SDK内部使用)$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PF_KEEPALIVE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PF_KEEPALIVE    = 1102,     \/\/ NET_DEV_PF_CHNLSTATE         NET_DEV_PF_KEEPALIVE_RSP    心跳(SDK内部使用)$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PF_MDSUPDATE	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PF_MDSUPDATE    = 1103,     \/\/ ----                         ----                        MDS信息变更(SDK内部使用)$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PF_REGISTER	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PF_REGISTER     = 1100,     \/\/ NET_DEV_PF_REGISTER_REQ      NET_DEV_PF_REGISTER_RSP     注册平台(SDK内部使用)$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PIC_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PIC_QUERY       = 1007,     \/\/ NET_DEV_PIC_QUERY_REQ        NET_DEV_PIC_QUERY_RSP       图片查询      CHN$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_PTZ_CONTROL	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_PTZ_CONTROL     = 1004,     \/\/ NET_DEV_PTZ_CONTROL          ----                        云台控制      CHN$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_MSG_RECORD_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_MSG_RECORD_QUERY    = 1006,     \/\/ NET_DEV_RECORD_QUERY_REQ     NET_DEV_RECORD_QUERY_RSP    录像查询      CHN$/;"	e	enum:_NET_DEV_MSG_ID
NET_DEV_NAS_MOUNT_PARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NAS_MOUNT_PARAM NET_DEV_NAS_MOUNT_PARAM;$/;"	t	typeref:struct:_NET_DEV_NAS_MOUNT_PARAM
NET_DEV_NETSTATES	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NETSTATES NET_DEV_NETSTATES;$/;"	t	typeref:struct:_NET_DEV_NETSTATES
NET_DEV_NET_DISKCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NET_DISKCFG NET_DEV_NET_DISKCFG;$/;"	t	typeref:struct:_NET_DEV_NET_DISKCFG
NET_DEV_NET_SINGLE_DISK	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NET_SINGLE_DISK NET_DEV_NET_SINGLE_DISK;$/;"	t	typeref:struct:_NET_DEV_NET_SINGLE_DISK
NET_DEV_NICCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NICCFG NET_DEV_NICCFG;$/;"	t	typeref:struct:_NET_DEV_NICCFG
NET_DEV_NIC_CONNECTED	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_CONNECTED                \/\/已连接$/;"	e	enum:_NET_DEV_NIC_STATE
NET_DEV_NIC_CONNECTING	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_CONNECTING,              \/\/正在连接$/;"	e	enum:_NET_DEV_NIC_STATE
NET_DEV_NIC_DISCONNECTED	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_DISCONNECTED = 0,        \/\/断开$/;"	e	enum:_NET_DEV_NIC_STATE
NET_DEV_NIC_IDX	NET_DEV_STRUCT.H	/^}NET_DEV_NIC_IDX;$/;"	t	typeref:enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_IDX_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_IDX_BUTT$/;"	e	enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_IDX_ETH0	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_IDX_ETH0   = 0,$/;"	e	enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_IDX_ETH1	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_IDX_ETH1   = 1,$/;"	e	enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_IDX_ETH2	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_IDX_ETH2   = 2,$/;"	e	enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_IDX_ETH3	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_IDX_ETH3   = 3,$/;"	e	enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_IDX_WIFI0	NET_DEV_STRUCT.H	/^    NET_DEV_NIC_IDX_WIFI0  = 4,$/;"	e	enum:_NET_DEV_NIC_IDX
NET_DEV_NIC_STATE	NET_DEV_STRUCT.H	/^}NET_DEV_NIC_STATE;$/;"	t	typeref:enum:_NET_DEV_NIC_STATE
NET_DEV_NTPCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NTPCFG NET_DEV_NTPCFG;$/;"	t	typeref:struct:_NET_DEV_NTPCFG
NET_DEV_NVRCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NVRCFG NET_DEV_NVRCFG;$/;"	t	typeref:struct:_NET_DEV_NVRCFG
NET_DEV_NVR_CHANNEL	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NVR_CHANNEL NET_DEV_NVR_CHANNEL;$/;"	t	typeref:struct:_NET_DEV_NVR_CHANNEL
NET_DEV_NVR_DEVLIST_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NVR_DEVLIST_REQ NET_DEV_NVR_DEVLIST_REQ;$/;"	t	typeref:struct:_NET_DEV_NVR_DEVLIST_REQ
NET_DEV_NVR_DEVLIST_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_NVR_DEVLIST_RSP NET_DEV_NVR_DEVLIST_RSP;$/;"	t	typeref:struct:_NET_DEV_NVR_DEVLIST_RSP
NET_DEV_OPEN_IO	NET_DEV_STRUCT.H	/^    NET_DEV_OPEN_IO                 = 0x07,        \/\/打开IO$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_OSD_TEXT_LEN	NET_DEV_STRUCT.H	129;"	d
NET_DEV_OSD_TEXT_NUM	NET_DEV_STRUCT.H	128;"	d
NET_DEV_P2P_DEV_UUID_LEN	NET_DEV_STRUCT.H	146;"	d
NET_DEV_PARAM_ALARMHOST_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_ALARMHOST_CFG       = 47, \/\/ NET_DEV_ALARMHOST_CFG      报警上传配置$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_ALARMIN_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_ALARMIN_ALARM       = 20, \/\/ NET_DEV_ALARMIN_ALARM      告警输入$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_ALARMOUTCFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_ALARMOUTCFG         = 21, \/\/ NET_DEV_ALARMOUTCFG        告警输出$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_ALARM_JOINT	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_ALARM_JOINT         = 23, \/\/ NET_DEV_ALARM_JOINT        联动配置$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_AVD_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_AVD_CFG             = 51, \/\/ NET_DEV_AVD_CFG            IVS视频诊断配置          CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_BASECFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_BASECFG             = 2,  \/\/ NET_DEV_BASECFG            设备基础信息 v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_CAMERA_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_CAMERA_CFG          = 12, \/\/ NET_DEV_CAMERACFG          图像参数     v1           CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_CMS_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_CMS_CFG             = 48, \/\/ NET_DEV_CMS_CFG            平台信息$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_CPC_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_CPC_CFG             = 53, \/\/ NET_DEV_CPC_CFG            IVS目标检测              CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_CRUISEWAY	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_CRUISEWAY           = 30, \/\/ NET_DEV_PTZ_CRUISEWAY      配置巡航路径     v1       CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_CRUISEWAYSET_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_CRUISEWAYSET_QUERY  = 29, \/\/ NET_DEV_PTZ_CRUISEWAYSET   查询巡航路径集合 v1       CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_DAYNIGHT	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_DAYNIGHT            = 35, \/\/ NET_DEV_DAYNIGHT           日夜模式参数              CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_DDNS_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_DDNS_CFG            = 45, \/\/ NET_DEV_DDNS_CFG           动态域名服务$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_DIALPARAM	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_DIALPARAM           = 40, \/\/ NET_DEV_DIALPARAM          3G拨号参数$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_ENCODECFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_ENCODECFG           = 13, \/\/ NET_DEV_ENCODECFG          编码参数     v1           CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_EXCEPTION	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_EXCEPTION           = 24, \/\/ NET_DEV_EXCEPTION          设备异常处理$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_FTPUPLOAD_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_FTPUPLOAD_CFG       = 42, \/\/ NET_DEV_FTPUPLOAD_CFG      ftp 参数$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_GB28181_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_GB28181_CFG         = 49, \/\/ NET_DEV_GB28181_CFG        GB28181平台$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_HIDE_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_HIDE_ALARM          = 19, \/\/ NET_DEV_HIDE_ALARM         遮挡告警                  CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_ID	NET_DEV_STRUCT.H	/^}NET_DEV_PARAM_ID;$/;"	t	typeref:enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_LOST_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_LOST_ALARM          = 18, \/\/ NET_DEV_LOST_ALARM         丢失告警                  CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_MAX	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_MAX$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_MODIFY_USER_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_MODIFY_USER_CFG     = 7,  \/\/ NET_DEV_USER_MODIFY        修改用户信息 v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_MOTION_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_MOTION_ALARM        = 17, \/\/ NET_DEV_MOTION_ALARM       移动告警                  CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_NET	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_NET                 = 4,  \/\/ NET_DEV_ETHCFG             网络信息     v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_NET_DISK_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_NET_DISK_CFG        = 46, \/\/ NET_DEV_NET_DISKCFG        网络磁盘管理$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_NTPCFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_NTPCFG              = 41, \/\/ NET_DEV_NTPCFG             NTP 信息$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_NVR_CHANNEL	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_NVR_CHANNEL         = 11, \/\/ NET_DEV_NVR_CHANNEL        设备通道配置 v1 nvr       CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PATTERNSET_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PATTERNSET_QUERY    = 50, \/\/ NET_DEV_PTZ_PATTERNSET     查询PTZ轨迹集合   v2     CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PEAOSC_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PEAOSC_CFG          = 52, \/\/ NET_DEV_PEAOSC_CFG         IVS周界配置              CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PHY_DISK	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PHY_DISK            = 27, \/\/ NET_DEV_PHY_DISK           磁盘信息        v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PIR_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PIR_ALARM           = 22, \/\/ NET_DEV_PIR_ALARM          PIR 告警                  CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PPPCFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PPPCFG              = 39, \/\/ NET_DEV_PPPCFG             PPP拨号配置$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PPPOECFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PPPOECFG            = 38, \/\/ NET_DEV_PPPOECFG           PPPOE拨号配置$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PRESETSET_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PRESETSET_QUERY     = 28, \/\/ NET_DEV_PTZ_PRESETSET      查询预置点集合   v1       CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PTZ_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PTZ_CFG             = 33, \/\/ NET_DEV_PTZ_CFG            云台信息         v1       CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PTZ_PARKACTION_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PTZ_PARKACTION_CFG  = 31, \/\/ NET_DEV_PTZ_PARKACTION_CFG 云台守望配置              CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_PTZ_TIME_TASK	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_PTZ_TIME_TASK       = 32, \/\/ NET_DEV_PTZ_TIME_TASK      云台定时任务配置          CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_QUERY	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PARAM_QUERY NET_DEV_PARAM_QUERY;$/;"	t	typeref:struct:_NET_DEV_PARAM_QUERY
NET_DEV_PARAM_RECORD	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_RECORD              = 25, \/\/ NET_DEV_RECORD             录像参数        v1        CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_SERIAL_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_SERIAL_CFG          = 34, \/\/ NET_DEV_SERIAL_CFG         串口参数$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_SERVICECFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_SERVICECFG          = 5,  \/\/ NET_DEV_SERVICECFG         网络服务端口 v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_SMTP_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_SMTP_CFG            = 43, \/\/ NET_DEV_SMTP_CFG           smtp 参数$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_SNAPPIC	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_SNAPPIC             = 26, \/\/ NET_DEV_SNAPPIC            抓拍参数                  CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_TIME	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_TIME                = 3,  \/\/ NET_DEV_TIME_EX            系统时间信息 v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_UPNP_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_UPNP_CFG            = 44, \/\/ NET_DEV_UPNP_CFG           upnp 参数$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_USER_ADD	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_USER_ADD            = 8,  \/\/ NET_DEV_USER_INFO          增加用户(带权限)   v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_USER_DEL	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_USER_DEL            = 9,  \/\/ NET_DEV_USER               删除用户(用户名称) v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_USER_QUERY	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_USER_QUERY          = 6,  \/\/ NET_DEV_USERSET            用户信息查询 v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_VENC_OSD	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_VENC_OSD            = 15, \/\/ NET_DEV_VENC_OSD           OSD参数                   CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_VENC_OVERLAY	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_VENC_OVERLAY        = 14, \/\/ NET_DEV_VENC_OVERLAY       遮挡参数                  CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_VENC_ROI	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_VENC_ROI            = 16, \/\/ NET_DEV_ROI                感兴趣区域编码            CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_VERSION	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_VERSION             = 1,  \/\/ NET_DEV_VERSION            设备出厂信息 v1$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_VIDEOIN_EFFECT	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_VIDEOIN_EFFECT      = 10, \/\/ NET_DEV_VIDEO_INPUT_EFFECT 视频输入参数 v1           CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_VO_CFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_VO_CFG              = 54, \/\/ NET_DEV_VO_CFG             VO参数配置              CHN$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_WIFICFG	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_WIFICFG             = 37, \/\/ NET_DEV_WIFICFG            wifi 配置$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PARAM_WIFI_APSET	NET_DEV_STRUCT.H	/^    NET_DEV_PARAM_WIFI_APSET          = 36, \/\/ NET_DEV_WIFI_APSET         wifi 搜索$/;"	e	enum:_NET_DEV_PARAM_ID
NET_DEV_PASSWORD_LEN	NET_DEV_STRUCT.H	102;"	d
NET_DEV_PEAOSC_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_CFG NET_DEV_PEAOSC_CFG;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_CFG
NET_DEV_PEAOSC_EVENT	NET_DEV_STRUCT.H	/^}NET_DEV_PEAOSC_EVENT;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_EVENT
NET_DEV_PEAOSC_EVENT_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_PEAOSC_EVENT_TYPE;$/;"	t	typeref:enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_LEFT	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_LEFT          = 5,    \/\/物品遗留$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_LOITER	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_LOITER        = 4,    \/\/徘徊$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_MUTITRIPWIRE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_MUTITRIPWIRE  = 2,    \/\/双绊线$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_PERIMETER	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_PERIMETER     = 3,    \/\/警戒区报警$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_TAKE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_TAKE          = 6     \/\/物品丢失$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_TRIPWIRE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_TRIPWIRE      = 1,    \/\/单绊线$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_EVENT_TYPE_UNKNOWN	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_EVENT_TYPE_UNKNOWN       = 0,    \/\/未知事件$/;"	e	enum:_NET_DEV_PEAOSC_EVENT_TYPE
NET_DEV_PEAOSC_FILTER_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_FILTER_RULE NET_DEV_PEAOSC_FILTER_RULE;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_FILTER_RULE
NET_DEV_PEAOSC_RESULT_RULE	NET_DEV_STRUCT.H	/^}NET_DEV_PEAOSC_RESULT_RULE;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_RESULT_RULE
NET_DEV_PEAOSC_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_RULE NET_DEV_PEAOSC_RULE;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_RULE
NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE
NET_DEV_PEAOSC_RULE_LIMIT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_RULE_LIMIT NET_DEV_PEAOSC_RULE_LIMIT;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_RULE_LIMIT
NET_DEV_PEAOSC_RULE_PARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_RULE_PARAM NET_DEV_PEAOSC_RULE_PARAM;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_RULE_PARAM
NET_DEV_PEAOSC_RULE_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_PEAOSC_RULE_TYPE;$/;"	t	typeref:enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_RULE_TYPE_LEFT	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_RULE_TYPE_LEFT          = 4,       \/\/物品遗留检测-->NET_DEV_LEFT_RULE$/;"	e	enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_RULE_TYPE_LOITER	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_RULE_TYPE_LOITER        = 3,       \/\/徘徊,暂不支持$/;"	e	enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_RULE_TYPE_MUTITRIPWIRE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_RULE_TYPE_MUTITRIPWIRE  = 1,       \/\/双绊线,暂不支持$/;"	e	enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_RULE_TYPE_PERIMETER	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_RULE_TYPE_PERIMETER     = 2,       \/\/警戒区-->   NET_DEV_PERIMETER_RULE$/;"	e	enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_RULE_TYPE_TAKE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_RULE_TYPE_TAKE          = 5        \/\/物品丢失检测--> NET_DEV_TAKE_RULE$/;"	e	enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_RULE_TYPE_TRIPWIRE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_RULE_TYPE_TRIPWIRE      = 0,       \/\/单绊线-->   NET_DEV_TRIPWIRE_RULE$/;"	e	enum:_NET_DEV_PEAOSC_RULE_TYPE
NET_DEV_PEAOSC_SIZE_FILTER	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_SIZE_FILTER NET_DEV_PEAOSC_SIZE_FILTER;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_SIZE_FILTER
NET_DEV_PEAOSC_TARGET	NET_DEV_STRUCT.H	/^}NET_DEV_PEAOSC_TARGET;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_TARGET
NET_DEV_PEAOSC_TARGET_FILTER	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_TARGET_FILTER NET_DEV_PEAOSC_TARGET_FILTER;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_TARGET_FILTER
NET_DEV_PEAOSC_TARGET_FILTER_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_PEAOSC_TARGET_FILTER_TYPE;$/;"	t	typeref:enum:_NET_DEV_PEAOSC_TARGET_FILTER_TYPE
NET_DEV_PEAOSC_TARGET_FILTER_TYPE_CARE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_TARGET_FILTER_TYPE_CARE      = 1 \/\/ 汽车$/;"	e	enum:_NET_DEV_PEAOSC_TARGET_FILTER_TYPE
NET_DEV_PEAOSC_TARGET_FILTER_TYPE_PEOPLE	NET_DEV_STRUCT.H	/^  NET_DEV_PEAOSC_TARGET_FILTER_TYPE_PEOPLE    = 0,\/\/ 人$/;"	e	enum:_NET_DEV_PEAOSC_TARGET_FILTER_TYPE
NET_DEV_PEAOSC_TIME_FILTER	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_TIME_FILTER NET_DEV_PEAOSC_TIME_FILTER;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_TIME_FILTER
NET_DEV_PEAOSC_WH_FILTER	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_WH_FILTER NET_DEV_PEAOSC_WH_FILTER;$/;"	t	typeref:struct:_NET_DEV_PEAOSC_WH_FILTER
NET_DEV_PEER	NET_DEV_PU_SDK.H	/^typedef struct _NET_DEV_PEER NET_DEV_PEER;$/;"	t	typeref:struct:_NET_DEV_PEER
NET_DEV_PERIMETER_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PERIMETER_RULE NET_DEV_PERIMETER_RULE;$/;"	t	typeref:struct:_NET_DEV_PERIMETER_RULE
NET_DEV_PF_CHNLSTATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_CHNLSTATE NET_DEV_PF_CHNLSTATE;$/;"	t	typeref:struct:_NET_DEV_PF_CHNLSTATE
NET_DEV_PF_CMSTIME	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_CMSTIME NET_DEV_PF_CMSTIME;$/;"	t	typeref:struct:_NET_DEV_PF_CMSTIME
NET_DEV_PF_GETMDS_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_GETMDS_REQ NET_DEV_PF_GETMDS_REQ;$/;"	t	typeref:struct:_NET_DEV_PF_GETMDS_REQ
NET_DEV_PF_KEEPALIVE_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_KEEPALIVE_RSP NET_DEV_PF_KEEPALIVE_RSP;$/;"	t	typeref:struct:_NET_DEV_PF_KEEPALIVE_RSP
NET_DEV_PF_MDSIP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_MDSIP NET_DEV_PF_MDSIP;$/;"	t	typeref:struct:_NET_DEV_PF_MDSIP
NET_DEV_PF_REGISTER_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_REGISTER_REQ NET_DEV_PF_REGISTER_REQ;$/;"	t	typeref:struct:_NET_DEV_PF_REGISTER_REQ
NET_DEV_PF_REGISTER_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PF_REGISTER_RSP NET_DEV_PF_REGISTER_RSP;$/;"	t	typeref:struct:_NET_DEV_PF_REGISTER_RSP
NET_DEV_PHONENUMBER_LEN	NET_DEV_STRUCT.H	143;"	d
NET_DEV_PHY_DISK	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PHY_DISK NET_DEV_PHY_DISK;$/;"	t	typeref:struct:_NET_DEV_PHY_DISK
NET_DEV_PHY_DISK_INFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PHY_DISK_INFO NET_DEV_PHY_DISK_INFO;$/;"	t	typeref:struct:_NET_DEV_PHY_DISK_INFO
NET_DEV_PIC_COND	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PIC_COND NET_DEV_PIC_COND;$/;"	t	typeref:struct:_NET_DEV_PIC_COND
NET_DEV_PIC_ITEM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PIC_ITEM NET_DEV_PIC_ITEM;$/;"	t	typeref:struct:_NET_DEV_PIC_ITEM
NET_DEV_PIC_QUERY_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PIC_QUERY_REQ NET_DEV_PIC_QUERY_REQ;$/;"	t	typeref:struct:_NET_DEV_PIC_QUERY_REQ
NET_DEV_PIC_QUERY_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PIC_QUERY_RSP NET_DEV_PIC_QUERY_RSP;$/;"	t	typeref:struct:_NET_DEV_PIC_QUERY_RSP
NET_DEV_PIR_ALARM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PIR_ALARM NET_DEV_PIR_ALARM;$/;"	t	typeref:struct:_NET_DEV_PIR_ALARM
NET_DEV_PIX_CAL_END	NET_DEV_STRUCT.H	/^    NET_DEV_PIX_CAL_END     = 0x1,        \/\/坏点检测结束(成功)$/;"	e	enum:_NET_DEV_PIX_CAL_STATE
NET_DEV_PIX_CAL_FAIL	NET_DEV_STRUCT.H	/^    NET_DEV_PIX_CAL_FAIL    = 0x2,        \/\/坏点检测失败$/;"	e	enum:_NET_DEV_PIX_CAL_STATE
NET_DEV_PIX_CAL_START	NET_DEV_STRUCT.H	/^    NET_DEV_PIX_CAL_START   = 0x0,        \/\/坏点检测开始$/;"	e	enum:_NET_DEV_PIX_CAL_STATE
NET_DEV_PIX_CAL_STATE	NET_DEV_STRUCT.H	/^}NET_DEV_PIX_CAL_STATE;$/;"	t	typeref:enum:_NET_DEV_PIX_CAL_STATE
NET_DEV_PIX_CAL_TIMEOUT	NET_DEV_STRUCT.H	/^    NET_DEV_PIX_CAL_TIMEOUT = 0x3,        \/\/坏点检测超时$/;"	e	enum:_NET_DEV_PIX_CAL_STATE
NET_DEV_POINT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_POINT NET_DEV_POINT;$/;"	t	typeref:struct:_NET_DEV_POINT
NET_DEV_POLYGON	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_POLYGON NET_DEV_POLYGON;$/;"	t	typeref:struct:_NET_DEV_POLYGON
NET_DEV_PPPCFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PPPCFG NET_DEV_PPPCFG;$/;"	t	typeref:struct:_NET_DEV_PPPCFG
NET_DEV_PPPDPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PPPDPARAM NET_DEV_PPPDPARAM;$/;"	t	typeref:struct:_NET_DEV_PPPDPARAM
NET_DEV_PPPOECFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PPPOECFG NET_DEV_PPPOECFG;$/;"	t	typeref:struct:_NET_DEV_PPPOECFG
NET_DEV_PROTOL_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_BUTT$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_GB28181	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_GB28181= 0x02,$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_GOOLINK	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_GOOLINK= 0x09,  \/\/浪涛 GOOLINK$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_HH	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_HH     = 0x08,$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_HW	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_HW     = 0x05,  \/\/华为 平台$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_HXHT	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_HXHT   = 0x04,  \/\/互信互通 平台$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_IST_NVR	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_IST_NVR= 0x06,  \/\/IST NVR$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_IST_PF	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_IST_PF = 0x07,  \/\/IST 平台$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_ME	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_ME     = 0x00,$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_ONVIF	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_ONVIF  = 0x01,$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_PROTOL_TYPE;$/;"	t	typeref:enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PROTOL_ZSYH	NET_DEV_STRUCT.H	/^    NET_DEV_PROTOL_ZSYH   = 0x03,  \/\/中盛益华 平台$/;"	e	enum:_NET_DEV_PROTOL_TYPE
NET_DEV_PTZ_3D	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_3D NET_DEV_PTZ_3D;$/;"	t	typeref:struct:_NET_DEV_PTZ_3D
NET_DEV_PTZ_ACTION	NET_DEV_STRUCT.H	/^}NET_DEV_PTZ_ACTION;$/;"	t	typeref:enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_CFG NET_DEV_PTZ_CFG;$/;"	t	typeref:struct:_NET_DEV_PTZ_CFG
NET_DEV_PTZ_CONTROL	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_CONTROL NET_DEV_PTZ_CONTROL;$/;"	t	typeref:struct:_NET_DEV_PTZ_CONTROL
NET_DEV_PTZ_CRUISE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_CRUISE NET_DEV_PTZ_CRUISE;$/;"	t	typeref:struct:_NET_DEV_PTZ_CRUISE
NET_DEV_PTZ_CRUISEPOINT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_CRUISEPOINT NET_DEV_PTZ_CRUISEPOINT;$/;"	t	typeref:struct:_NET_DEV_PTZ_CRUISEPOINT
NET_DEV_PTZ_CRUISEWAY	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_CRUISEWAY NET_DEV_PTZ_CRUISEWAY;$/;"	t	typeref:struct:_NET_DEV_PTZ_CRUISEWAY
NET_DEV_PTZ_CRUISEWAYSET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_CRUISEWAYSET NET_DEV_PTZ_CRUISEWAYSET;$/;"	t	typeref:struct:_NET_DEV_PTZ_CRUISEWAYSET
NET_DEV_PTZ_ID_3D	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_3D          = 25,    \/\/3D控球$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_ADD_FOCUS	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_ADD_FOCUS   = 15,    \/\/远焦点$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_ADD_IRIS	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_ADD_IRIS    = 17,    \/\/光圈+$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_ADD_ZOOM	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_ADD_ZOOM    = 13,    \/\/焦距放大$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_AUTO	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_AUTO        = 1,     \/\/自动$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_DEL_PP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_DEL_PP      = 12,    \/\/删除预置点$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_DOWN	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_DOWN        = 5,     \/\/下$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_LEFT	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_LEFT        = 2,     \/\/左$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_LEFT_DOWN	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_LEFT_DOWN   = 7,     \/\/左下$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_LEFT_LIMIT	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_LEFT_LIMIT  = 26,    \/\/设置左限位$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_LEFT_UP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_LEFT_UP     = 6,     \/\/左上$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_RANDOM	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_RANDOM      = 28,    \/\/随机扫描$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_RIGHT	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_RIGHT       = 3,     \/\/右$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_RIGHT_DOWN	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_RIGHT_DOWN  = 9,     \/\/右下$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_RIGHT_LIMIT	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_RIGHT_LIMIT = 27,    \/\/设置右限位$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_RIGHT_UP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_RIGHT_UP    = 8,     \/\/右上$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_RUN_PTN	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_RUN_PTN     = 29,    \/\/运行轨迹$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_SET_PP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_SET_PP      = 10,    \/\/设置预置点$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_START_CRZ	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_START_CRZ   = 23,    \/\/开始巡航$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_START_PTN	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_START_PTN   = 30,    \/\/开始轨迹录制$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_STOP        = 0,     \/\/停止$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_STOP_CRZ	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_STOP_CRZ    = 24,    \/\/停止巡航$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_STOP_PTN	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_STOP_PTN    = 31,    \/\/停止轨迹录制$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_SUB_FOCUS	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_SUB_FOCUS   = 16,    \/\/近焦点$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_SUB_IRIS	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_SUB_IRIS    = 18,    \/\/光圈-$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_SUB_ZOOM	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_SUB_ZOOM    = 14,    \/\/焦距缩小$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_TURN_OFF	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_TURN_OFF    = 20,    \/\/关闭灯光$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_TURN_ON	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_TURN_ON     = 19,    \/\/开启灯光$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_UP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_UP          = 4,     \/\/上$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_USE_PP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_USE_PP      = 11,    \/\/调用预置点$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_WIPERS_OFF	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_WIPERS_OFF  = 22,    \/\/关闭雨刷$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_ID_WIPERS_ON	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_ID_WIPERS_ON   = 21,    \/\/开启雨刷$/;"	e	enum:_NET_DEV_PTZ_ACTION
NET_DEV_PTZ_JOIN_ACTION_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_PTZ_JOIN_ACTION_TYPE;$/;"	t	typeref:enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
NET_DEV_PTZ_MAX_PTN_NUM	NET_DEV_STRUCT.H	112;"	d
NET_DEV_PTZ_MAX_SPEED	NET_DEV_STRUCT.H	114;"	d
NET_DEV_PTZ_NAME_LEN	NET_DEV_STRUCT.H	108;"	d
NET_DEV_PTZ_PARKACTION_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_PARKACTION_CFG NET_DEV_PTZ_PARKACTION_CFG;$/;"	t	typeref:struct:_NET_DEV_PTZ_PARKACTION_CFG
NET_DEV_PTZ_PATTERN	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_PATTERN NET_DEV_PTZ_PATTERN;$/;"	t	typeref:struct:_NET_DEV_PTZ_PATTERN
NET_DEV_PTZ_PATTERNSET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_PATTERNSET NET_DEV_PTZ_PATTERNSET;$/;"	t	typeref:struct:_NET_DEV_PTZ_PATTERNSET
NET_DEV_PTZ_PRESET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_PRESET NET_DEV_PTZ_PRESET;$/;"	t	typeref:struct:_NET_DEV_PTZ_PRESET
NET_DEV_PTZ_PRESETSET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_PRESETSET NET_DEV_PTZ_PRESETSET;$/;"	t	typeref:struct:_NET_DEV_PTZ_PRESETSET
NET_DEV_PTZ_PROTOL	NET_DEV_STRUCT.H	/^}NET_DEV_PTZ_PROTOL;$/;"	t	typeref:enum:_NET_DEV_PTZ_PROTOL
NET_DEV_PTZ_PROTOL_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_PROTOL_BUTT$/;"	e	enum:_NET_DEV_PTZ_PROTOL
NET_DEV_PTZ_PROTOL_PELCOD	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_PROTOL_PELCOD = 0,$/;"	e	enum:_NET_DEV_PTZ_PROTOL
NET_DEV_PTZ_PROTOL_PELCOP	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_PROTOL_PELCOP = 1,$/;"	e	enum:_NET_DEV_PTZ_PROTOL
NET_DEV_PTZ_SCHEDTASK	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_SCHEDTASK NET_DEV_PTZ_SCHEDTASK;$/;"	t	typeref:struct:_NET_DEV_PTZ_SCHEDTASK
NET_DEV_PTZ_SCHTASKS_NUM	NET_DEV_STRUCT.H	113;"	d
NET_DEV_PTZ_TIME_TASK	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PTZ_TIME_TASK NET_DEV_PTZ_TIME_TASK;$/;"	t	typeref:struct:_NET_DEV_PTZ_TIME_TASK
NET_DEV_QOSPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_QOSPARAM NET_DEV_QOSPARAM;$/;"	t	typeref:struct:_NET_DEV_QOSPARAM
NET_DEV_RECORD	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECORD NET_DEV_RECORD;$/;"	t	typeref:struct:_NET_DEV_RECORD
NET_DEV_RECORD_ALARM	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_ALARM      = 2,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_ALL	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_ALL        = 0xffffffff$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_COND	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECORD_COND NET_DEV_RECORD_COND;$/;"	t	typeref:struct:_NET_DEV_RECORD_COND
NET_DEV_RECORD_DETAIL_ITEM	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_DETAIL_ITEM    = 0,$/;"	e	enum:_NET_DEV_RECORD_DETAIL_TYPE
NET_DEV_RECORD_DETAIL_OUTLINE	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_DETAIL_OUTLINE$/;"	e	enum:_NET_DEV_RECORD_DETAIL_TYPE
NET_DEV_RECORD_DETAIL_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_RECORD_DETAIL_TYPE;$/;"	t	typeref:enum:_NET_DEV_RECORD_DETAIL_TYPE
NET_DEV_RECORD_HIDE	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_HIDE       = 6,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_ITEM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECORD_ITEM NET_DEV_RECORD_ITEM;$/;"	t	typeref:struct:_NET_DEV_RECORD_ITEM
NET_DEV_RECORD_LOST	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_LOST       = 5,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_MANUAL	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_MANUAL     = 4,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_MOTION	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_MOTION     = 3,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_NET_FAULT	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_NET_FAULT  = 7,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_OUTLINE_ITEM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECORD_OUTLINE_ITEM NET_DEV_RECORD_OUTLINE_ITEM;$/;"	t	typeref:struct:_NET_DEV_RECORD_OUTLINE_ITEM
NET_DEV_RECORD_QUERY_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECORD_QUERY_REQ NET_DEV_RECORD_QUERY_REQ;$/;"	t	typeref:struct:_NET_DEV_RECORD_QUERY_REQ
NET_DEV_RECORD_QUERY_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECORD_QUERY_RSP NET_DEV_RECORD_QUERY_RSP;$/;"	t	typeref:struct:_NET_DEV_RECORD_QUERY_RSP
NET_DEV_RECORD_TIMER	NET_DEV_STRUCT.H	/^    NET_DEV_RECORD_TIMER      = 1,$/;"	e	enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECORD_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_RECORD_TYPE;$/;"	t	typeref:enum:_NET_DEV_RECORD_TYPE
NET_DEV_RECT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_RECT NET_DEV_RECT;$/;"	t	typeref:struct:_NET_DEV_RECT
NET_DEV_REC_PLOLICY_AUTO	NET_DEV_STRUCT.H	/^    NET_DEV_REC_PLOLICY_AUTO = 1$/;"	e	enum:_NET_DEV_REC_POLICY
NET_DEV_REC_PLOLICY_STOP	NET_DEV_STRUCT.H	/^    NET_DEV_REC_PLOLICY_STOP = 0,$/;"	e	enum:_NET_DEV_REC_POLICY
NET_DEV_REC_POLICY	NET_DEV_STRUCT.H	/^}NET_DEV_REC_POLICY;$/;"	t	typeref:enum:_NET_DEV_REC_POLICY
NET_DEV_REC_PROPERTY_SIZE	NET_DEV_STRUCT.H	126;"	d
NET_DEV_REMOTE_CHANNEL	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_REMOTE_CHANNEL NET_DEV_REMOTE_CHANNEL;$/;"	t	typeref:struct:_NET_DEV_REMOTE_CHANNEL
NET_DEV_REMOTE_DEVICE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_REMOTE_DEVICE NET_DEV_REMOTE_DEVICE;$/;"	t	typeref:struct:_NET_DEV_REMOTE_DEVICE
NET_DEV_REMOTE_RTSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_REMOTE_RTSP NET_DEV_REMOTE_RTSP;$/;"	t	typeref:struct:_NET_DEV_REMOTE_RTSP
NET_DEV_RESTART_DEVICE	NET_DEV_STRUCT.H	/^    NET_DEV_RESTART_DEVICE          = 0x02,        \/\/设备重启$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_RESTORE_DEFAULT	NET_DEV_STRUCT.H	/^    NET_DEV_RESTORE_DEFAULT         = 0x03,        \/\/恢复出厂默认$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_ROI	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_ROI NET_DEV_ROI;$/;"	t	typeref:struct:_NET_DEV_ROI
NET_DEV_SADPCMSINFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SADPCMSINFO NET_DEV_SADPCMSINFO;$/;"	t	typeref:struct:_NET_DEV_SADPCMSINFO
NET_DEV_SADPINFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SADPINFO NET_DEV_SADPINFO;$/;"	t	typeref:struct:_NET_DEV_SADPINFO
NET_DEV_SADPINFO_HTON	sadp_pu_api.h	76;"	d
NET_DEV_SADPINFO_NTOH	sadp_pu_api.h	83;"	d
NET_DEV_SADP_ID_LEN	NET_DEV_STRUCT.H	85;"	d
NET_DEV_SATURDAY	NET_DEV_STRUCT.H	/^    NET_DEV_SATURDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_SCENE_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_SCENE_TYPE;$/;"	t	typeref:enum:_NET_DEV_SCENE_TYPE
NET_DEV_SCENE_TYPE_INDOOR	NET_DEV_STRUCT.H	/^  NET_DEV_SCENE_TYPE_INDOOR  = 0,     \/\/ 室内场景$/;"	e	enum:_NET_DEV_SCENE_TYPE
NET_DEV_SCENE_TYPE_OUTDOOR	NET_DEV_STRUCT.H	/^  NET_DEV_SCENE_TYPE_OUTDOOR = 1      \/\/ 室外场景$/;"	e	enum:_NET_DEV_SCENE_TYPE
NET_DEV_SDK_FUNCS	NET_DEV_PU_SDK.H	/^typedef struct _NET_DEV_SDK_FUNCS NET_DEV_SDK_FUNCS;$/;"	t	typeref:struct:_NET_DEV_SDK_FUNCS
NET_DEV_SDK_VER_DEVEL	NET_DEV_PU_SDK.H	13;"	d
NET_DEV_SDK_VER_MAJOR	NET_DEV_PU_SDK.H	11;"	d
NET_DEV_SDK_VER_MINOR	NET_DEV_PU_SDK.H	12;"	d
NET_DEV_SDK_VER_OEMNO	NET_DEV_PU_SDK.H	10;"	d
NET_DEV_SERIAL_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SERIAL_CFG NET_DEV_SERIAL_CFG;$/;"	t	typeref:struct:_NET_DEV_SERIAL_CFG
NET_DEV_SERIAL_NO_LEN	NET_DEV_STRUCT.H	89;"	d
NET_DEV_SERVICECFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SERVICECFG NET_DEV_SERVICECFG;$/;"	t	typeref:struct:_NET_DEV_SERVICECFG
NET_DEV_SERVICECFG_HTON	sadp_pu_api.h	60;"	d
NET_DEV_SERVICECFG_NTOH	sadp_pu_api.h	67;"	d
NET_DEV_SHUTDOWN_DEVICE	NET_DEV_STRUCT.H	/^    NET_DEV_SHUTDOWN_DEVICE         = 0x01,        \/\/设备关机$/;"	e	enum:_NET_DEV_CONTROL_TYPE
NET_DEV_SMTP_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SMTP_CFG NET_DEV_SMTP_CFG;$/;"	t	typeref:struct:_NET_DEV_SMTP_CFG
NET_DEV_SNAPPIC	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SNAPPIC NET_DEV_SNAPPIC;$/;"	t	typeref:struct:_NET_DEV_SNAPPIC
NET_DEV_SNAPPIC_ALARMPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SNAPPIC_ALARMPARAM NET_DEV_SNAPPIC_ALARMPARAM;$/;"	t	typeref:struct:_NET_DEV_SNAPPIC_ALARMPARAM
NET_DEV_SNAPPIC_TIMERPARAM	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_SNAPPIC_TIMERPARAM NET_DEV_SNAPPIC_TIMERPARAM;$/;"	t	typeref:struct:_NET_DEV_SNAPPIC_TIMERPARAM
NET_DEV_STATE_CHANNNEL	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_CHANNNEL  = 5,    \/\/NET_DEV_CHANNSTATE$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_DISK	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_DISK      = 2,    \/\/NET_DEV_DISKSTATES$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_IDX	NET_DEV_STRUCT.H	/^}NET_DEV_STATE_IDX;$/;"	t	typeref:enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_IRIS_CAL	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_IRIS_CAL  = 4,    \/\/NET_DEV_IRIS_CAL_STATE$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_NETWORK	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_NETWORK   = 0,    \/\/NET_DEV_NETSTATES$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_PIX_CAL	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_PIX_CAL   = 3,    \/\/NET_DEV_PIX_CAL_STATE$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_QUERY_REQ	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_STATE_QUERY_REQ NET_DEV_STATE_QUERY_REQ;$/;"	t	typeref:struct:_NET_DEV_STATE_QUERY_REQ
NET_DEV_STATE_QUERY_RSP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_STATE_QUERY_RSP NET_DEV_STATE_QUERY_RSP;$/;"	t	typeref:struct:_NET_DEV_STATE_QUERY_RSP
NET_DEV_STATE_UPNP	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_UPNP      = 1,    \/\/NET_DEV_UPNP_STATE$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STATE_WORKS	NET_DEV_STRUCT.H	/^    NET_DEV_STATE_WORKS     = 6,    \/\/NET_DEV_WORKSTATE$/;"	e	enum:_NET_DEV_STATE_IDX
NET_DEV_STREAM_MAIN	NET_DEV_STRUCT.H	/^    NET_DEV_STREAM_MAIN = 0,$/;"	e	enum:_NET_DEV_STREAM_TYPE
NET_DEV_STREAM_MIX_AV	NET_DEV_STRUCT.H	/^    NET_DEV_STREAM_MIX_AV$/;"	e	enum:_NET_DEV_STREAM_MIX_TYPE
NET_DEV_STREAM_MIX_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_STREAM_MIX_TYPE;$/;"	t	typeref:enum:_NET_DEV_STREAM_MIX_TYPE
NET_DEV_STREAM_MIX_VIDEO	NET_DEV_STRUCT.H	/^    NET_DEV_STREAM_MIX_VIDEO = 0,$/;"	e	enum:_NET_DEV_STREAM_MIX_TYPE
NET_DEV_STREAM_SECOND	NET_DEV_STRUCT.H	/^    NET_DEV_STREAM_SECOND,$/;"	e	enum:_NET_DEV_STREAM_TYPE
NET_DEV_STREAM_THIRD	NET_DEV_STRUCT.H	/^    NET_DEV_STREAM_THIRD$/;"	e	enum:_NET_DEV_STREAM_TYPE
NET_DEV_STREAM_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_STREAM_TYPE;$/;"	t	typeref:enum:_NET_DEV_STREAM_TYPE
NET_DEV_SUNDAY	NET_DEV_STRUCT.H	/^    NET_DEV_SUNDAY=0,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_SYS_CAP	NET_DEV_STRUCT.H	/^}NET_DEV_SYS_CAP;$/;"	t	typeref:enum:_NET_DEV_SYS_CAP
NET_DEV_TAKE_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_TAKE_RULE NET_DEV_TAKE_RULE;$/;"	t	typeref:struct:_NET_DEV_TAKE_RULE
NET_DEV_THURSDAY	NET_DEV_STRUCT.H	/^    NET_DEV_THURSDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_TIMESEG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_TIMESEG NET_DEV_TIMESEG;$/;"	t	typeref:struct:_NET_DEV_TIMESEG
NET_DEV_TIME_EX	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_TIME_EX NET_DEV_TIME_EX;$/;"	t	typeref:struct:_NET_DEV_TIME_EX
NET_DEV_TRANSPROTOL	NET_DEV_STRUCT.H	/^}NET_DEV_TRANSPROTOL;$/;"	t	typeref:enum:_NET_DEV_TRANSPROTOL
NET_DEV_TRANS_TCP	NET_DEV_STRUCT.H	/^    NET_DEV_TRANS_TCP=0,$/;"	e	enum:_NET_DEV_TRANSPROTOL
NET_DEV_TRANS_UDP	NET_DEV_STRUCT.H	/^    NET_DEV_TRANS_UDP$/;"	e	enum:_NET_DEV_TRANSPROTOL
NET_DEV_TRIPWIRE_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_TRIPWIRE_RULE NET_DEV_TRIPWIRE_RULE;$/;"	t	typeref:struct:_NET_DEV_TRIPWIRE_RULE
NET_DEV_TUESDAY	NET_DEV_STRUCT.H	/^    NET_DEV_TUESDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_TYPE;$/;"	t	typeref:enum:_NET_DEV_TYPE
NET_DEV_TYPE_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_BUTT$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_DEC	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_DEC      = 0x03,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_DVR	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_DVR      = 0x00,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_ENC	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_ENC      = 0x07,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_INTEG	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_INTEG    = 0x05,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_IPC	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_IPC      = 0x02,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_IPDOME	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_IPDOME   = 0x04,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_NETINTEG	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_NETINTEG = 0x06,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_TYPE_NVR	NET_DEV_STRUCT.H	/^    NET_DEV_TYPE_NVR      = 0x01,$/;"	e	enum:_NET_DEV_TYPE
NET_DEV_UPGRADE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_UPGRADE NET_DEV_UPGRADE;$/;"	t	typeref:struct:_NET_DEV_UPGRADE
NET_DEV_UPGRADE_HDR_SIZE	NET_DEV_STRUCT.H	140;"	d
NET_DEV_UPGRADE_PROGRESS	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_UPGRADE_PROGRESS NET_DEV_UPGRADE_PROGRESS;$/;"	t	typeref:struct:_NET_DEV_UPGRADE_PROGRESS
NET_DEV_UPNP_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_UPNP_CFG NET_DEV_UPNP_CFG;$/;"	t	typeref:struct:_NET_DEV_UPNP_CFG
NET_DEV_UPNP_PORT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_UPNP_PORT NET_DEV_UPNP_PORT;$/;"	t	typeref:struct:_NET_DEV_UPNP_PORT
NET_DEV_UPNP_PORT_STATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_UPNP_PORT_STATE NET_DEV_UPNP_PORT_STATE;$/;"	t	typeref:struct:_NET_DEV_UPNP_PORT_STATE
NET_DEV_UPNP_STATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_UPNP_STATE NET_DEV_UPNP_STATE;$/;"	t	typeref:struct:_NET_DEV_UPNP_STATE
NET_DEV_USER	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_USER NET_DEV_USER;$/;"	t	typeref:struct:_NET_DEV_USER
NET_DEV_USERNAME_LEN	NET_DEV_STRUCT.H	101;"	d
NET_DEV_USERSET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_USERSET NET_DEV_USERSET;$/;"	t	typeref:struct:_NET_DEV_USERSET
NET_DEV_USER_INFO	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_USER_INFO NET_DEV_USER_INFO;$/;"	t	typeref:struct:_NET_DEV_USER_INFO
NET_DEV_USER_LOCALRIGHT	NET_DEV_STRUCT.H	/^}NET_DEV_USER_LOCALRIGHT;$/;"	t	typeref:enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_ADVANCED	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_ADVANCED,   \/*本地高级操作(升级，格式化)*\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_BACKUP	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_BACKUP,     \/*本地备份 *\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_CHANNEL	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_CHANNEL,    \/*本地管理模拟和IP camera *\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_LOG_STATE	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_LOG_STATE,  \/*本地查看状态、日志*\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_PARAM_GET	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_PARAM_GET,  \/*本地查看参数 *\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_PARAM_SET	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_PARAM_SET,  \/*本地设置参数*\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_POWEROFF	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_POWEROFF,   \/*本地关机\/重启 *\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_PTZ_CTL	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_PTZ_CTL = 0,\/*本地控制云台*\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_REC_MANUL	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_REC_MANUL,  \/*本地手动录象*\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_LR_REC_PLAY	NET_DEV_STRUCT.H	/^    NET_DEV_USER_LR_REC_PLAY,   \/*本地回放*\/$/;"	e	enum:_NET_DEV_USER_LOCALRIGHT
NET_DEV_USER_MODIFY	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_USER_MODIFY NET_DEV_USER_MODIFY;$/;"	t	typeref:struct:_NET_DEV_USER_MODIFY
NET_DEV_USER_REMOTERIGHT	NET_DEV_STRUCT.H	/^}NET_DEV_USER_REMOTERIGHT;$/;"	t	typeref:enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_ADVANCED	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_ADVANCED,   \/*远程高级操作(升级，格式化)*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_ALARMOUT	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_ALARMOUT,   \/*远程请求报警上传、报警输出*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_CHANNEL	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_CHANNEL,    \/*远程管理模拟和IP camera *\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_LOG_STATE	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_LOG_STATE,  \/*远程查看状态、日志*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_PARAM_GET	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_PARAM_GET,  \/*远程查看参数 *\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_PARAM_SET	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_PARAM_SET,  \/*远程设置参数*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_POWEROFF	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_POWEROFF,   \/*远程关机\/重启 *\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_PTZ_CTL	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_PTZ_CTL = 0,\/*远程控制云台*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_REAL_PLAY	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_REAL_PLAY,  \/*远程预览*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_REAL_TALK	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_REAL_TALK,  \/*远程发起语音对讲*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_REC_MANUL	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_REC_MANUL,  \/*远程手动录象*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_REC_PLAY	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_REC_PLAY,   \/*远程回放 *\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_RS232_TRNS	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_RS232_TRNS, \/*远程控制串口*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_USER_RR_VIDEOOUT	NET_DEV_STRUCT.H	/^    NET_DEV_USER_RR_VIDEOOUT,   \/*远程控制，本地输出*\/$/;"	e	enum:_NET_DEV_USER_REMOTERIGHT
NET_DEV_VENC_BITRATE_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_VENC_BITRATE_TYPE;$/;"	t	typeref:enum:_NET_DEV_VENC_BITRATE_TYPE
NET_DEV_VENC_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_BUTT$/;"	e	enum:_NET_DEV_VENC_TYPE
NET_DEV_VENC_H264	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_H264   = 0x00,$/;"	e	enum:_NET_DEV_VENC_TYPE
NET_DEV_VENC_H265	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_H265   = 0x04,$/;"	e	enum:_NET_DEV_VENC_TYPE
NET_DEV_VENC_JPEG	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_JPEG   = 0x02,$/;"	e	enum:_NET_DEV_VENC_TYPE
NET_DEV_VENC_MJPEG	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_MJPEG  = 0x01,$/;"	e	enum:_NET_DEV_VENC_TYPE
NET_DEV_VENC_MPEG4	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_MPEG4  = 0x03,$/;"	e	enum:_NET_DEV_VENC_TYPE
NET_DEV_VENC_OSD	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VENC_OSD NET_DEV_VENC_OSD;$/;"	t	typeref:struct:_NET_DEV_VENC_OSD
NET_DEV_VENC_OSD_TEXT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VENC_OSD_TEXT NET_DEV_VENC_OSD_TEXT;$/;"	t	typeref:struct:_NET_DEV_VENC_OSD_TEXT
NET_DEV_VENC_OVERLAY	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VENC_OVERLAY NET_DEV_VENC_OVERLAY;$/;"	t	typeref:struct:_NET_DEV_VENC_OVERLAY
NET_DEV_VENC_TYPE	NET_DEV_STRUCT.H	/^}NET_DEV_VENC_TYPE;$/;"	t	typeref:enum:_NET_DEV_VENC_TYPE
NET_DEV_VERSION	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VERSION NET_DEV_VERSION;$/;"	t	typeref:struct:_NET_DEV_VERSION
NET_DEV_VERSION_LEN	NET_DEV_STRUCT.H	87;"	d
NET_DEV_VF_NTSC	NET_DEV_STRUCT.H	/^    NET_DEV_VF_NTSC$/;"	e	enum:_NET_DEV_VIDEOFORMAT
NET_DEV_VF_PAL	NET_DEV_STRUCT.H	/^    NET_DEV_VF_PAL = 0,$/;"	e	enum:_NET_DEV_VIDEOFORMAT
NET_DEV_VIDEOFORMAT	NET_DEV_STRUCT.H	/^}NET_DEV_VIDEOFORMAT;$/;"	t	typeref:enum:_NET_DEV_VIDEOFORMAT
NET_DEV_VIDEOMODE	NET_DEV_STRUCT.H	/^}NET_DEV_VIDEOMODE;$/;"	t	typeref:enum:_NET_DEV_VIDEOMODE
NET_DEV_VIDEOMODE_NTSC	NET_DEV_STRUCT.H	/^    NET_DEV_VIDEOMODE_NTSC= 1$/;"	e	enum:_NET_DEV_VIDEOMODE
NET_DEV_VIDEOMODE_PAL	NET_DEV_STRUCT.H	/^    NET_DEV_VIDEOMODE_PAL = 0,$/;"	e	enum:_NET_DEV_VIDEOMODE
NET_DEV_VIDEOOUT	NET_DEV_STRUCT.H	/^}NET_DEV_VIDEOOUT;$/;"	t	typeref:enum:_NET_DEV_VIDEOOUT
NET_DEV_VIDEOOUT_CVBS	NET_DEV_STRUCT.H	/^    NET_DEV_VIDEOOUT_CVBS = 0,$/;"	e	enum:_NET_DEV_VIDEOOUT
NET_DEV_VIDEOOUT_HDMI	NET_DEV_STRUCT.H	/^    NET_DEV_VIDEOOUT_HDMI = 2$/;"	e	enum:_NET_DEV_VIDEOOUT
NET_DEV_VIDEOOUT_VGA	NET_DEV_STRUCT.H	/^    NET_DEV_VIDEOOUT_VGA  = 1,$/;"	e	enum:_NET_DEV_VIDEOOUT
NET_DEV_VIDEO_EFFECT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VIDEO_EFFECT NET_DEV_VIDEO_EFFECT;$/;"	t	typeref:struct:_NET_DEV_VIDEO_EFFECT
NET_DEV_VIDEO_INPUT_EFFECT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VIDEO_INPUT_EFFECT NET_DEV_VIDEO_INPUT_EFFECT;$/;"	t	typeref:struct:_NET_DEV_VIDEO_INPUT_EFFECT
NET_DEV_VOUT_1024x768_60	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_1024x768_60 = 0,  \/\/ 1024x768    60HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_1080P_50	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_1080P_50,     \/\/ 1920x1080   50HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_1080P_60	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_1080P_60,     \/\/ 1920x1080   60HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_1280x1024_60	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_1280x1024_60, \/\/ 1280x1024   60HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_1440x900_60	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_1440x900_60,  \/\/ 1440x900    60HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_720P_50	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_720P_50,      \/\/ 1280x720    50HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_720P_60	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_720P_60,      \/\/ 1280x720    60HZ$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_VOUT_BUTT$/;"	e	enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VOUT_RESOLUTION	NET_DEV_STRUCT.H	/^}NET_DEV_VOUT_RESOLUTION;$/;"	t	typeref:enum:_NET_DEV_VOUT_RESOLUTION
NET_DEV_VO_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_VO_CFG NET_DEV_VO_CFG;$/;"	t	typeref:struct:_NET_DEV_VO_CFG
NET_DEV_VO_INTF_1024x768_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1024x768_60   = 0x00,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_1080P_50	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1080P_50      = 0x03,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_1080P_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1080P_60      = 0x05,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_1280x1024_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1280x1024_60  = 0x02,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_1280x800_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1280x800_60   = 0x08,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_1366x768_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1366x768_60   = 0x07,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_1440x900_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_1440x900_60   = 0x06,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_720P_50	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_720P_50       = 0x01,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_720P_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_720P_60       = 0x04,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_800x600_60	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_800x600_60    = 0x09,$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_VO_INTF_BUTT$/;"	e	enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_VO_INTF_SYNC	NET_DEV_STRUCT.H	/^}NET_DEV_VO_INTF_SYNC;$/;"	t	typeref:enum:_NET_DEV_VO_INTF_SYNC
NET_DEV_WEDNESDAY	NET_DEV_STRUCT.H	/^    NET_DEV_WEDNESDAY,$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_WEEK	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WEEK NET_DEV_WEEK;$/;"	t	typeref:struct:_NET_DEV_WEEK
NET_DEV_WEEKDAY	NET_DEV_STRUCT.H	/^}NET_DEV_WEEKDAY;$/;"	t	typeref:enum:_NET_DEV_WEEKDAY
NET_DEV_WEEKDAY_BUTT	NET_DEV_STRUCT.H	/^    NET_DEV_WEEKDAY_BUTT$/;"	e	enum:_NET_DEV_WEEKDAY
NET_DEV_WIFICFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFICFG NET_DEV_WIFICFG;$/;"	t	typeref:struct:_NET_DEV_WIFICFG
NET_DEV_WIFINIC	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFINIC NET_DEV_WIFINIC;$/;"	t	typeref:struct:_NET_DEV_WIFINIC
NET_DEV_WIFINIC_HTON	sadp_pu_api.h	52;"	d
NET_DEV_WIFINIC_NTOH	sadp_pu_api.h	56;"	d
NET_DEV_WIFISECURITY	NET_DEV_STRUCT.H	/^}NET_DEV_WIFISECURITY;$/;"	t	typeref:enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFIS_NONE	NET_DEV_STRUCT.H	/^    NET_DEV_WIFIS_NONE = 0,$/;"	e	enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFIS_WEP	NET_DEV_STRUCT.H	/^    NET_DEV_WIFIS_WEP,$/;"	e	enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFIS_WPA2_EAP	NET_DEV_STRUCT.H	/^    NET_DEV_WIFIS_WPA2_EAP,$/;"	e	enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFIS_WPA2_PSK	NET_DEV_STRUCT.H	/^    NET_DEV_WIFIS_WPA2_PSK,$/;"	e	enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFIS_WPA_EAP	NET_DEV_STRUCT.H	/^    NET_DEV_WIFIS_WPA_EAP,$/;"	e	enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFIS_WPA_PSK	NET_DEV_STRUCT.H	/^    NET_DEV_WIFIS_WPA_PSK,$/;"	e	enum:_NET_DEV_WIFISECURITY
NET_DEV_WIFI_AP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFI_AP NET_DEV_WIFI_AP;$/;"	t	typeref:struct:_NET_DEV_WIFI_AP
NET_DEV_WIFI_APSET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFI_APSET NET_DEV_WIFI_APSET;$/;"	t	typeref:struct:_NET_DEV_WIFI_APSET
NET_DEV_WIFI_ESSID_LEN	NET_DEV_STRUCT.H	132;"	d
NET_DEV_WIFI_KEY_LEN	NET_DEV_STRUCT.H	133;"	d
NET_DEV_WIFI_WEP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFI_WEP NET_DEV_WIFI_WEP;$/;"	t	typeref:struct:_NET_DEV_WIFI_WEP
NET_DEV_WIFI_WEP_AUTH	NET_DEV_STRUCT.H	/^}NET_DEV_WIFI_WEP_AUTH;$/;"	t	typeref:enum:_NET_DEV_WIFI_WEP_AUTH
NET_DEV_WIFI_WEP_OPEN	NET_DEV_STRUCT.H	/^    NET_DEV_WIFI_WEP_OPEN   = 0,$/;"	e	enum:_NET_DEV_WIFI_WEP_AUTH
NET_DEV_WIFI_WEP_SHARED	NET_DEV_STRUCT.H	/^    NET_DEV_WIFI_WEP_SHARED$/;"	e	enum:_NET_DEV_WIFI_WEP_AUTH
NET_DEV_WIFI_WPAEAP	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFI_WPAEAP NET_DEV_WIFI_WPAEAP;$/;"	t	typeref:struct:_NET_DEV_WIFI_WPAEAP
NET_DEV_WIFI_WPAPSK	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFI_WPAPSK NET_DEV_WIFI_WPAPSK;$/;"	t	typeref:struct:_NET_DEV_WIFI_WPAPSK
NET_DEV_WIFI_WPAPSK_AES	NET_DEV_STRUCT.H	/^    NET_DEV_WIFI_WPAPSK_AES = 0,$/;"	e	enum:_NET_DEV_WIFI_WPAPSK_ET
NET_DEV_WIFI_WPAPSK_ET	NET_DEV_STRUCT.H	/^}NET_DEV_WIFI_WPAPSK_ET;$/;"	t	typeref:enum:_NET_DEV_WIFI_WPAPSK_ET
NET_DEV_WIFI_WPAPSK_TKIP	NET_DEV_STRUCT.H	/^    NET_DEV_WIFI_WPAPSK_TKIP$/;"	e	enum:_NET_DEV_WIFI_WPAPSK_ET
NET_DEV_WIFI_WPS	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WIFI_WPS NET_DEV_WIFI_WPS;$/;"	t	typeref:struct:_NET_DEV_WIFI_WPS
NET_DEV_WORKSTATE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WORKSTATE NET_DEV_WORKSTATE;$/;"	t	typeref:struct:_NET_DEV_WORKSTATE
NET_DEV_WSX_CFG	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_WSX_CFG NET_DEV_WSX_CFG;$/;"	t	typeref:struct:_NET_DEV_WSX_CFG
NET_HOST_NAME_LEN	NET_DEV_PU_SDK.H	6;"	d
NET_PEER_IP_LEN	NET_DEV_PU_SDK.H	5;"	d
NET_PEER_NAME_LEN	NET_DEV_PU_SDK.H	4;"	d
NICCount	NET_DEV_STRUCT.H	/^    BYTE NICCount;		\/\/设备支持的以太网卡个数(只读)$/;"	m	struct:_NET_DEV_ETHCFG
NICUsed	NET_DEV_STRUCT.H	/^    DWORD NICUsed;		\/\/拨号使用的网卡序号,NET_DEV_NIC_IDX$/;"	m	struct:_NET_DEV_PPPOECFG
NM	curl/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	curl/Makefile	/^NMEDIT = $/;"	m
NORMAL	BaseType.h	133;"	d
NORMAL_INSTALL	curl/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	curl/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NROFF	curl/Makefile	/^NROFF = \/usr\/bin\/nroff$/;"	m
NSS_LIBS	curl/Makefile	/^NSS_LIBS = $/;"	m
NTPServer	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR NTPServer;		\/\/NTP服务器$/;"	m	struct:_NET_DEV_NTPCFG
NULL	NET_DEV_STRUCT.H	42;"	d
NUM_AUDIO_ENCODERS	main.c	/^    NUM_AUDIO_ENCODERS$/;"	e	enum:__anon46	file:
NUM_VIDEO_ENCODERS	main.c	/^    NUM_VIDEO_ENCODERS$/;"	e	enum:__anon45	file:
Nal	NET_DEV_STRUCT.H	/^    }Nal[0];$/;"	m	struct:_NET_DEV_MEDIA_NALDESC	typeref:struct:_NET_DEV_MEDIA_NALDESC::_NAL
NalDesc	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_NALDESC *NalDesc;   \/*视频帧NAL描述*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAME
NalNum	NET_DEV_STRUCT.H	/^    DWORD NalNum;                       \/*NAL个数*\/$/;"	m	struct:_NET_DEV_MEDIA_NALDESC
NalOffset	NET_DEV_STRUCT.H	/^        DWORD NalOffset;                \/*NAL地址*\/$/;"	m	struct:_NET_DEV_MEDIA_NALDESC::_NAL
NalSize	NET_DEV_STRUCT.H	/^        DWORD NalSize;                  \/*NAL大小*\/$/;"	m	struct:_NET_DEV_MEDIA_NALDESC::_NAL
Name	NET_DEV_PU_SDK.H	/^    char Name[NET_PEER_NAME_LEN];$/;"	m	struct:_NET_DEV_PEER
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_ALARM_NAME_LEN];		\/\/ 名称$/;"	m	struct:_NET_DEV_ALARMOUTCFG
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_ALARM_NAME_LEN];$/;"	m	struct:_NET_DEV_ALARMIN_ALARM
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_CHANN_NAME_LEN];		\/\/通道名称$/;"	m	struct:_NET_DEV_NVR_CHANNEL
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_DEC_NAME_LEN];		\/\/巡回或群组的名称（单步没有名称）$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_DEC_NAME_LEN];$/;"	m	struct:_NET_DEV_DEC_DIVMODE
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_MAX_IVS_NAME_LEN];		\/\/规则名称$/;"	m	struct:_NET_DEV_PEAOSC_RULE
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_PTZ_NAME_LEN];$/;"	m	struct:_NET_DEV_PTZ_CRUISE
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_PTZ_NAME_LEN];$/;"	m	struct:_NET_DEV_PTZ_PATTERN
Name	NET_DEV_STRUCT.H	/^    CHAR Name[NET_DEV_PTZ_NAME_LEN];$/;"	m	struct:_NET_DEV_PTZ_PRESET
NatExternalIp	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR NatExternalIp;		\/\/映射后的外部地址$/;"	m	struct:_NET_DEV_UPNP_STATE
NatInternalIp	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR NatInternalIp;		\/\/NAT路由器LAN IP地址$/;"	m	struct:_NET_DEV_UPNP_STATE
NatMode	NET_DEV_STRUCT.H	/^    WORD NatMode;		\/\/0:固定映射 1:自动映射$/;"	m	struct:_NET_DEV_UPNP_CFG
NetDiskAddr	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR NetDiskAddr;		\/\/ 网络硬盘地址$/;"	m	struct:_NET_DEV_NET_SINGLE_DISK
NetDiskType	NET_DEV_STRUCT.H	/^    BYTE NetDiskType;		\/\/ 网络硬盘类型, 0-NFS(NAS),1-iSCSI$/;"	m	struct:_NET_DEV_NET_SINGLE_DISK
NetState	NET_DEV_STRUCT.H	/^        NET_DEV_NETSTATES NetState;$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
NetState	NET_DEV_STRUCT.H	/^    NET_DEV_NETSTATES NetState;		\/\/ 网络状态$/;"	m	struct:_NET_DEV_WORKSTATE
Netmask	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR Netmask;		\/\/子网掩码$/;"	m	struct:_NET_DEV_NICCFG
NewPassWord	NET_DEV_STRUCT.H	/^    CHAR NewPassWord[NET_DEV_PASSWORD_LEN];		\/\/ 新密码$/;"	m	struct:_NET_DEV_USER_MODIFY
NewUserName	NET_DEV_STRUCT.H	/^    CHAR NewUserName[NET_DEV_USERNAME_LEN];		\/\/ 新用户名$/;"	m	struct:_NET_DEV_USER_MODIFY
NicCfg	NET_DEV_STRUCT.H	/^    NET_DEV_NICCFG NicCfg;		\/\/WIFI地址结构$/;"	m	struct:_NET_DEV_WIFINIC
NicState	NET_DEV_STRUCT.H	/^    BYTE NicState[NET_DEV_NIC_IDX_BUTT];		\/\/NET_DEV_NIC_STATE$/;"	m	struct:_NET_DEV_NETSTATES
No	NET_DEV_STRUCT.H	/^    BYTE No;		\/\/Action 为preset 则为preset no, 为 Action 则为 cruise no, 为自动扫描则无效$/;"	m	struct:_NET_DEV_ALARM_PTZ_ACTION
No	NET_DEV_STRUCT.H	/^    DWORD No;		\/\/分隔序号$/;"	m	struct:_NET_DEV_DEC_DIVINFO
No	NET_DEV_STRUCT.H	/^    DWORD No;		\/\/轨迹号$/;"	m	struct:_NET_DEV_PTZ_PATTERN
No	NET_DEV_STRUCT.H	/^    DWORD No;		\/\/通道号（0-255）$/;"	m	struct:_NET_DEV_NVR_CHANNEL
No	NET_DEV_STRUCT.H	/^    DWORD No;		\/\/巡航号$/;"	m	struct:_NET_DEV_PTZ_CRUISE
No	NET_DEV_STRUCT.H	/^    DWORD No;		\/\/预置位号$/;"	m	struct:_NET_DEV_PTZ_PRESET
No	NET_DEV_STRUCT.H	/^    WORD  No;                           \/*帧序号*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
No	NET_DEV_STRUCT.H	/^    WORD No;		\/\/ 巡航号、预置点号$/;"	m	struct:_NET_DEV_PTZ_PARKACTION_CFG
No	NET_DEV_STRUCT.H	/^    WORD No;		\/\/巡航号、预置点号$/;"	m	struct:_NET_DEV_PTZ_SCHEDTASK
NvrCfg	NET_DEV_STRUCT.H	/^    NET_DEV_NVRCFG NvrCfg;$/;"	m	struct:_NET_DEV_BASECFG
OBJDUMP	curl/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	curl/Makefile	/^OBJEXT = o$/;"	m
OEMID	NET_DEV_STRUCT.H	/^    DWORD OEMID;$/;"	m	struct:_NET_DEV_PF_REGISTER_REQ
OTOOL	curl/Makefile	/^OTOOL = $/;"	m
OTOOL64	curl/Makefile	/^OTOOL64 = $/;"	m
OffLineTime	NET_DEV_STRUCT.H	/^    WORD OffLineTime;		\/\/ auto off line when no connection exist,单位：分钟，范围：5~65535分钟$/;"	m	struct:_NET_DEV_DIALPARAM
OffRecord	NET_DEV_STRUCT.H	/^    BYTE    OffRecord;      \/* 设备掉线录像 0:不启用;  1:启用. *\/$/;"	m	struct:_NET_DEV_WSX_CFG
OffUpload	NET_DEV_STRUCT.H	/^    BYTE    OffUpload;      \/* 设备掉线录像上传 0:不启用;  1:启用. *\/$/;"	m	struct:_NET_DEV_WSX_CFG
OldPassWord	NET_DEV_STRUCT.H	/^    CHAR OldPassWord[NET_DEV_PASSWORD_LEN];		\/\/ 旧用户名$/;"	m	struct:_NET_DEV_USER_MODIFY
OldUserName	NET_DEV_STRUCT.H	/^    CHAR OldUserName[NET_DEV_USERNAME_LEN];		\/\/ 旧用户名$/;"	m	struct:_NET_DEV_USER_MODIFY
OnLine	NET_DEV_STRUCT.H	/^    BYTE  OnLine;     \/* 1:在线  0:不在线 *\/$/;"	m	struct:_NET_DEV_WSX_CFG
Operate	NET_DEV_STRUCT.H	/^    DWORD Operate;		\/\/ 0: 执行格式化， 1：查询格式化进度$/;"	m	struct:_NET_DEV_FORMATDISK_REQ
OsdCount	NET_DEV_STRUCT.H	/^    BYTE OsdCount;		\/\/ OSD个数$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
OutDelay	NET_DEV_STRUCT.H	/^    DWORD OutDelay;		\/\/ 输出保持时间(-1为无限，手动关闭)$/;"	m	struct:_NET_DEV_ALARMOUTCFG
OverlayCount	NET_DEV_STRUCT.H	/^    BYTE OverlayCount;		\/\/ 视频覆盖区域个数$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
P2PLock	BaseType.h	196;"	d
P2PLock	BaseType.h	202;"	d
P2P_DBG	BaseType.h	112;"	d
PACKAGE	curl/Makefile	/^PACKAGE = curl$/;"	m
PACKAGE_BUGREPORT	curl/Makefile	/^PACKAGE_BUGREPORT = a suitable curl mailing list: https:\/\/curl.haxx.se\/mail\/$/;"	m
PACKAGE_NAME	curl/Makefile	/^PACKAGE_NAME = curl$/;"	m
PACKAGE_STRING	curl/Makefile	/^PACKAGE_STRING = curl -$/;"	m
PACKAGE_TARNAME	curl/Makefile	/^PACKAGE_TARNAME = curl$/;"	m
PACKAGE_URL	curl/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	curl/Makefile	/^PACKAGE_VERSION = -$/;"	m
PAN_VER	main.c	90;"	d	file:
PASCAL	BaseType.h	171;"	d
PASCAL	BaseType.h	178;"	d
PATH_SEPARATOR	curl/Makefile	/^PATH_SEPARATOR = :$/;"	m
PData_FIFO	fifolib.h	/^} Data_FIFO,*PData_FIFO;$/;"	t	typeref:struct:data_fifo
PEER_INFO	BaseType.h	101;"	d
PERL	curl/Makefile	/^PERL = \/usr\/bin\/perl$/;"	m
PIN	NET_DEV_STRUCT.H	/^    BYTE PIN[8];$/;"	m	struct:_NET_DEV_WIFI_WPS
PKGADD_NAME	curl/Makefile	/^PKGADD_NAME = curl - a client that groks URLs$/;"	m
PKGADD_PKG	curl/Makefile	/^PKGADD_PKG = HAXXcurl$/;"	m
PKGADD_VENDOR	curl/Makefile	/^PKGADD_VENDOR = curl.haxx.se$/;"	m
PKGCONFIG	curl/Makefile	/^PKGCONFIG = no$/;"	m
PMsg	NET_DEV_PU_SDK.H	/^    int  (*PMsg) (NET_DEV_PEER *Peer, int Chnl, int PID, void *In, void *Out);$/;"	m	struct:_NET_DEV_SDK_FUNCS
PORT	main.c	67;"	d	file:
POST_INSTALL	curl/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	curl/Makefile	/^POST_UNINSTALL = :$/;"	m
PPPMode	NET_DEV_STRUCT.H	/^    BYTE PPPMode;		\/\/PPP模式, 0－主动，1－被动$/;"	m	struct:_NET_DEV_PPPCFG
PPPOEState	NET_DEV_STRUCT.H	/^    BYTE PPPOEState;		\/\/NET_DEV_NIC_STATE$/;"	m	struct:_NET_DEV_NETSTATES
PPS	NET_DEV_STRUCT.H	/^    BYTE PPS[128];                    \/*不含起始码*\/$/;"	m	struct:_NET_DEV_MEDIA_PICPARAM
PPSSize	NET_DEV_STRUCT.H	/^    WORD PPSSize;                     \/*pps数据长度*\/$/;"	m	struct:_NET_DEV_MEDIA_PICPARAM
PRE_INSTALL	curl/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	curl/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRODUCT_NAME	main.c	93;"	d	file:
PS_FILE_PATH	main.c	58;"	d	file:
PTZ_ACTION_AUTO_SCAN	NET_DEV_STRUCT.H	/^    PTZ_ACTION_AUTO_SCAN   = 3,$/;"	e	enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
PTZ_ACTION_CALL_PRESET	NET_DEV_STRUCT.H	/^    PTZ_ACTION_CALL_PRESET = 1,$/;"	e	enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
PTZ_ACTION_NONE	NET_DEV_STRUCT.H	/^    PTZ_ACTION_NONE        = 0,$/;"	e	enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
PTZ_ACTION_RANDOM_SCAN	NET_DEV_STRUCT.H	/^    PTZ_ACTION_RANDOM_SCAN = 4,$/;"	e	enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
PTZ_ACTION_RUN_CRUISE	NET_DEV_STRUCT.H	/^    PTZ_ACTION_RUN_CRUISE  = 2,$/;"	e	enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
PTZ_ACTION_RUN_PTN	NET_DEV_STRUCT.H	/^    PTZ_ACTION_RUN_PTN     = 5$/;"	e	enum:_NET_DEV_PTZ_JOIN_ACTION_TYPE
PanelVer	NET_DEV_STRUCT.H	/^    CHAR PanelVer[NET_DEV_VERSION_LEN];		\/\/ 前面板版本$/;"	m	struct:_NET_DEV_VERSION
Param	NET_DEV_STRUCT.H	/^    DWORD Param;		\/\/控制命令参数    \/\/???$/;"	m	struct:_NET_DEV_CONTROL
Param	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_RULE_PARAM Param;		\/\/ 规则参数定义$/;"	m	struct:_NET_DEV_PEAOSC_RULE
Param	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_RULE_PARAM Param;$/;"	m	struct:_NET_DEV_PEAOSC_RESULT_RULE
Param	NET_DEV_STRUCT.H	/^    } Param;$/;"	m	struct:_NET_DEV_PARAM_QUERY	typeref:union:_NET_DEV_PARAM_QUERY::__anon58
Param	NET_DEV_STRUCT.H	/^    } Param;$/;"	m	struct:_NET_DEV_PTZ_CONTROL	typeref:union:_NET_DEV_PTZ_CONTROL::__anon54
ParamId	NET_DEV_STRUCT.H	/^    DWORD ParamId;		\/\/NET_DEV_PARAM_ID$/;"	m	struct:_NET_DEV_PARAM_QUERY
ParkTime	NET_DEV_STRUCT.H	/^    DWORD ParkTime;		\/\/守望等待时间，单位：s$/;"	m	struct:_NET_DEV_PTZ_PARKACTION_CFG
ParkTime	NET_DEV_STRUCT.H	/^    DWORD ParkTime;		\/\/闲置等待时间，单位：s$/;"	m	struct:_NET_DEV_PTZ_TIME_TASK
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/ 密码$/;"	m	struct:_NET_DEV_NAS_MOUNT_PARAM
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/登陆密码$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/密码$/;"	m	struct:_NET_DEV_PPPCFG
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/密码$/;"	m	struct:_NET_DEV_USER
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/密码$/;"	m	struct:_NET_DEV_USER_INFO
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/用户密码$/;"	m	struct:_NET_DEV_DDNS_CFG
PassWord	NET_DEV_STRUCT.H	/^    CHAR PassWord[NET_DEV_PASSWORD_LEN];		\/\/用户密码$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
Passwd	NET_DEV_PU_SDK.H	/^    char Passwd[NET_DEV_IVS_PASSWD];$/;"	m	struct:_NET_DEV_IVS_CONFIG
Passwd	NET_DEV_STRUCT.H	/^    CHAR Passwd[NET_DEV_PASSWORD_LEN];		\/\/ 注册授权码$/;"	m	struct:_NET_DEV_SADPCMSINFO
Passwd	NET_DEV_STRUCT.H	/^    CHAR Passwd[NET_DEV_PASSWORD_LEN];		\/\/PPP拨号密码$/;"	m	struct:_NET_DEV_PPPOECFG
Passwd	NET_DEV_STRUCT.H	/^    CHAR Passwd[NET_DEV_PASSWORD_LEN];$/;"	m	struct:_NET_DEV_MODIFY_NET
Passwd	NET_DEV_STRUCT.H	/^    CHAR Passwd[NET_DEV_PASSWORD_LEN];$/;"	m	struct:_NET_DEV_PF_REGISTER_REQ
Password	NET_DEV_STRUCT.H	/^    CHAR Password[NET_DEV_PASSWORD_LEN];		\/\/ password, eg. "card"$/;"	m	struct:_NET_DEV_PPPDPARAM
Pattern	NET_DEV_STRUCT.H	/^        NET_DEV_PTZ_PATTERN Pattern;$/;"	m	union:_NET_DEV_PTZ_CONTROL::__anon54
PatternCount	NET_DEV_STRUCT.H	/^    DWORD PatternCount;$/;"	m	struct:_NET_DEV_PTZ_PATTERNSET
PatternPerChn	NET_DEV_STRUCT.H	/^    BYTE PatternPerChn;		\/\/ 每个通道最大支持的花样扫描条数 (<= NET_DEV_PTZ_MAX_PTN_NUM)$/;"	m	struct:_NET_DEV_CAPABILITIES
Patterns	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_PATTERN Patterns[NET_DEV_PTZ_MAX_PTN_NUM];$/;"	m	struct:_NET_DEV_PTZ_PATTERNSET
Peer	NET_DEV_PU_SDK.H	/^    char Peer[NET_PEER_IP_LEN];$/;"	m	struct:_NET_DEV_PEER
Percent	NET_DEV_STRUCT.H	/^    DWORD Percent;$/;"	m	struct:_NET_DEV_UPGRADE
Percent	NET_DEV_STRUCT.H	/^    DWORD Percent;$/;"	m	struct:_NET_DEV_UPGRADE_PROGRESS
Perimeter	NET_DEV_STRUCT.H	/^        NET_DEV_PERIMETER_RULE Perimeter;$/;"	m	union:_NET_DEV_PEAOSC_RULE_PARAM::__anon56
PhyDisks	NET_DEV_STRUCT.H	/^    NET_DEV_PHY_DISK_INFO PhyDisks[NET_DEV_MAX_PHY_DISK];$/;"	m	struct:_NET_DEV_PHY_DISK
PicParam	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_PICPARAM PicParam;  \/*图像参数*\/$/;"	m	struct:_NET_DEV_MEDIA_VIDEOPARAM
PicType	NET_DEV_STRUCT.H	/^    BYTE PicType;		\/\/$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
PicType	NET_DEV_STRUCT.H	/^    BYTE PicType;$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
PictureSize	NET_DEV_STRUCT.H	/^    DWORD PictureSize;		\/\/图片大小$/;"	m	struct:_NET_DEV_PIC_ITEM
PictureType	NET_DEV_STRUCT.H	/^    DWORD PictureType;		\/\/掩码 NET_DEV_RECORD_TYPE$/;"	m	struct:_NET_DEV_PIC_COND
PictureType	NET_DEV_STRUCT.H	/^    DWORD PictureType;		\/\/掩码 NET_DEV_RECORD_TYPE$/;"	m	struct:_NET_DEV_PIC_ITEM
PixCalState	NET_DEV_STRUCT.H	/^        DWORD PixCalState;		\/\/NET_DEV_PIX_CAL_STATE$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
PointCount	NET_DEV_STRUCT.H	/^    DWORD PointCount;$/;"	m	struct:_NET_DEV_CPC_RULE
PointNum	NET_DEV_STRUCT.H	/^    BYTE PointNum;            \/\/$/;"	m	struct:_NET_DEV_CPC_TARGET
Points	NET_DEV_STRUCT.H	/^    NET_DEV_POINT Points[NET_DEV_MAX_CPC_RULE_POINT_NUM];$/;"	m	struct:_NET_DEV_CPC_RULE
Points	NET_DEV_STRUCT.H	/^    NET_DEV_POINT Points[NET_DEV_MAX_CPC_TARGET_POINT_NUM]; \/\/ target's center point$/;"	m	struct:_NET_DEV_CPC_TARGET
Points	NET_DEV_STRUCT.H	/^    NET_DEV_POINT Points[NET_DEV_MAX_PEAOSC_TARGET_TRACK_NUM]; \/\/ 实际个数可变，Track为1时有效，由TrackNnum值指定$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Points	NET_DEV_STRUCT.H	/^    NET_DEV_POINT Points[NET_DEV_MAX_POLYGON_POINT_NUM];		\/\/多边形点坐标$/;"	m	struct:_NET_DEV_POLYGON
Polygon	NET_DEV_STRUCT.H	/^    NET_DEV_POLYGON Polygon;		\/\/多边形区域$/;"	m	struct:_NET_DEV_LEFT_RULE
Polygon	NET_DEV_STRUCT.H	/^    NET_DEV_POLYGON Polygon;		\/\/多边形区域$/;"	m	struct:_NET_DEV_PERIMETER_RULE
Polygon	NET_DEV_STRUCT.H	/^    NET_DEV_POLYGON Polygon;		\/\/多边形区域$/;"	m	struct:_NET_DEV_TAKE_RULE
Port	NET_DEV_PU_SDK.H	/^    int  Port;$/;"	m	struct:_NET_DEV_IVS_CONFIG
Port	NET_DEV_STRUCT.H	/^    DWORD Port;		\/\/端口$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
Port	NET_DEV_STRUCT.H	/^    DWORD Port;$/;"	m	struct:_NET_DEV_PF_MDSIP
Port	NET_DEV_STRUCT.H	/^    DWORD Port;$/;"	m	struct:_NET_DEV_WIFI_WPAEAP
Port	NET_DEV_STRUCT.H	/^    WORD Port;		\/\/ 远程设备端口 默认 554$/;"	m	struct:_NET_DEV_DEC_BIND
Port	NET_DEV_STRUCT.H	/^    WORD Port;		\/\/DDNS服务器端口$/;"	m	struct:_NET_DEV_DDNS_CFG
Port	NET_DEV_STRUCT.H	/^    WORD Port;		\/\/smtp 服务器端口$/;"	m	struct:_NET_DEV_SMTP_CFG
Port	NET_DEV_STRUCT.H	/^    WORD Port;		\/\/报警主机端口$/;"	m	struct:_NET_DEV_ALARMHOST_CFG
Port	NET_DEV_STRUCT.H	/^    WORD Port;		\/\/服务器端口$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
PppdParam	NET_DEV_STRUCT.H	/^    NET_DEV_PPPDPARAM PppdParam;$/;"	m	struct:_NET_DEV_DIALPARAM
PreRecord	NET_DEV_STRUCT.H	/^    WORD PreRecord;		\/\/通道预录时长，单位：秒$/;"	m	struct:_NET_DEV_RECORD
Preset	NET_DEV_STRUCT.H	/^        NET_DEV_PTZ_PRESET Preset;$/;"	m	union:_NET_DEV_PTZ_CONTROL::__anon54
Preset	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_PRESET Preset;		\/\/预置点$/;"	m	struct:_NET_DEV_PTZ_CRUISEPOINT
PresetCount	NET_DEV_STRUCT.H	/^    DWORD PresetCount;		\/\/预置点数量$/;"	m	struct:_NET_DEV_PTZ_PRESETSET
Presets	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_PRESET Presets[NET_DEV_MAX_PRESET_NUM];		\/\/预置点集合$/;"	m	struct:_NET_DEV_PTZ_PRESETSET
Print	NET_DEV_PU_SDK.H	/^    void (*Print) (int Level, const char *Message);$/;"	m	struct:_NET_DEV_SDK_FUNCS
Process	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_HANDLE Process;$/;"	m	struct:_NET_DEV_ALARM_JOINT
ProductName	NET_DEV_STRUCT.H	/^    CHAR ProductName[NET_DEV_DEVICE_NAME_LEN];		\/\/产品型号$/;"	m	struct:_NET_DEV_CAPABILITIES
ProductName	NET_DEV_STRUCT.H	/^    CHAR ProductName[NET_DEV_DEVICE_NAME_LEN];		\/\/产品型号$/;"	m	struct:_NET_DEV_SADPINFO
ProductName	NET_DEV_STRUCT.H	/^    CHAR ProductName[NET_DEV_DEVICE_NAME_LEN];		\/\/产品型号$/;"	m	struct:_NET_DEV_VERSION
Progress	NET_DEV_STRUCT.H	/^    DWORD Progress;		\/\/ 格式化进度(0 - 100), -1:表示出错$/;"	m	struct:_NET_DEV_FORMATDISK_RSP
Property	NET_DEV_STRUCT.H	/^    CHAR Property[NET_DEV_REC_PROPERTY_SIZE];$/;"	m	struct:_NET_DEV_PIC_ITEM
Property	NET_DEV_STRUCT.H	/^    CHAR Property[NET_DEV_REC_PROPERTY_SIZE];$/;"	m	struct:_NET_DEV_RECORD_ITEM
Protocol	NET_DEV_STRUCT.H	/^    BYTE Protocol;		\/\/ 传输协议类型,NET_DEV_TRANSPROTOL$/;"	m	struct:_NET_DEV_SADPCMSINFO
Protol	NET_DEV_STRUCT.H	/^    DWORD Protol;		\/\/ NET_DEV_PTZ_PROTOL$/;"	m	struct:_NET_DEV_PTZ_CFG
Protol	NET_DEV_STRUCT.H	/^    DWORD Protol;		\/\/传输协议类型 NET_DEV_TRANSPROTOL$/;"	m	struct:_NET_DEV_ALARMHOST_CFG
ProtolCap	NET_DEV_STRUCT.H	/^    DWORD ProtolCap;		\/\/ 协议能力 NET_DEV_PROTOL_TYPE$/;"	m	struct:_NET_DEV_CAPABILITIES
ProtolType	NET_DEV_STRUCT.H	/^    BYTE ProtolType;		\/\/设备协议类型 NET_DEV_PROTOL_TYPE$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
ProtolType	NET_DEV_STRUCT.H	/^    DWORD ProtolType;		\/\/设备协议类型 NET_DEV_PROTOL_TYPE$/;"	m	struct:_NET_DEV_NVR_DEVLIST_REQ
ProtolType	NET_DEV_STRUCT.H	/^    WORD ProtolType;		\/\/ NET_DEV_PROTOL_TYPE$/;"	m	struct:_NET_DEV_MODIFY_NET
ProtolType	NET_DEV_STRUCT.H	/^    WORD ProtolType;		\/\/ NET_DEV_PROTOL_TYPE$/;"	m	struct:_NET_DEV_SADPINFO
PthreadStream	main.c	/^INT32 PthreadStream(void *_uThis) $/;"	f
PtzAddr	NET_DEV_STRUCT.H	/^    WORD PtzAddr;		\/\/ 云台地址$/;"	m	struct:_NET_DEV_PTZ_CFG
PtzTime	NET_DEV_STRUCT.H	/^    BYTE  PtzTime;$/;"	m	struct:_NET_DEV_WSX_CFG
Ptzs	NET_DEV_STRUCT.H	/^    NET_DEV_ALARM_PTZ_ACTION Ptzs[NET_DEV_MAX_CHANN_NUM];		\/\/联动云台动作$/;"	m	struct:_NET_DEV_ALARM_HANDLE
PuAC	NET_DEV_STRUCT.H	/^    CHAR PuAC[NET_DEV_AUTHORIZECODE_LEN];		\/\/设备授权码$/;"	m	struct:_NET_DEV_CMS_CFG
PuId	NET_DEV_STRUCT.H	/^    CHAR  PuId[64];$/;"	m	struct:_NET_DEV_WSX_CFG
PuId	NET_DEV_STRUCT.H	/^    CHAR PuId[NET_DEV_ID_LEN];		\/\/设备ID$/;"	m	struct:_NET_DEV_CMS_CFG
PuName	NET_DEV_STRUCT.H	/^    CHAR  PuName[64];$/;"	m	struct:_NET_DEV_WSX_CFG
PuPassword	NET_DEV_STRUCT.H	/^    CHAR  PuPassword[64];$/;"	m	struct:_NET_DEV_WSX_CFG
PushDataToFiFo	fifolib.c	/^DLL_DECLARE INT32  PushDataToFiFo(void *_pData, Data_FIFO *ptFifo)$/;"	f
QPValue	NET_DEV_STRUCT.H	/^    DWORD QPValue;		\/\/质量  数值型 常用值：25，50$/;"	m	struct:_NET_DEV_ENCODEPARAM
QosParam	NET_DEV_STRUCT.H	/^    NET_DEV_QOSPARAM QosParam;$/;"	m	struct:_NET_DEV_DIALPARAM
QpVal	NET_DEV_STRUCT.H	/^    DWORD QpVal;		\/\/质量值 0-51$/;"	m	struct:_NET_DEV_ROI
Quality	NET_DEV_STRUCT.H	/^    BYTE Quality;$/;"	m	struct:_NET_DEV_MANUL_SNAPPIC_REQ
Quality	NET_DEV_STRUCT.H	/^    BYTE Quality;$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
Quality	NET_DEV_STRUCT.H	/^    BYTE Quality;$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
Quality	NET_DEV_STRUCT.H	/^    DWORD Quality;		\/\/信号质量 0-100$/;"	m	struct:_NET_DEV_WIFI_AP
RANDOM_FILE	curl/Makefile	/^RANDOM_FILE = \/dev\/urandom$/;"	m
RANLIB	curl/Makefile	/^RANLIB = ranlib$/;"	m
RECORD_PROPERTY_FMT	main.c	69;"	d	file:
RED	BaseType.h	134;"	d
REQUIRE_LIB_DEPS	curl/Makefile	/^REQUIRE_LIB_DEPS = no$/;"	m
RTMP_PORT	main.c	80;"	d	file:
RTSP_PORT	main.c	78;"	d	file:
RecordBackup	NET_DEV_STRUCT.H	/^    WORD RecordBackup;		\/\/0:录像不存档 1：录像存档$/;"	m	struct:_NET_DEV_RECORD
RecordChannMask	NET_DEV_STRUCT.H	/^    BYTE RecordChannMask[NET_DEV_MAX_CHANN_NUM];		\/\/联动录像通道$/;"	m	struct:_NET_DEV_ALARM_HANDLE
RecordRecycle	NET_DEV_STRUCT.H	/^    BYTE RecordRecycle;		\/\/ 是否循环录像, NET_DEV_REC_POLICY$/;"	m	struct:_NET_DEV_BASECFG
RecordSize	NET_DEV_STRUCT.H	/^    DWORD RecordSize;$/;"	m	struct:_NET_DEV_RECORD_ITEM
RecordState	NET_DEV_STRUCT.H	/^    BYTE RecordState;		\/\/通道是否在录像：0－不录像；1－录像$/;"	m	struct:_NET_DEV_CHANNSTATE
RecordTime	NET_DEV_STRUCT.H	/^    WORD RecordTime;		\/\/录象延时时间 单位：秒$/;"	m	struct:_NET_DEV_RECORD
RecordType	NET_DEV_STRUCT.H	/^    BYTE RecordType;$/;"	m	struct:_NET_DEV_RECORD_OUTLINE_ITEM
RecordType	NET_DEV_STRUCT.H	/^    DWORD RecordType;		\/\/ 掩码 NET_DEV_RECORD_TYPE$/;"	m	struct:_NET_DEV_RECORD_ITEM
RecordType	NET_DEV_STRUCT.H	/^    DWORD RecordType;		\/\/掩码 NET_DEV_RECORD_TYPE$/;"	m	struct:_NET_DEV_RECORD_COND
Rect	NET_DEV_STRUCT.H	/^    NET_DEV_RECT Rect;    \/\/ 目标所在区域$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Rect	NET_DEV_STRUCT.H	/^    NET_DEV_RECT Rect;\/\/事件触发目标所在区域$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
RectMask	NET_DEV_STRUCT.H	/^    WORD RectMask;		\/\/按位标示区域是否有效$/;"	m	struct:_NET_DEV_AREA
Rects	NET_DEV_STRUCT.H	/^    NET_DEV_RECT Rects[NET_DEV_MAX_AREA_NUM];$/;"	m	struct:_NET_DEV_AREA
Redial	NET_DEV_STRUCT.H	/^    BYTE Redial;		\/\/是否回拨 ：0-否,1-是$/;"	m	struct:_NET_DEV_PPPCFG
RedialMode	NET_DEV_STRUCT.H	/^    BYTE RedialMode;		\/\/回拨模式,0-由拨入者指定,1-预置回拨号码$/;"	m	struct:_NET_DEV_PPPCFG
Redundancy	NET_DEV_STRUCT.H	/^    WORD Redundancy;		\/\/是否冗余录像,重要数据双备份：0\/1$/;"	m	struct:_NET_DEV_RECORD
RefIdc	NET_DEV_STRUCT.H	/^    BYTE RefIdc;                        \/*参考指示,00:非参考图像,大于00值指示相对传输优先级*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
RefreshTime	NET_DEV_STRUCT.H	/^    WORD RefreshTime;$/;"	m	struct:_NET_DEV_UPNP_CFG
RegSvrIp	NET_DEV_STRUCT.H	/^    CHAR  RegSvrIp[64];$/;"	m	struct:_NET_DEV_WSX_CFG
RegSvrPort	NET_DEV_STRUCT.H	/^    DWORD RegSvrPort;$/;"	m	struct:_NET_DEV_WSX_CFG
Remote	NET_DEV_STRUCT.H	/^    } Remote;$/;"	m	struct:_NET_DEV_NVR_CHANNEL	typeref:union:_NET_DEV_NVR_CHANNEL::__anon55
RemoteChann	NET_DEV_STRUCT.H	/^    NET_DEV_REMOTE_CHANNEL RemoteChann;		\/\/远程设备通道信息$/;"	m	struct:_NET_DEV_NVR_CHANNEL
RemoteDevice	NET_DEV_STRUCT.H	/^        NET_DEV_REMOTE_DEVICE RemoteDevice;		\/\/远程设备信息$/;"	m	union:_NET_DEV_NVR_CHANNEL::__anon55
RemoteIP	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR RemoteIP;		\/\/远端IP地址$/;"	m	struct:_NET_DEV_PPPCFG
RemoteIp	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR RemoteIp;		\/\/ remote IP address$/;"	m	struct:_NET_DEV_PPPDPARAM
RemoteRight	NET_DEV_STRUCT.H	/^    DWORD RemoteRight;		\/\/ 远程操作权限掩码 ???$/;"	m	struct:_NET_DEV_USER_MODIFY
RemoteRight	NET_DEV_STRUCT.H	/^    DWORD RemoteRight;		\/\/远程操作权限掩码 NET_DEV_USER_REMOTERIGHT$/;"	m	struct:_NET_DEV_USER_INFO
RemoteRtsp	NET_DEV_STRUCT.H	/^        NET_DEV_REMOTE_RTSP RemoteRtsp;		\/\/远程RTSP设备$/;"	m	union:_NET_DEV_NVR_CHANNEL::__anon55
RemoteType	NET_DEV_STRUCT.H	/^    DWORD RemoteType;		\/\/连接方式：0-RemoteDevice, 1-RemoteRtsp$/;"	m	struct:_NET_DEV_NVR_CHANNEL
ReqCount	NET_DEV_STRUCT.H	/^    DWORD ReqCount;$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_REQ
ReqCount	NET_DEV_STRUCT.H	/^    DWORD ReqCount;$/;"	m	struct:_NET_DEV_LOG_QUERY_REQ
ReqCount	NET_DEV_STRUCT.H	/^    DWORD ReqCount;$/;"	m	struct:_NET_DEV_PIC_QUERY_REQ
ReqCount	NET_DEV_STRUCT.H	/^    DWORD ReqCount;$/;"	m	struct:_NET_DEV_RECORD_QUERY_REQ
Res	NET_DEV_STRUCT.H	/^    BYTE Res;		\/\/ 预留$/;"	m	struct:_NET_DEV_PEAOSC_CFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res;		\/\/保留$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
Res	NET_DEV_STRUCT.H	/^    BYTE Res;$/;"	m	struct:_NET_DEV_CHANNSTATE
Res	NET_DEV_STRUCT.H	/^    BYTE Res;$/;"	m	struct:_NET_DEV_DAYNIGHT
Res	NET_DEV_STRUCT.H	/^    BYTE Res;$/;"	m	struct:_NET_DEV_PEAOSC_TIME_FILTER
Res	NET_DEV_STRUCT.H	/^    BYTE Res[1];$/;"	m	struct:_NET_DEV_BASECFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[25];$/;"	m	struct:_NET_DEV_PPPDPARAM
Res	NET_DEV_STRUCT.H	/^    BYTE Res[29];$/;"	m	struct:_NET_DEV_AVD_RULE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];		\/\/ reserved$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];		\/\/ 预留$/;"	m	struct:_NET_DEV_PEAOSC_RULE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];                        \/*保留*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];              \/\/ res$/;"	m	struct:_NET_DEV_CPC_TARGET
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_ALARM_PTZ_ACTION
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_CPC_RESULT_RULE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_MANUL_SNAPPIC_REQ
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_NETSTATES
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_NVRCFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_PEAOSC_FILTER_RULE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[2];$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
Res	NET_DEV_STRUCT.H	/^    BYTE Res[32];$/;"	m	struct:_NET_DEV_CPC_EVENT
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/ reserved$/;"	m	struct:_NET_DEV_CPC_RULE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/ 保留$/;"	m	struct:_NET_DEV_DEC_BIND
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/ 保留$/;"	m	struct:_NET_DEV_PEAOSC_TARGET_FILTER
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/ 保留$/;"	m	struct:_NET_DEV_WIFICFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/保留$/;"	m	struct:_NET_DEV_ETHCFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/保留$/;"	m	struct:_NET_DEV_PTZ_PARKACTION_CFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];		\/\/保留$/;"	m	struct:_NET_DEV_PTZ_TIME_TASK
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];$/;"	m	struct:_NET_DEV_AVD_CFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];$/;"	m	struct:_NET_DEV_CPC_CFG
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];$/;"	m	struct:_NET_DEV_PEAOSC_RESULT_RULE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];$/;"	m	struct:_NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE
Res	NET_DEV_STRUCT.H	/^    BYTE Res[3];$/;"	m	struct:_NET_DEV_WIFI_WPS
Res	NET_DEV_STRUCT.H	/^    BYTE Res[4];         \/\/ 预留$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Res	NET_DEV_STRUCT.H	/^    BYTE Res[7];$/;"	m	struct:_NET_DEV_QOSPARAM
Res	NET_DEV_STRUCT.H	/^    DWORD Res;$/;"	m	struct:_NET_DEV_LOG_ITEM
Res	NET_DEV_STRUCT.H	/^    WORD Res;                           \/* 保留 *\/$/;"	m	struct:_NET_DEV_MEDIA_MFRAMEEXT
Res1	NET_DEV_STRUCT.H	/^    BYTE Res1[10];		\/\/$/;"	m	struct:_NET_DEV_DIALPARAM
Res1	NET_DEV_STRUCT.H	/^    DWORD Res1[2];		\/\/ 保留$/;"	m	struct:_NET_DEV_CAPABILITIES
Res2	NET_DEV_STRUCT.H	/^    BYTE Res2[24];$/;"	m	struct:_NET_DEV_DIALPARAM
Reserve	NET_DEV_STRUCT.H	/^    DWORD Reserve;		\/\/保留 按通道划分权限 ????$/;"	m	struct:_NET_DEV_USER_INFO
Reserve	NET_DEV_STRUCT.H	/^    DWORD Reserve;$/;"	m	struct:_NET_DEV_USER_MODIFY
Reserved	NET_DEV_STRUCT.H	/^    BYTE Reserved;                      \/*保留*\/$/;"	m	struct:_NET_DEV_MEDIA_AFRAMEEXT
Resolution	NET_DEV_STRUCT.H	/^    BYTE Resolution;		\/\/NET_DEV_IMAGERESOLUTION$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
Resolution	NET_DEV_STRUCT.H	/^    BYTE Resolution;		\/\/NET_DEV_IMAGERESOLUTION$/;"	m	struct:_NET_DEV_SNAPPIC_TIMERPARAM
Resolution	NET_DEV_STRUCT.H	/^    DWORD Resolution[NET_DEV_MAX_STREAM_NUM];		\/\/支持的分辨率集 掩码 NET_DEV_IMAGERESOLUTION$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
Result	NET_DEV_STRUCT.H	/^    DWORD Result;		\/\/0:成功, !0:失败$/;"	m	struct:_NET_DEV_DEC_DIVINFO
Result	NET_DEV_STRUCT.H	/^    DWORD Result;		\/\/0:成功, !0:失败$/;"	m	struct:_NET_DEV_DEC_FULLSCREENINFO
ResultHttpPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT_STATE ResultHttpPort;$/;"	m	struct:_NET_DEV_UPNP_STATE
ResultMsgPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT_STATE ResultMsgPort;$/;"	m	struct:_NET_DEV_UPNP_STATE
ResultRtmpPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT_STATE ResultRtmpPort;$/;"	m	struct:_NET_DEV_UPNP_STATE
ResultRtspPort	NET_DEV_STRUCT.H	/^    NET_DEV_UPNP_PORT_STATE ResultRtspPort;$/;"	m	struct:_NET_DEV_UPNP_STATE
Right	NET_DEV_STRUCT.H	/^    WORD Right;$/;"	m	struct:_NET_DEV_RECT
Rotate	NET_DEV_STRUCT.H	/^    DWORD Rotate;		\/\/旋转：0 无    1 旋转90度    2 旋转270度$/;"	m	struct:_NET_DEV_CAMERAPARAM
Rs232Count	NET_DEV_STRUCT.H	/^    BYTE Rs232Count;		\/\/ RS232串口个数$/;"	m	struct:_NET_DEV_CAPABILITIES
Rs485Count	NET_DEV_STRUCT.H	/^    BYTE Rs485Count;		\/\/ RS485串口个数$/;"	m	struct:_NET_DEV_CAPABILITIES
RspCount	NET_DEV_STRUCT.H	/^    DWORD RspCount;$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_RSP
RspCount	NET_DEV_STRUCT.H	/^    DWORD RspCount;$/;"	m	struct:_NET_DEV_LOG_QUERY_RSP
RspCount	NET_DEV_STRUCT.H	/^    DWORD RspCount;$/;"	m	struct:_NET_DEV_PIC_QUERY_RSP
RspCount	NET_DEV_STRUCT.H	/^    DWORD RspCount;$/;"	m	struct:_NET_DEV_RECORD_QUERY_RSP
RtmpPort	NET_DEV_STRUCT.H	/^    WORD RtmpPort;		\/\/设备RTMP端口$/;"	m	struct:_NET_DEV_SERVICECFG
RtspPort	NET_DEV_STRUCT.H	/^    DWORD RtspPort;$/;"	m	struct:_NET_DEV_WSX_CFG
RtspPort	NET_DEV_STRUCT.H	/^    WORD RtspPort;		\/\/设备RTSP端口$/;"	m	struct:_NET_DEV_SERVICECFG
RtspUrl0	NET_DEV_STRUCT.H	/^    CHAR RtspUrl0[NET_DEV_MAX_URL_LEN];		\/\/RTSP URL0$/;"	m	struct:_NET_DEV_REMOTE_RTSP
RtspUrl1	NET_DEV_STRUCT.H	/^    CHAR RtspUrl1[NET_DEV_MAX_URL_LEN];		\/\/RTSP URL1$/;"	m	struct:_NET_DEV_REMOTE_RTSP
Rule	NET_DEV_STRUCT.H	/^    DWORD Rule;		\/\/ 保留$/;"	m	struct:_NET_DEV_ALARM_DESC
Rule	NET_DEV_STRUCT.H	/^    NET_DEV_CPC_RULE Rule;$/;"	m	struct:_NET_DEV_CPC_RESULT_RULE
Rule	NET_DEV_STRUCT.H	/^    NET_DEV_CPC_RULE_CFG Rule;$/;"	m	struct:_NET_DEV_CPC_CFG
Rule	NET_DEV_STRUCT.H	/^    } Rule;$/;"	m	struct:_NET_DEV_PEAOSC_RULE_PARAM	typeref:union:_NET_DEV_PEAOSC_RULE_PARAM::__anon56
RuleCount	NET_DEV_STRUCT.H	/^    DWORD RuleCount;$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
RuleCount	NET_DEV_STRUCT.H	/^    DWORD RuleCount;$/;"	m	struct:_NET_DEV_PEAOSC_CFG
RuleNum	NET_DEV_STRUCT.H	/^  BYTE RuleNum;       \/\/ 包含规则个数(Mask & 0x1 == 1时有效) <= NET_DEV_MAX_PEAOSC_RULE_NUM\/NET_DEV_MAX_CPC_RULE_NUM$/;"	m	struct:_NET_DEV_MEDIA_IVS_HDR
RuleType	NET_DEV_STRUCT.H	/^    DWORD RuleType;		\/\/NET_DEV_PEAOSC_RULE_TYPE$/;"	m	struct:_NET_DEV_PEAOSC_RULE_PARAM
Rules	NET_DEV_STRUCT.H	/^    NET_DEV_AVD_RULE Rules[NET_DEV_MAX_AVD_RULE_NUM];		\/\/视频诊断规则，见 NET_DEV_AVD_TYPE$/;"	m	struct:_NET_DEV_AVD_CFG
Rules	NET_DEV_STRUCT.H	/^    NET_DEV_CPC_RULE Rules[NET_DEV_MAX_CPC_RULE_NUM];$/;"	m	struct:_NET_DEV_CPC_RULE_CFG
Rules	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_RULE Rules[NET_DEV_MAX_PEAOSC_RULE_NUM];		\/\/ 检测规则$/;"	m	struct:_NET_DEV_PEAOSC_CFG
SADP_DEV_DECB_3531	sadp_pu_api.h	/^    , SADP_DEV_DECB_3531     = 0x6101    \/\/DEC BOX  720P 8in, 2out;$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_DECC_3531	sadp_pu_api.h	/^    , SADP_DEV_DECC_3531     = 0x6001    \/\/DEC CARD 720P 8in, 2out;$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_DVR_3531	sadp_pu_api.h	/^    , SADP_DEV_DVR_3531      = 0x4001    \/\/DVR 3531 16-D1(960)$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_IPC_POCKET	sadp_pu_api.h	/^	, SADP_DEV_IPC_POCKET	 = 0x2001	\/\/ 卡片机$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_IPC_PRO	sadp_pu_api.h	/^      SADP_DEV_IPC_PRO       = 0x0001	\/\/ 专业机型$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_IPC_SHARK	sadp_pu_api.h	/^    , SADP_DEV_IPC_SHARK	 = 0x1001	\/\/ 摇头机$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_IPDOME	sadp_pu_api.h	/^	, SADP_DEV_IPDOME		 = 0x3001	\/\/ 网络球$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_NVR_3520D	sadp_pu_api.h	/^    , SADP_DEV_NVR_3520D     = 0x5101    \/\/NVR 3520D 04, 09, 16 720P\/1080P$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_NVR_3520D_NC	sadp_pu_api.h	/^    , SADP_DEV_NVR_3520D_NC  = 0x5102    \/\/NVR 3520D 04, with NC$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_NVR_3521	sadp_pu_api.h	/^    , SADP_DEV_NVR_3521      = 0x5201    \/\/NVR 3521 04, 09, 16 720P\/1080P$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_NVR_3531	sadp_pu_api.h	/^    , SADP_DEV_NVR_3531      = 0x5001    \/\/NVR 3531 09, 16, 25, 32 720P\/1080P$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_SDI_3531	sadp_pu_api.h	/^    , SADP_DEV_SDI_3531      = 0x4101    \/\/DVR 3531 04,08, HD-SDI$/;"	e	enum:_SADP_DEV_TYPE_E
SADP_DEV_TYPE_E	sadp_pu_api.h	/^typedef enum _SADP_DEV_TYPE_E SADP_DEV_TYPE_E;$/;"	t	typeref:enum:_SADP_DEV_TYPE_E
SADP_MSG_GET	sadp_pu_api.h	/^    , SADP_MSG_GET                           \/\/获取$/;"	e	enum:_SADP_SGET_DIR
SADP_MSG_ID_DEV_INFO	sadp_pu_api.h	/^      SADP_MSG_ID_DEV_INFO      = 0x0001     \/*  设备搜索  NET_DEV_SADPINFO   *\/$/;"	e	enum:_SADP_MSG_ID_E
SADP_MSG_ID_E	sadp_pu_api.h	/^typedef enum _SADP_MSG_ID_E SADP_MSG_ID_E;$/;"	t	typeref:enum:_SADP_MSG_ID_E
SADP_MSG_ID_NET_CFG	sadp_pu_api.h	/^    , SADP_MSG_ID_NET_CFG                    \/*  网络配置  NET_DEV_MODIFY_NET *\/$/;"	e	enum:_SADP_MSG_ID_E
SADP_MSG_SET	sadp_pu_api.h	/^      SADP_MSG_SET = 0X0001                  \/\/设置$/;"	e	enum:_SADP_SGET_DIR
SADP_MSG_SGET_E	sadp_pu_api.h	/^}SADP_MSG_SGET_E;$/;"	t	typeref:enum:_SADP_SGET_DIR
SED	curl/Makefile	/^SED = \/bin\/sed$/;"	m
SERIAL_NO	main.c	91;"	d	file:
SET_MAKE	curl/Makefile	/^SET_MAKE = $/;"	m
SHELL	curl/Makefile	/^SHELL = \/bin\/bash$/;"	m
SOCKET	BaseType.h	162;"	d
SOURCES	curl/Makefile	/^SOURCES =$/;"	m
SPS	NET_DEV_STRUCT.H	/^    BYTE SPS[128];                    \/*不含起始码*\/$/;"	m	struct:_NET_DEV_MEDIA_PICPARAM
SPSSize	NET_DEV_STRUCT.H	/^    WORD SPSSize;                     \/*sps数据长度*\/$/;"	m	struct:_NET_DEV_MEDIA_PICPARAM
SSLEnable	NET_DEV_STRUCT.H	/^    WORD SSLEnable;		\/\/是否启用SSL$/;"	m	struct:_NET_DEV_SMTP_CFG
SSL_BACKENDS	curl/Makefile	/^SSL_BACKENDS = OpenSSL$/;"	m
SSL_ENABLED	curl/Makefile	/^SSL_ENABLED = 1$/;"	m
SSL_LIBS	curl/Makefile	/^SSL_LIBS = -lssl -lcrypto$/;"	m
STREAMSIZE	BaseType.h	231;"	d
STREAM_DATA_PROCESS	main.c	/^typedef int (*STREAM_DATA_PROCESS)(void * _pMedia,frame_element_t * pFrame,void *_pContext);$/;"	t	file:
STRIP	curl/Makefile	/^STRIP = strip$/;"	m
ST_CLOSE	main.c	/^    ST_CLOSE,$/;"	e	enum:__anon49	file:
ST_OPEN	main.c	/^    ST_OPEN,$/;"	e	enum:__anon49	file:
ST_PLAY	main.c	/^    ST_PLAY,$/;"	e	enum:__anon49	file:
SUPPORT_FEATURES	curl/Makefile	/^SUPPORT_FEATURES = SSL IPv6 UnixSockets libz AsynchDNS NTLM NTLM_WB TLS-SRP HTTPS-proxy$/;"	m
SUPPORT_PROTOCOLS	curl/Makefile	/^SUPPORT_PROTOCOLS = DICT FILE FTP FTPS GOPHER HTTP HTTPS IMAP IMAPS POP3 POP3S RTSP SMB SMBS SMTP SMTPS TELNET TFTP$/;"	m
SVCLevel	NET_DEV_STRUCT.H	/^    WORD SVCLevel;		\/\/SVC抽帧类型：0-不抽，1-抽二分之一 2-抽四分之三$/;"	m	struct:_NET_DEV_RECORD
SW_VER	main.c	87;"	d	file:
SadpID	NET_DEV_STRUCT.H	/^    CHAR SadpID[NET_DEV_SADP_ID_LEN];		\/\/ PU端不用填，CU端自动填充$/;"	m	struct:_NET_DEV_SADPINFO
SadpID	NET_DEV_STRUCT.H	/^    CHAR SadpID[NET_DEV_SADP_ID_LEN];$/;"	m	struct:_NET_DEV_MODIFY_NET
SamplesPerSec	NET_DEV_STRUCT.H	/^    BYTE SamplesPerSec;                 \/*采样率 NET_DEV_MEDIA_SAMPLERATE *\/$/;"	m	struct:_NET_DEV_MEDIA_AFRAMEEXT
SamplesPerSec	NET_DEV_STRUCT.H	/^    WORD SamplesPerSec;               \/*采样率*\/$/;"	m	struct:_NET_DEV_MEDIA_VIDEOPARAM
SamplesPerSec	NET_DEV_STRUCT.H	/^    WORD SamplesPerSec;             \/*采样率*\/$/;"	m	struct:_NET_DEV_MEDIA_AUDIOPARAM
Saturation	NET_DEV_STRUCT.H	/^    DWORD Saturation;		\/\/饱和度$/;"	m	struct:_NET_DEV_VIDEO_EFFECT
ScenceMode	NET_DEV_STRUCT.H	/^    DWORD ScenceMode;		\/\/场景模式$/;"	m	struct:_NET_DEV_CAMERAPARAM
Scene	NET_DEV_STRUCT.H	/^    BYTE Scene;		\/\/ 场景类型NET_DEV_SCENE_TYPE ，预留定义，目前设置无效果$/;"	m	struct:_NET_DEV_PEAOSC_CFG
ScreenCount	NET_DEV_STRUCT.H	/^    BYTE ScreenCount;		\/\/ 输出屏幕个数$/;"	m	struct:_NET_DEV_CAPABILITIES
Second	NET_DEV_STRUCT.H	/^    BYTE Second;		\/\/秒$/;"	m	struct:_NET_DEV_TIME_EX
Second	NET_DEV_STRUCT.H	/^    NET_DEV_ENCODEPARAM Second;		\/\/子码流    编码参数$/;"	m	struct:_NET_DEV_ENCODECFG
Security	NET_DEV_STRUCT.H	/^    DWORD Security;		\/\/加密模式 'NET_DEV_WIFISECURITY'$/;"	m	struct:_NET_DEV_WIFICFG
Security	NET_DEV_STRUCT.H	/^    DWORD Security;		\/\/加密模式 NET_DEV_WIFISECURITY$/;"	m	struct:_NET_DEV_WIFI_AP
Seg	NET_DEV_STRUCT.H	/^    NET_DEV_TIMESEG Seg;		\/\/时间段$/;"	m	struct:_NET_DEV_PTZ_SCHEDTASK
Segs	NET_DEV_STRUCT.H	/^    NET_DEV_TIMESEG Segs[NET_DEV_MAX_SEG_NUM];		\/\/定时切换时间段$/;"	m	struct:_NET_DEV_DAYNIGHT
Segs	NET_DEV_STRUCT.H	/^    NET_DEV_TIMESEG Segs[NET_DEV_MAX_SEG_NUM];$/;"	m	struct:_NET_DEV_DAY
Sensitive	NET_DEV_STRUCT.H	/^    DWORD Sensitive;		\/\/灵敏度字段，范围 0-4，值越低，越灵敏$/;"	m	struct:_NET_DEV_HIDE_ALARM
Sensitive	NET_DEV_STRUCT.H	/^    DWORD Sensitive;$/;"	m	struct:_NET_DEV_MOTION_ALARM
SerialNo	NET_DEV_STRUCT.H	/^        DWORD SerialNo;		\/\/串口号 当  ParamId == NET_DEV_PARAM_SERIAL_CFG$/;"	m	union:_NET_DEV_PARAM_QUERY::__anon58
SerialNo	NET_DEV_STRUCT.H	/^    CHAR SerialNo[NET_DEV_SERIAL_NO_LEN];		\/\/ 序列号$/;"	m	struct:_NET_DEV_SADPCMSINFO
SerialNo	NET_DEV_STRUCT.H	/^    CHAR SerialNo[NET_DEV_SERIAL_NO_LEN];		\/\/ 序列号$/;"	m	struct:_NET_DEV_SADPINFO
SerialNo	NET_DEV_STRUCT.H	/^    CHAR SerialNo[NET_DEV_SERIAL_NO_LEN];		\/\/ 序列号$/;"	m	struct:_NET_DEV_VERSION
SerialNo	NET_DEV_STRUCT.H	/^    WORD SerialNo;		\/\/ 保留$/;"	m	struct:_NET_DEV_PTZ_CFG
SerialNo	NET_DEV_STRUCT.H	/^    WORD SerialNo;		\/\/串口号,从0开始$/;"	m	struct:_NET_DEV_SERIAL_CFG
ServerId	NET_DEV_STRUCT.H	/^    CHAR ServerId[NET_DEV_ID_LEN];		\/\/ 服务器ID$/;"	m	struct:_NET_DEV_GB28181_CFG
ServerIp	NET_DEV_STRUCT.H	/^    NET_DEV_IPADDR ServerIp;$/;"	m	struct:_NET_DEV_WIFI_WPAEAP
ServerIpAddr	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR ServerIpAddr;		\/\/ 服务器地址$/;"	m	struct:_NET_DEV_GB28181_CFG
ServerPort	NET_DEV_STRUCT.H	/^    WORD ServerPort;		\/\/ 服务器端口$/;"	m	struct:_NET_DEV_GB28181_CFG
ServiceCfg	NET_DEV_STRUCT.H	/^    NET_DEV_SERVICECFG ServiceCfg;$/;"	m	struct:_NET_DEV_MODIFY_NET
ServiceCfg	NET_DEV_STRUCT.H	/^    NET_DEV_SERVICECFG ServiceCfg;$/;"	m	struct:_NET_DEV_SADPINFO
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_REQ
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_RSP
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_LOG_QUERY_REQ
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_LOG_QUERY_RSP
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_PIC_QUERY_REQ
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_PIC_QUERY_RSP
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_RECORD_QUERY_REQ
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_RECORD_QUERY_RSP
SessionId	NET_DEV_STRUCT.H	/^    DWORD SessionId;$/;"	m	struct:_NET_DEV_UPGRADE
SetP	NET_DEV_PU_SDK.H	/^    int  (*SetP) (NET_DEV_PEER *Peer, int Chnl, int PID, void *In, void *Out);$/;"	m	struct:_NET_DEV_SDK_FUNCS
Sharpness	NET_DEV_STRUCT.H	/^    DWORD Sharpness;		\/\/锐度$/;"	m	struct:_NET_DEV_VIDEO_EFFECT
Shutter	NET_DEV_STRUCT.H	/^    DWORD Shutter;		\/\/电子快门 0-9  0：自动快门 1：1\/25S， 2：1\/50S， 3：1\/100S， 4: 1\/200S 5：1\/500S， 6：1\/1000S， 7：1\/2000S， 8：1\/5000S， 9：1\/10000S$/;"	m	struct:_NET_DEV_CAMERAPARAM
SignalState	NET_DEV_STRUCT.H	/^    BYTE SignalState;		\/\/连接的信号状态：0－正常，  1－信号丢失$/;"	m	struct:_NET_DEV_CHANNSTATE
SingleDisks	NET_DEV_STRUCT.H	/^    NET_DEV_NET_SINGLE_DISK SingleDisks[NET_DEV_MAX_NET_DISK];$/;"	m	struct:_NET_DEV_NET_DISKCFG
SipHbPeriod	NET_DEV_STRUCT.H	/^    DWORD SipHbPeriod;$/;"	m	struct:_NET_DEV_WSX_CFG
SipHbSvrIp	NET_DEV_STRUCT.H	/^    CHAR  SipHbSvrIp[64];$/;"	m	struct:_NET_DEV_WSX_CFG
SipHbSvrPort	NET_DEV_STRUCT.H	/^    DWORD SipHbSvrPort;$/;"	m	struct:_NET_DEV_WSX_CFG
SipPort	NET_DEV_STRUCT.H	/^    DWORD SipPort;$/;"	m	struct:_NET_DEV_WSX_CFG
SipRegSvrIp	NET_DEV_STRUCT.H	/^    CHAR  SipRegSvrIp[64];$/;"	m	struct:_NET_DEV_WSX_CFG
SipRegSvrPort	NET_DEV_STRUCT.H	/^    DWORD SipRegSvrPort;$/;"	m	struct:_NET_DEV_WSX_CFG
Size	NET_DEV_STRUCT.H	/^    DWORD Size;                         \/*帧数据长度*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
Size	NET_DEV_STRUCT.H	/^    DWORD Size;             \/\/$/;"	m	struct:_NET_DEV_CPC_TARGET
Size	NET_DEV_STRUCT.H	/^    DWORD Size;           \/\/ 该目标信息总长度，包括Size本身$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Size	NET_DEV_STRUCT.H	/^    WORD Size;                         \/*Meta私有数据长度, 0:无*\/$/;"	m	struct:_NET_DEV_MEDIA_METAPARAM
SizeFilter	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_FILTER_RULE SizeFilter;$/;"	m	struct:_NET_DEV_PEAOSC_RULE_LIMIT
SmoothFlag	NET_DEV_STRUCT.H	/^    BYTE  SmoothFlag;\/* 平滑标记  0:不平滑  1:平滑 *\/$/;"	m	struct:_NET_DEV_WSX_CFG
SnapChannMask	NET_DEV_STRUCT.H	/^    BYTE SnapChannMask[NET_DEV_MAX_CHANN_NUM];		\/\/联动抓拍通道$/;"	m	struct:_NET_DEV_ALARM_HANDLE
SoftwareDate	NET_DEV_STRUCT.H	/^    CHAR SoftwareDate[NET_DEV_DATE_LEN];		\/\/ 软件生成日期$/;"	m	struct:_NET_DEV_VERSION
SoftwareVer	NET_DEV_STRUCT.H	/^    CHAR SoftwareVer[NET_DEV_VERSION_LEN];		\/\/ 软件版本$/;"	m	struct:_NET_DEV_SADPCMSINFO
SoftwareVer	NET_DEV_STRUCT.H	/^    CHAR SoftwareVer[NET_DEV_VERSION_LEN];		\/\/ 软件版本号$/;"	m	struct:_NET_DEV_VERSION
SoftwareVer	NET_DEV_STRUCT.H	/^    CHAR SoftwareVer[NET_DEV_VERSION_LEN];$/;"	m	struct:_NET_DEV_SADPINFO
Speed	NET_DEV_STRUCT.H	/^    DWORD Speed;		\/\/ 调用速度 0 - 100$/;"	m	struct:_NET_DEV_PTZ_CONTROL
Speed	NET_DEV_STRUCT.H	/^    WORD Speed;		\/\/移动速度$/;"	m	struct:_NET_DEV_PTZ_CRUISEPOINT
StandbyTime	NET_DEV_STRUCT.H	/^    BYTE StandbyTime;		\/\/ 菜单待机时间 1~60分钟  0: 表示不待机$/;"	m	struct:_NET_DEV_NVRCFG
Start	NET_DEV_STRUCT.H	/^    NET_DEV_POINT Start;$/;"	m	struct:_NET_DEV_LINE
StartHour	NET_DEV_STRUCT.H	/^    BYTE StartHour;		\/\/开始时间$/;"	m	struct:_NET_DEV_TIMESEG
StartMin	NET_DEV_STRUCT.H	/^    BYTE StartMin;$/;"	m	struct:_NET_DEV_TIMESEG
State	NET_DEV_STRUCT.H	/^    DWORD State;		\/\/NET_DEV_DISK_STATE$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
State	NET_DEV_STRUCT.H	/^    DWORD State;		\/\/硬盘状态 0－正在使用；1－未挂载；2－已挂载未使用, 3 -休眠$/;"	m	struct:_NET_DEV_DISKSTATE
State	NET_DEV_STRUCT.H	/^    WORD State;		\/\/连接状态，1-CMS已连接  0-未连接$/;"	m	struct:_NET_DEV_CMS_CFG
StateType	NET_DEV_STRUCT.H	/^    DWORD StateType;		\/\/NET_DEV_STATE_IDX$/;"	m	struct:_NET_DEV_STATE_QUERY_REQ
StateType	NET_DEV_STRUCT.H	/^    DWORD StateType;		\/\/NET_DEV_STATE_IDX$/;"	m	struct:_NET_DEV_STATE_QUERY_RSP
States	NET_DEV_STRUCT.H	/^    NET_DEV_CHANNSTATE States[NET_DEV_MAX_CHANN_NUM];		\/\/通道状态$/;"	m	struct:_NET_DEV_CHANNSTATES
States	NET_DEV_STRUCT.H	/^    NET_DEV_DISKSTATE States[NET_DEV_MAX_NET_DISK];		\/\/硬盘状态$/;"	m	struct:_NET_DEV_DISKSTATES
States	NET_DEV_STRUCT.H	/^    } States;$/;"	m	struct:_NET_DEV_STATE_QUERY_RSP	typeref:union:_NET_DEV_STATE_QUERY_RSP::__anon59
Step	NET_DEV_STRUCT.H	/^    DWORD Step;		\/\/步序号（单步填1）$/;"	m	struct:_NET_DEV_DEC_TVWPLAY
StepCount	NET_DEV_STRUCT.H	/^    DWORD StepCount;		\/\/巡航点数量$/;"	m	struct:_NET_DEV_PTZ_CRUISEWAY
Steps	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_CRUISEPOINT Steps[NET_DEV_MAX_CRZ_STEP_NUM];		\/\/巡航点集合(路径)$/;"	m	struct:_NET_DEV_PTZ_CRUISEWAY
StopBit	NET_DEV_STRUCT.H	/^    BYTE StopBit;		\/\/ 停止位   请参考 NET_DEV_RS232_CFG 定义解释$/;"	m	struct:_NET_DEV_PTZ_CFG
StopBit	NET_DEV_STRUCT.H	/^    BYTE StopBit;		\/\/停止位 1, 2$/;"	m	struct:_NET_DEV_SERIAL_CFG
StreamCount	NET_DEV_STRUCT.H	/^    BYTE StreamCount;		\/\/ 码流个数$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
StreamMixType	NET_DEV_STRUCT.H	/^    DWORD StreamMixType;		\/\/码流模式NET_DEV_STREAM_MIX_TYPE$/;"	m	struct:_NET_DEV_ENCODEPARAM
StreamType	NET_DEV_STRUCT.H	/^    BYTE StreamType;$/;"	m	struct:_NET_DEV_MANUL_SNAPPIC_REQ
StreamType	NET_DEV_STRUCT.H	/^    DWORD StreamType;		\/\/码流类型$/;"	m	struct:_NET_DEV_MEDIA_URL
StreamType	NET_DEV_STRUCT.H	/^    WORD StreamType;		\/\/码流类型: NET_DEV_STREAM_TYPE$/;"	m	struct:_NET_DEV_RECORD
SubCustomDir	NET_DEV_STRUCT.H	/^    CHAR SubCustomDir[NET_DEV_MAX_PATH_LEN];		\/\/自定义二级目录$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
SubDirMode	NET_DEV_STRUCT.H	/^    BYTE SubDirMode;		\/\/二级目录：0x1- 使用通道名，0x2- 使用通道号，0x3- 使用时间(年月日)，0x4- 使用车道号，0x5- 使用自定义$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
SubmitAlarm	NET_DEV_STRUCT.H	/^    BYTE SubmitAlarm;		\/\/ 客户端\/平台是否上报告警NET_DEV_ALARM_TYPE_PEA_OSC$/;"	m	struct:_NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE
Subscribe	NET_DEV_STRUCT.H	/^    DWORD Subscribe;		\/\/ 是否订阅告警信息$/;"	m	struct:_NET_DEV_ALARMSUBSCRIBE
SwitchMethod	NET_DEV_STRUCT.H	/^    BYTE SwitchMethod;		\/\/ switch methold: 0: auto switch;1：3G优先，2: manual switch to 2G; 3: manual switch to 3G;$/;"	m	struct:_NET_DEV_DIALPARAM
SystemCap	NET_DEV_STRUCT.H	/^    DWORD SystemCap;		\/\/ 系统能力 NET_DEV_SYS_CAP$/;"	m	struct:_NET_DEV_CAPABILITIES
TEST_COMPANY	BaseType.h	128;"	d
TEST_DEBUG	BaseType.h	233;"	d
TEST_FILE_PATH	main.c	/^static char TEST_FILE_PATH[4096] = {0};$/;"	v	file:
TEST_PSFILE_PATH	main.c	/^static char TEST_PSFILE_PATH[4096] = {0};$/;"	v	file:
TEST_TALK_FILE	main.c	/^static char TEST_TALK_FILE[4096] = {0};$/;"	v	file:
TRUE	NET_DEV_STRUCT.H	36;"	d
Take	NET_DEV_STRUCT.H	/^        NET_DEV_TAKE_RULE Take;$/;"	m	union:_NET_DEV_PEAOSC_RULE_PARAM::__anon56
TargetFilter	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_TARGET_FILTER TargetFilter;$/;"	m	struct:_NET_DEV_PEAOSC_RULE_LIMIT
TargetId	NET_DEV_STRUCT.H	/^    DWORD TargetId;   \/\/事件触发目标ID$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
TargetNum	NET_DEV_STRUCT.H	/^  BYTE TargetNum;     \/\/ 包含目标个数(Mask & 0x1 == 1时有效) <= NET_DEV_MAX_PEAOSC_TARGET_NUM\/NET_DEV_MAX_CPC_TARGET_NUM$/;"	m	struct:_NET_DEV_MEDIA_IVS_HDR
TargetSize	NET_DEV_STRUCT.H	/^    DWORD TargetSize;       \/\/ 目标（人）头（方形框）尺寸, 介于最小最大之间$/;"	m	struct:_NET_DEV_CPC_TARGET
TaskCount	NET_DEV_STRUCT.H	/^    DWORD TaskCount;		\/\/任务个数$/;"	m	struct:_NET_DEV_PTZ_TIME_TASK
Tasks	NET_DEV_STRUCT.H	/^    NET_DEV_PTZ_SCHEDTASK Tasks[NET_DEV_PTZ_SCHTASKS_NUM];		\/\/任务$/;"	m	struct:_NET_DEV_PTZ_TIME_TASK
TelNumber	NET_DEV_STRUCT.H	/^    CHAR TelNumber[NET_DEV_PHONENUMBER_LEN];		\/\/电话号码$/;"	m	struct:_NET_DEV_PPPCFG
TextData	NET_DEV_STRUCT.H	/^    CHAR TextData[NET_DEV_OSD_TEXT_LEN];$/;"	m	struct:_NET_DEV_VENC_OSD_TEXT
TextEnable	NET_DEV_STRUCT.H	/^    DWORD TextEnable;	\/\/是否显示文本；1：显示，0：隐藏$/;"	m	struct:_NET_DEV_VENC_OSD_TEXT
TextH	NET_DEV_STRUCT.H	/^    DWORD TextH;		\/\/文本高度(获取有效)$/;"	m	struct:_NET_DEV_VENC_OSD_TEXT
TextW	NET_DEV_STRUCT.H	/^    DWORD TextW;		\/\/文本宽度(获取有效)$/;"	m	struct:_NET_DEV_VENC_OSD_TEXT
TextX	NET_DEV_STRUCT.H	/^    DWORD TextX;		\/\/文本坐标X$/;"	m	struct:_NET_DEV_VENC_OSD_TEXT
TextY	NET_DEV_STRUCT.H	/^    DWORD TextY;		\/\/文本坐标Y$/;"	m	struct:_NET_DEV_VENC_OSD_TEXT
Texts	NET_DEV_STRUCT.H	/^    NET_DEV_VENC_OSD_TEXT Texts[NET_DEV_OSD_TEXT_NUM];$/;"	m	struct:_NET_DEV_VENC_OSD
Third	NET_DEV_STRUCT.H	/^    NET_DEV_ENCODEPARAM Third;		\/\/第三码流  编码参数$/;"	m	struct:_NET_DEV_ENCODECFG
Time	NET_DEV_STRUCT.H	/^    DWORD Time;		\/\/图片生成时间$/;"	m	struct:_NET_DEV_PIC_ITEM
Time	NET_DEV_STRUCT.H	/^    DWORD Time;$/;"	m	struct:_NET_DEV_ALARM_ITEM
Time	NET_DEV_STRUCT.H	/^    DWORD Time;$/;"	m	struct:_NET_DEV_LOG_ITEM
Time	NET_DEV_STRUCT.H	/^    DWORD Time;$/;"	m	struct:_NET_DEV_RECORD_OUTLINE_ITEM
TimeEnable	NET_DEV_STRUCT.H	/^    DWORD TimeEnable;		\/\/是否显示时间；1：显示，0：隐藏$/;"	m	struct:_NET_DEV_VENC_OSD
TimeEx	NET_DEV_STRUCT.H	/^    NET_DEV_TIME_EX TimeEx;		\/\/ 系统时间$/;"	m	struct:_NET_DEV_KEEPALIVE_RSP
TimeFilter	NET_DEV_STRUCT.H	/^    NET_DEV_PEAOSC_TIME_FILTER TimeFilter;$/;"	m	struct:_NET_DEV_PEAOSC_RULE_LIMIT
TimeH	NET_DEV_STRUCT.H	/^    DWORD TimeH;		\/\/时间高度(获取有??)$/;"	m	struct:_NET_DEV_VENC_OSD
TimeW	NET_DEV_STRUCT.H	/^    DWORD TimeW;		\/\/时间宽度(获取有效)$/;"	m	struct:_NET_DEV_VENC_OSD
TimeX	NET_DEV_STRUCT.H	/^    DWORD TimeX;		\/\/时间坐标X$/;"	m	struct:_NET_DEV_VENC_OSD
TimeY	NET_DEV_STRUCT.H	/^    DWORD TimeY;		\/\/时间坐标Y$/;"	m	struct:_NET_DEV_VENC_OSD
TimeZone	NET_DEV_STRUCT.H	/^    DWORD TimeZone;		\/\/时区$/;"	m	struct:_NET_DEV_NTPCFG
TimerParam	NET_DEV_STRUCT.H	/^    NET_DEV_SNAPPIC_TIMERPARAM TimerParam;		\/\/定时抓拍参数$/;"	m	struct:_NET_DEV_SNAPPIC
Times	NET_DEV_STRUCT.H	/^    BYTE Times;		\/\/抓拍张数$/;"	m	struct:_NET_DEV_SNAPPIC_ALARMPARAM
Timestamp	NET_DEV_STRUCT.H	/^    DWORD Timestamp;                    \/*时间戳 MS*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
ToAddr1	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR ToAddr1;		\/\/接受邮件地址1$/;"	m	struct:_NET_DEV_SMTP_CFG
ToAddr2	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR ToAddr2;		\/\/接受邮件地址2$/;"	m	struct:_NET_DEV_SMTP_CFG
ToAddr3	NET_DEV_STRUCT.H	/^    NET_DEV_DOMAINADDR ToAddr3;		\/\/接受邮件地址3$/;"	m	struct:_NET_DEV_SMTP_CFG
Top	NET_DEV_STRUCT.H	/^    WORD Top;$/;"	m	struct:_NET_DEV_RECT
TopCustomDir	NET_DEV_STRUCT.H	/^    CHAR TopCustomDir[NET_DEV_MAX_PATH_LEN];		\/\/自定义一级目录$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
TopDirMode	NET_DEV_STRUCT.H	/^    BYTE TopDirMode;		\/\/一级目录：0x1- 使用设备名，0x2- 使用设备号，0x3- 使用设备ip地址，0x4- 使用监测点，0x5- 使用时间(年月)，0x6- 使用自定义$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
TotalCount	NET_DEV_STRUCT.H	/^    DWORD TotalCount;$/;"	m	struct:_NET_DEV_DEC_DIVMODE_QUERY_RSP
TotalCount	NET_DEV_STRUCT.H	/^    DWORD TotalCount;$/;"	m	struct:_NET_DEV_LOG_QUERY_RSP
TotalCount	NET_DEV_STRUCT.H	/^    DWORD TotalCount;$/;"	m	struct:_NET_DEV_PIC_QUERY_RSP
TotalCount	NET_DEV_STRUCT.H	/^    DWORD TotalCount;$/;"	m	struct:_NET_DEV_RECORD_QUERY_RSP
TotalSize	NET_DEV_STRUCT.H	/^    DWORD TotalSize;		\/\/磁盘容量 单位M$/;"	m	struct:_NET_DEV_PHY_DISK_INFO
Track	NET_DEV_STRUCT.H	/^    BYTE Track;          \/\/ 是否有轨迹信息$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
TrackNum	NET_DEV_STRUCT.H	/^    BYTE TrackNum;       \/\/ 轨迹点个数, Track为1时有效$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
TrafficClass	NET_DEV_STRUCT.H	/^    BYTE TrafficClass;		\/\/ 0: conversationnal; 1: streaming; 2: interactive;3: background; 4: subscribed value(default)$/;"	m	struct:_NET_DEV_QOSPARAM
TransProtol	NET_DEV_STRUCT.H	/^    DWORD TransProtol;		\/\/音视频传输协议 NET_DEV_TRANSPROTOL$/;"	m	struct:_NET_DEV_REMOTE_CHANNEL
TransProtol	NET_DEV_STRUCT.H	/^    WORD TransProtol;		\/\/接入协议，NET_DEV_TRANSPROTOL$/;"	m	struct:_NET_DEV_CMS_CFG
TripWire	NET_DEV_STRUCT.H	/^        NET_DEV_TRIPWIRE_RULE TripWire;$/;"	m	union:_NET_DEV_PEAOSC_RULE_PARAM::__anon56
TryLockP2PLock	BaseType.h	199;"	d
TryLockP2PLock	BaseType.h	205;"	d
TskMedia	main.c	/^static void *TskMedia(void * pArgs) $/;"	f	file:
Type	NET_DEV_STRUCT.H	/^    BYTE Type;                          \/*帧类型*\/$/;"	m	struct:_NET_DEV_MEDIA_FRAMEHEADER
Type	NET_DEV_STRUCT.H	/^    BYTE Type;           \/\/ 目标类型人，车等 0XFF: 所有类型\/未知类型,1 人2 车$/;"	m	struct:_NET_DEV_PEAOSC_TARGET
Type	NET_DEV_STRUCT.H	/^    BYTE Type;    \/\/reserved$/;"	m	struct:_NET_DEV_CPC_RESULT_RULE
Type	NET_DEV_STRUCT.H	/^    DWORD Type;		\/\/ AVD-->NET_DEV_AVD_TYPE, PEAOSC-->NET_DEV_PEAOSC_EVENT_TYPE$/;"	m	struct:_NET_DEV_ALARM_DESC
Type	NET_DEV_STRUCT.H	/^    DWORD Type;		\/\/ 数据类型 NET_DEV_DEC_BIND_TYPE$/;"	m	struct:_NET_DEV_DEC_BIND
Type	NET_DEV_STRUCT.H	/^    DWORD Type;		\/\/ 数据类型 NET_DEV_DEC_BIND_TYPE$/;"	m	struct:_NET_DEV_DEC_BIND_Q
Type	NET_DEV_STRUCT.H	/^    DWORD Type;		\/\/通道类型，NET_DEV_CHANNEL_TYPE$/;"	m	struct:_NET_DEV_NVR_CHANNEL
Type	NET_DEV_STRUCT.H	/^    DWORD Type;       \/\/事件类型  NET_DEV_PEAOSC_EVENT_TYPE$/;"	m	struct:_NET_DEV_PEAOSC_EVENT
Type	NET_DEV_STRUCT.H	/^    WORD Type;		\/\/DDNS类型 NET_DEV_DDNS_TYPE$/;"	m	struct:_NET_DEV_DDNS_CFG
Type	NET_DEV_STRUCT.H	/^    WORD Type;		\/\/报警协议类型$/;"	m	struct:_NET_DEV_ALARMHOST_CFG
Type	NET_DEV_STRUCT.H	/^    WORD Type;                          \/* Meta帧类型 NET_DEV_META_FRAMETYPE *\/$/;"	m	struct:_NET_DEV_MEDIA_MFRAMEEXT
TypeMask	NET_DEV_STRUCT.H	/^    DWORD TypeMask;		\/\/NET_DEV_ALARM_HANDLE_TYPE$/;"	m	struct:_NET_DEV_ALARM_HANDLE
UCHAR	BaseType.h	/^typedef unsigned char			UCHAR;$/;"	t
UDP_CONNECT	BaseType.h	63;"	d
UDP_IPADDR	BaseType.h	65;"	d
UDP_PORT	BaseType.h	66;"	d
UINT	NET_DEV_STRUCT.H	/^typedef  unsigned int       UINT;$/;"	t
UINT16	BaseType.h	/^typedef unsigned short			UINT16;$/;"	t
UINT32	BaseType.h	/^typedef unsigned int			UINT32;$/;"	t
UINT64	BaseType.h	/^typedef unsigned __int64      UINT64;$/;"	t
UINT64	NET_DEV_STRUCT.H	/^typedef  unsigned __int64 UINT64;$/;"	t
UINT64	NET_DEV_STRUCT.H	/^typedef  unsigned long long UINT64;$/;"	t
UINT8	BaseType.h	/^typedef unsigned char			UINT8;$/;"	t
USE_ARES	curl/Makefile	/^USE_ARES = $/;"	m
USE_BEARSSL	curl/Makefile	/^USE_BEARSSL = $/;"	m
USE_GNUTLS	curl/Makefile	/^USE_GNUTLS = $/;"	m
USE_GNUTLS_NETTLE	curl/Makefile	/^USE_GNUTLS_NETTLE = $/;"	m
USE_LIBRTMP	curl/Makefile	/^USE_LIBRTMP = $/;"	m
USE_LIBSSH	curl/Makefile	/^USE_LIBSSH = $/;"	m
USE_LIBSSH2	curl/Makefile	/^USE_LIBSSH2 = $/;"	m
USE_MBEDTLS	curl/Makefile	/^USE_MBEDTLS = $/;"	m
USE_MESALINK	curl/Makefile	/^USE_MESALINK = $/;"	m
USE_NGHTTP2	curl/Makefile	/^USE_NGHTTP2 = $/;"	m
USE_NGHTTP3	curl/Makefile	/^USE_NGHTTP3 = $/;"	m
USE_NGTCP2	curl/Makefile	/^USE_NGTCP2 = $/;"	m
USE_NGTCP2_CRYPTO_GNUTLS	curl/Makefile	/^USE_NGTCP2_CRYPTO_GNUTLS = $/;"	m
USE_NGTCP2_CRYPTO_OPENSSL	curl/Makefile	/^USE_NGTCP2_CRYPTO_OPENSSL = $/;"	m
USE_NSS	curl/Makefile	/^USE_NSS = $/;"	m
USE_OPENLDAP	curl/Makefile	/^USE_OPENLDAP = $/;"	m
USE_QUICHE	curl/Makefile	/^USE_QUICHE = $/;"	m
USE_SCHANNEL	curl/Makefile	/^USE_SCHANNEL = $/;"	m
USE_SECTRANSP	curl/Makefile	/^USE_SECTRANSP = $/;"	m
USE_UNIX_SOCKETS	curl/Makefile	/^USE_UNIX_SOCKETS = 1$/;"	m
USE_WINDOWS_SSPI	curl/Makefile	/^USE_WINDOWS_SSPI = $/;"	m
USE_WOLFSSH	curl/Makefile	/^USE_WOLFSSH = $/;"	m
USE_WOLFSSL	curl/Makefile	/^USE_WOLFSSL = $/;"	m
USHORT	NET_DEV_STRUCT.H	/^typedef  unsigned short     USHORT;$/;"	t
UTCTime	NET_DEV_STRUCT.H	/^    DWORD UTCTime;		\/\/上报时的UTC时(网络字节序)$/;"	m	struct:_NET_DEV_EXT_POSITIONINFO
UTCTime	NET_DEV_STRUCT.H	/^    DWORD UTCTime;                      \/* UTC时间 *\/$/;"	m	struct:_NET_DEV_MEDIA_MFRAMEEXT
UTCTime	NET_DEV_STRUCT.H	/^    DWORD UTCTime;$/;"	m	struct:_NET_DEV_MEDIA_VFRAMEEXT
UTCTime	NET_DEV_STRUCT.H	/^    DWORD UTCTime;$/;"	m	struct:_NET_DEV_PF_CMSTIME
UTCTime	NET_DEV_STRUCT.H	/^    DWORD UTCTime;$/;"	m	struct:_NET_DEV_PF_KEEPALIVE_RSP
UimNumber	NET_DEV_STRUCT.H	/^    CHAR UimNumber[NET_DEV_PHONENUMBER_LEN];$/;"	m	struct:_NET_DEV_DIALPARAM
UnLockP2PLock	BaseType.h	200;"	d
UnLockP2PLock	BaseType.h	206;"	d
UpdateInterval	NET_DEV_STRUCT.H	/^    DWORD UpdateInterval;		\/\/对时间隔$/;"	m	struct:_NET_DEV_NTPCFG
UpdateInterval	NET_DEV_STRUCT.H	/^    WORD UpdateInterval;		\/\/更新时间$/;"	m	struct:_NET_DEV_DDNS_CFG
UpnpState	NET_DEV_STRUCT.H	/^        NET_DEV_UPNP_STATE UpnpState;$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
Url	NET_DEV_STRUCT.H	/^    CHAR Url[NET_DEV_MAX_URL_LEN];		\/\/编码器URL（为NULL则在当前分割窗口显示黑屏）$/;"	m	struct:_NET_DEV_DEC_DIVINFO
Url	NET_DEV_STRUCT.H	/^    CHAR Url[NET_DEV_MAX_URL_LEN];		\/\/返回的URL$/;"	m	struct:_NET_DEV_MEDIA_URL
UsbCount	NET_DEV_STRUCT.H	/^    BYTE UsbCount;		\/\/ USB口的个数$/;"	m	struct:_NET_DEV_CAPABILITIES
Used	NET_DEV_STRUCT.H	/^    BYTE  Used[1];$/;"	m	struct:_NET_DEV_WSX_CFG
User	NET_DEV_STRUCT.H	/^    NET_DEV_USER User;		\/\/ 用户名，密码$/;"	m	struct:_NET_DEV_LOGIN_REQ
UserCount	NET_DEV_STRUCT.H	/^    DWORD UserCount;$/;"	m	struct:_NET_DEV_USERSET
UserInfo	NET_DEV_STRUCT.H	/^    NET_DEV_USER_INFO UserInfo;		\/\/ 用户信息(包括权限)$/;"	m	struct:_NET_DEV_LOGIN_RSP
UserInfo	NET_DEV_STRUCT.H	/^    NET_DEV_USER_INFO UserInfo[NET_DEV_MAX_USER_NUM];$/;"	m	struct:_NET_DEV_USERSET
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/ user name, eg. "card"$/;"	m	struct:_NET_DEV_PPPDPARAM
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/ 用户名(SMB\/CIFS时生效)$/;"	m	struct:_NET_DEV_NAS_MOUNT_PARAM
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/PPP拨号账号$/;"	m	struct:_NET_DEV_PPPOECFG
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/操作用户 不指定为空$/;"	m	struct:_NET_DEV_LOG_COND
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/操作用户名$/;"	m	struct:_NET_DEV_LOG_ITEM
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/登陆用户名$/;"	m	struct:_NET_DEV_FTPUPLOAD_CFG
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/用户名$/;"	m	struct:_NET_DEV_PPPCFG
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/用户名$/;"	m	struct:_NET_DEV_USER
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/用户名$/;"	m	struct:_NET_DEV_USER_INFO
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/用户名称$/;"	m	struct:_NET_DEV_DDNS_CFG
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];		\/\/用户名称$/;"	m	struct:_NET_DEV_REMOTE_DEVICE
UserName	NET_DEV_STRUCT.H	/^    CHAR UserName[NET_DEV_USERNAME_LEN];$/;"	m	struct:_NET_DEV_MODIFY_NET
VERSION	curl/Makefile	/^VERSION = -$/;"	m
VERSIONNUM	curl/Makefile	/^VERSIONNUM = 074600$/;"	m
VERSION_NUM	BaseType.h	129;"	d
VERSION_STR	main.c	46;"	d	file:
VER_DATE_TIME	main.c	94;"	d	file:
Valid	NET_DEV_STRUCT.H	/^    DWORD Valid;		\/\/是否有效$/;"	m	struct:_NET_DEV_PTZ_CRUISE
Valid	NET_DEV_STRUCT.H	/^    DWORD Valid;		\/\/是否有效$/;"	m	struct:_NET_DEV_PTZ_PATTERN
Valid	NET_DEV_STRUCT.H	/^    DWORD Valid;		\/\/是否有效$/;"	m	struct:_NET_DEV_PTZ_PRESET
Verify	NET_DEV_STRUCT.H	/^    BYTE Verify;		\/\/ 校验     请参考 NET_DEV_RS232_CFG 定义解释$/;"	m	struct:_NET_DEV_PTZ_CFG
Verify	NET_DEV_STRUCT.H	/^    BYTE Verify;		\/\/校验位 0:无，1:奇校验 2:偶校验$/;"	m	struct:_NET_DEV_SERIAL_CFG
VerifyProtocal	NET_DEV_STRUCT.H	/^    BYTE VerifyProtocal;		\/\/ IPCP verify protocal: 0: auto; 1: CHAP; 2: PAP$/;"	m	struct:_NET_DEV_PPPDPARAM
Video	NET_DEV_STRUCT.H	/^        NET_DEV_MEDIA_VFRAMEEXT Video;  \/*视频扩展*\/$/;"	m	union:_NET_DEV_MEDIA_FRAMEHEADER::__anon60
Video	NET_DEV_STRUCT.H	/^    NET_DEV_MEDIA_VIDEOPARAM Video;  \/*音频媒体信息*\/$/;"	m	struct:_NET_DEV_MEDIA_PARAM
VideoConfCh	NET_DEV_STRUCT.H	/^    BYTE  VideoConfCh;$/;"	m	struct:_NET_DEV_WSX_CFG
VideoEncType	NET_DEV_STRUCT.H	/^    BYTE VideoEncType;		\/\/ 支持的视频编码集 NET_DEV_VENC_TYPE$/;"	m	struct:_NET_DEV_CH_CAPABILITIES
VideoEncodeType	NET_DEV_STRUCT.H	/^    DWORD VideoEncodeType;		\/\/视频编码类型, NET_DEV_VENC_TYPE$/;"	m	struct:_NET_DEV_ENCODEPARAM
VideoFormat	NET_DEV_STRUCT.H	/^    DWORD VideoFormat;		\/\/制式 'NET_DEV_VIDEOFORMAT'$/;"	m	struct:_NET_DEV_ENCODEPARAM
VideoMode	NET_DEV_STRUCT.H	/^    BYTE VideoMode;		\/\/ 视频制式,NET_DEV_VIDEOMODE$/;"	m	struct:_NET_DEV_BASECFG
Volume	NET_DEV_STRUCT.H	/^    DWORD Volume;		\/\/硬盘容量  M$/;"	m	struct:_NET_DEV_DISKSTATE
VoutCount	NET_DEV_STRUCT.H	/^    BYTE VoutCount;		\/\/ 视频输出口的个数$/;"	m	struct:_NET_DEV_CAPABILITIES
WHITE	BaseType.h	140;"	d
WINAPI	BaseType.h	167;"	d
WINAPI	BaseType.h	174;"	d
WINAPIV	BaseType.h	168;"	d
WINAPIV	BaseType.h	175;"	d
WORD	NET_DEV_STRUCT.H	/^typedef  unsigned short     WORD;$/;"	t
WORD	file.c	/^typedef 	unsigned short WORD;$/;"	t	file:
WdrMode	NET_DEV_STRUCT.H	/^    DWORD WdrMode;		\/\/宽动态模式 0自动   1 打开 2 关闭$/;"	m	struct:_NET_DEV_CAMERAPARAM
WdrStreng	NET_DEV_STRUCT.H	/^    DWORD WdrStreng;		\/\/0-255为宽动态强度$/;"	m	struct:_NET_DEV_CAMERAPARAM
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;		\/\/定时录像时间段$/;"	m	struct:_NET_DEV_RECORD
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;		\/\/定时抓拍时间段$/;"	m	struct:_NET_DEV_SNAPPIC
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_ALARMIN_ALARM
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_ALARMOUTCFG
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_AVD_CFG
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_CPC_CFG
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_HIDE_ALARM
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_LOST_ALARM
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_MOTION_ALARM
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_PEAOSC_CFG
Week	NET_DEV_STRUCT.H	/^    NET_DEV_WEEK Week;$/;"	m	struct:_NET_DEV_PIR_ALARM
Wep	NET_DEV_STRUCT.H	/^        NET_DEV_WIFI_WEP Wep;$/;"	m	union:_NET_DEV_WIFICFG::__anon53
Width	NET_DEV_STRUCT.H	/^    WORD  Width;                        \/*视频宽度*\/$/;"	m	struct:_NET_DEV_MEDIA_VFRAMEEXT
WifiLinkMode	NET_DEV_STRUCT.H	/^    BYTE WifiLinkMode;		\/\/ 0-normal(manual)   1-airlink$/;"	m	struct:_NET_DEV_WIFICFG
WifiNIC	NET_DEV_STRUCT.H	/^    NET_DEV_WIFINIC WifiNIC;$/;"	m	struct:_NET_DEV_MODIFY_NET
WifiNIC	NET_DEV_STRUCT.H	/^    NET_DEV_WIFINIC WifiNIC;$/;"	m	struct:_NET_DEV_SADPINFO
WifiNIC	NET_DEV_STRUCT.H	/^    NET_DEV_WIFINIC WifiNIC;$/;"	m	struct:_NET_DEV_WIFICFG
WorkMode	NET_DEV_STRUCT.H	/^    BYTE WorkMode;		\/\/工作模式: 0 －透明通道, 1 - PTZ 模式(使用PTZ中的串口参数), 3 - 报警盒模式$/;"	m	struct:_NET_DEV_SERIAL_CFG
WorkState	NET_DEV_STRUCT.H	/^        NET_DEV_WORKSTATE WorkState;$/;"	m	union:_NET_DEV_STATE_QUERY_RSP::__anon59
WpaEap	NET_DEV_STRUCT.H	/^        NET_DEV_WIFI_WPAEAP WpaEap;$/;"	m	union:_NET_DEV_WIFICFG::__anon53
WpaPsk	NET_DEV_STRUCT.H	/^        NET_DEV_WIFI_WPAPSK WpaPsk;$/;"	m	union:_NET_DEV_WIFICFG::__anon53
X	NET_DEV_STRUCT.H	/^    CHAR X[MAX_POSITIONVALUE_LEN];		\/\/X$/;"	m	struct:_NET_DEV_EXT_POSITIONINFO
X	NET_DEV_STRUCT.H	/^    WORD X;$/;"	m	struct:_NET_DEV_POINT
XGetErrno	BaseType.h	/^static INT32 XGetErrno(void)$/;"	f
XOffset	NET_DEV_STRUCT.H	/^    DWORD XOffset;$/;"	m	struct:_NET_DEV_PTZ_3D
XSleep	BaseType.h	/^static void XSleep(INT32 nSec, INT32 nUSec)$/;"	f
XUSleep	BaseType.h	/^static void XUSleep(UINT32 nMSec)$/;"	f
Y	NET_DEV_STRUCT.H	/^    CHAR Y[MAX_POSITIONVALUE_LEN];		\/\/Y$/;"	m	struct:_NET_DEV_EXT_POSITIONINFO
Y	NET_DEV_STRUCT.H	/^    WORD Y;$/;"	m	struct:_NET_DEV_POINT
YELLOW	BaseType.h	136;"	d
YOffset	NET_DEV_STRUCT.H	/^    DWORD YOffset;$/;"	m	struct:_NET_DEV_PTZ_3D
Year	NET_DEV_STRUCT.H	/^    WORD Year;		\/\/年$/;"	m	struct:_NET_DEV_TIME_EX
Z	NET_DEV_STRUCT.H	/^    CHAR Z[MAX_POSITIONVALUE_LEN];		\/\/Z$/;"	m	struct:_NET_DEV_EXT_POSITIONINFO
ZLIB_LIBS	curl/Makefile	/^ZLIB_LIBS = -lz$/;"	m
ZSH_FUNCTIONS_DIR	curl/Makefile	/^ZSH_FUNCTIONS_DIR = ${prefix}\/share\/zsh\/site-functions$/;"	m
Zone	NET_DEV_STRUCT.H	/^    DWORD Zone;		\/\/时区$/;"	m	struct:_NET_DEV_TIME_EX
_BASE_TYPE_H_	BaseType.h	3;"	d
_CRT_SECURE_NO_DEPRECATE	cJSON.c	28;"	d	file:
_DATA_MEMPOOL_H	mempool.h	2;"	d
_FIFOLIB_H_	fifolib.h	2;"	d
_GSF_DATA_PACKET_EOF	gsf_data_struct.h	/^typedef enum _GSF_DATA_PACKET_EOF$/;"	g
_GSF_DATA_PACKET_TYPE	gsf_data_struct.h	/^typedef enum _GSF_DATA_PACKET_TYPE$/;"	g
_GSF_DATA_TRANS_DIR	gsf_data_struct.h	/^typedef enum _GSF_DATA_TRANS_DIR$/;"	g
_GSF_DATA_TRANS_DOWN_TYPE	gsf_data_struct.h	/^typedef enum _GSF_DATA_TRANS_DOWN_TYPE$/;"	g
_GSF_DATA_TRANS_ID	gsf_data_struct.h	/^typedef enum _GSF_DATA_TRANS_ID$/;"	g
_GSF_DATA_TRANS_TALK_TYPE	gsf_data_struct.h	/^typedef enum _GSF_DATA_TRANS_TALK_TYPE$/;"	g
_GSF_DATA_TRANS_TYPE	gsf_data_struct.h	/^typedef enum _GSF_DATA_TRANS_TYPE$/;"	g
_GSF_NET_API_H	gsf_net_api.h	2;"	d
_GSF_SOCK_TYPE_	gsf_net_api.h	/^typedef enum _GSF_SOCK_TYPE_$/;"	g
_GsfLiveMedia	main.c	/^struct _GsfLiveMedia$/;"	s	file:
_HI_AUDIO_INFO_S	file.c	/^typedef struct _HI_AUDIO_INFO_S$/;"	s	file:
_HI_FRAME_HEAD_S	file.c	/^typedef struct _HI_FRAME_HEAD_S$/;"	s	file:
_HI_VIDEO_INFO_S	file.c	/^typedef struct _HI_VIDEO_INFO_S$/;"	s	file:
_NAL	NET_DEV_STRUCT.H	/^    struct _NAL$/;"	s	struct:_NET_DEV_MEDIA_NALDESC
_NET_DEV_AENC_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_AENC_TYPE$/;"	g
_NET_DEV_ALARMHOST_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARMHOST_CFG$/;"	s
_NET_DEV_ALARMIN_ALARM	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARMIN_ALARM$/;"	s
_NET_DEV_ALARMOUTCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARMOUTCFG$/;"	s
_NET_DEV_ALARMSUBSCRIBE	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARMSUBSCRIBE$/;"	s
_NET_DEV_ALARM_DESC	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARM_DESC$/;"	s
_NET_DEV_ALARM_HANDLE	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARM_HANDLE$/;"	s
_NET_DEV_ALARM_HANDLE_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_ALARM_HANDLE_TYPE$/;"	g
_NET_DEV_ALARM_ITEM	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARM_ITEM$/;"	s
_NET_DEV_ALARM_JOINT	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARM_JOINT$/;"	s
_NET_DEV_ALARM_MAJOR_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_ALARM_MAJOR_TYPE$/;"	g
_NET_DEV_ALARM_PTZ_ACTION	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARM_PTZ_ACTION$/;"	s
_NET_DEV_ALARM_SRC	NET_DEV_STRUCT.H	/^struct _NET_DEV_ALARM_SRC$/;"	s
_NET_DEV_ALARM_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_ALARM_TYPE$/;"	g
_NET_DEV_AREA	NET_DEV_STRUCT.H	/^struct _NET_DEV_AREA$/;"	s
_NET_DEV_AUDIOINPUTMODE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_AUDIOINPUTMODE$/;"	g
_NET_DEV_AVD_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_AVD_CFG$/;"	s
_NET_DEV_AVD_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_AVD_RULE$/;"	s
_NET_DEV_AVD_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_AVD_TYPE$/;"	g
_NET_DEV_BASECFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_BASECFG$/;"	s
_NET_DEV_BOOTGUIDE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_BOOTGUIDE$/;"	g
_NET_DEV_CAMERACFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_CAMERACFG$/;"	s
_NET_DEV_CAMERAPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_CAMERAPARAM$/;"	s
_NET_DEV_CAPABILITIES	NET_DEV_STRUCT.H	/^struct _NET_DEV_CAPABILITIES$/;"	s
_NET_DEV_CHANNEL_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_CHANNEL_TYPE$/;"	g
_NET_DEV_CHANNSTATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_CHANNSTATE$/;"	s
_NET_DEV_CHANNSTATES	NET_DEV_STRUCT.H	/^struct _NET_DEV_CHANNSTATES$/;"	s
_NET_DEV_CH_CAPABILITIES	NET_DEV_STRUCT.H	/^struct _NET_DEV_CH_CAPABILITIES$/;"	s
_NET_DEV_CMS_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_CMS_CFG$/;"	s
_NET_DEV_CONTROL	NET_DEV_STRUCT.H	/^struct _NET_DEV_CONTROL$/;"	s
_NET_DEV_CONTROL_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_CONTROL_TYPE$/;"	g
_NET_DEV_CPC_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_CPC_CFG$/;"	s
_NET_DEV_CPC_CROSS_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_CPC_CROSS_TYPE$/;"	g
_NET_DEV_CPC_EVENT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CPC_EVENT$/;"	s
_NET_DEV_CPC_RESULT_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CPC_RESULT_RULE$/;"	s
_NET_DEV_CPC_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_CPC_RULE$/;"	s
_NET_DEV_CPC_RULE_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_CPC_RULE_CFG$/;"	s
_NET_DEV_CPC_TARGET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_CPC_TARGET$/;"	s
_NET_DEV_CROSS_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_CROSS_TYPE$/;"	g
_NET_DEV_DAY	NET_DEV_STRUCT.H	/^struct _NET_DEV_DAY$/;"	s
_NET_DEV_DAYNIGHT	NET_DEV_STRUCT.H	/^struct _NET_DEV_DAYNIGHT$/;"	s
_NET_DEV_DDNS_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_DDNS_CFG$/;"	s
_NET_DEV_DDNS_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_DDNS_TYPE$/;"	g
_NET_DEV_DEC_ACTION	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_DEC_ACTION$/;"	g
_NET_DEV_DEC_BIND	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_BIND$/;"	s
_NET_DEV_DEC_BIND_Q	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_BIND_Q$/;"	s
_NET_DEV_DEC_BIND_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_DEC_BIND_TYPE$/;"	g
_NET_DEV_DEC_DIV	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_DIV$/;"	s
_NET_DEV_DEC_DIVID	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_DEC_DIVID$/;"	g
_NET_DEV_DEC_DIVINFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_DIVINFO$/;"	s
_NET_DEV_DEC_DIVMODE	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_DIVMODE$/;"	s
_NET_DEV_DEC_DIVMODE_QUERY_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_DIVMODE_QUERY_REQ$/;"	s
_NET_DEV_DEC_DIVMODE_QUERY_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_DIVMODE_QUERY_RSP$/;"	s
_NET_DEV_DEC_FULLSCREENINFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_FULLSCREENINFO$/;"	s
_NET_DEV_DEC_SCREEN	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_SCREEN$/;"	s
_NET_DEV_DEC_SCREENSTATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_SCREENSTATE$/;"	s
_NET_DEV_DEC_TVWPLAY	NET_DEV_STRUCT.H	/^struct _NET_DEV_DEC_TVWPLAY$/;"	s
_NET_DEV_DIALPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_DIALPARAM$/;"	s
_NET_DEV_DISKSTATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_DISKSTATE$/;"	s
_NET_DEV_DISKSTATES	NET_DEV_STRUCT.H	/^struct _NET_DEV_DISKSTATES$/;"	s
_NET_DEV_DISK_STATE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_DISK_STATE$/;"	g
_NET_DEV_DISK_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_DISK_TYPE$/;"	g
_NET_DEV_DOMAINADDR	NET_DEV_STRUCT.H	/^struct _NET_DEV_DOMAINADDR$/;"	s
_NET_DEV_ENCODECFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_ENCODECFG$/;"	s
_NET_DEV_ENCODELEVEL	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_ENCODELEVEL$/;"	g
_NET_DEV_ENCODEPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_ENCODEPARAM$/;"	s
_NET_DEV_ETHCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_ETHCFG$/;"	s
_NET_DEV_EXCEPTION	NET_DEV_STRUCT.H	/^struct _NET_DEV_EXCEPTION$/;"	s
_NET_DEV_EXCEPTION_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_EXCEPTION_TYPE$/;"	g
_NET_DEV_EXT_POSITIONINFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_EXT_POSITIONINFO$/;"	s
_NET_DEV_EXT_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_EXT_TYPE$/;"	g
_NET_DEV_FILESYSTEM_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_FILESYSTEM_TYPE$/;"	g
_NET_DEV_FORMATDISK_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_FORMATDISK_REQ$/;"	s
_NET_DEV_FORMATDISK_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_FORMATDISK_RSP$/;"	s
_NET_DEV_FTPUPLOAD_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_FTPUPLOAD_CFG$/;"	s
_NET_DEV_GB28181_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_GB28181_CFG$/;"	s
_NET_DEV_HIDE_ALARM	NET_DEV_STRUCT.H	/^struct _NET_DEV_HIDE_ALARM$/;"	s
_NET_DEV_IMAGERESOLUTION	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_IMAGERESOLUTION$/;"	g
_NET_DEV_IMA_CAP	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_IMA_CAP$/;"	g
_NET_DEV_IPADDR	NET_DEV_STRUCT.H	/^struct _NET_DEV_IPADDR$/;"	s
_NET_DEV_IRIS_CAL_STATE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_IRIS_CAL_STATE$/;"	g
_NET_DEV_IVS_CAP	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_IVS_CAP$/;"	g
_NET_DEV_IVS_CONFIG	NET_DEV_PU_SDK.H	/^struct _NET_DEV_IVS_CONFIG$/;"	s
_NET_DEV_KEEPALIVE_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_KEEPALIVE_RSP$/;"	s
_NET_DEV_LANGUAGE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LANGUAGE$/;"	g
_NET_DEV_LEFT_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_LEFT_RULE$/;"	s
_NET_DEV_LINE	NET_DEV_STRUCT.H	/^struct _NET_DEV_LINE$/;"	s
_NET_DEV_LOGIN_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOGIN_REQ$/;"	s
_NET_DEV_LOGIN_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOGIN_RSP$/;"	s
_NET_DEV_LOG_COND	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOG_COND$/;"	s
_NET_DEV_LOG_ITEM	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOG_ITEM$/;"	s
_NET_DEV_LOG_MAJOR_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_MAJOR_TYPE$/;"	g
_NET_DEV_LOG_MINOR_ALARM_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_MINOR_ALARM_TYPE$/;"	g
_NET_DEV_LOG_MINOR_EXCEPTION_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_MINOR_EXCEPTION_TYPE$/;"	g
_NET_DEV_LOG_MINOR_OPERATE_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_MINOR_OPERATE_TYPE$/;"	g
_NET_DEV_LOG_MINOR_PARAM_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_MINOR_PARAM_TYPE$/;"	g
_NET_DEV_LOG_MINOR_SYS_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_MINOR_SYS_TYPE$/;"	g
_NET_DEV_LOG_OPERATE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_LOG_OPERATE$/;"	g
_NET_DEV_LOG_QUERY_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOG_QUERY_REQ$/;"	s
_NET_DEV_LOG_QUERY_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOG_QUERY_RSP$/;"	s
_NET_DEV_LOST_ALARM	NET_DEV_STRUCT.H	/^struct _NET_DEV_LOST_ALARM$/;"	s
_NET_DEV_MANUL_SNAPPIC_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_MANUL_SNAPPIC_REQ$/;"	s
_NET_DEV_MANUL_SNAPPIC_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_MANUL_SNAPPIC_RSP$/;"	s
_NET_DEV_MEDIA_AFRAMEEXT	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_AFRAMEEXT$/;"	s
_NET_DEV_MEDIA_AUDIOPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_AUDIOPARAM$/;"	s
_NET_DEV_MEDIA_ENCODETYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_MEDIA_ENCODETYPE$/;"	g
_NET_DEV_MEDIA_FRAME	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_FRAME$/;"	s
_NET_DEV_MEDIA_FRAMEHEADER	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_FRAMEHEADER$/;"	s
_NET_DEV_MEDIA_FRAMETYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_MEDIA_FRAMETYPE$/;"	g
_NET_DEV_MEDIA_IVS_HDR	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_MEDIA_IVS_HDR$/;"	s
_NET_DEV_MEDIA_METAPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_METAPARAM$/;"	s
_NET_DEV_MEDIA_MFRAMEEXT	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_MFRAMEEXT$/;"	s
_NET_DEV_MEDIA_NALDESC	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_NALDESC$/;"	s
_NET_DEV_MEDIA_PARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_PARAM$/;"	s
_NET_DEV_MEDIA_PICPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_PICPARAM$/;"	s
_NET_DEV_MEDIA_SAMPLERATE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_MEDIA_SAMPLERATE$/;"	g
_NET_DEV_MEDIA_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_MEDIA_TYPE$/;"	g
_NET_DEV_MEDIA_URL	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_URL$/;"	s
_NET_DEV_MEDIA_URL_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_MEDIA_URL_TYPE$/;"	g
_NET_DEV_MEDIA_VFRAMEEXT	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_VFRAMEEXT$/;"	s
_NET_DEV_MEDIA_VIDEOPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_MEDIA_VIDEOPARAM$/;"	s
_NET_DEV_META_FRAMETYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_META_FRAMETYPE$/;"	g
_NET_DEV_MODIFY_NET	NET_DEV_STRUCT.H	/^struct _NET_DEV_MODIFY_NET$/;"	s
_NET_DEV_MOTION_ALARM	NET_DEV_STRUCT.H	/^struct _NET_DEV_MOTION_ALARM$/;"	s
_NET_DEV_MSG_ID	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_MSG_ID$/;"	g
_NET_DEV_NAS_MOUNT_PARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_NAS_MOUNT_PARAM$/;"	s
_NET_DEV_NETSTATES	NET_DEV_STRUCT.H	/^struct _NET_DEV_NETSTATES$/;"	s
_NET_DEV_NET_DISKCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_NET_DISKCFG$/;"	s
_NET_DEV_NET_SINGLE_DISK	NET_DEV_STRUCT.H	/^struct _NET_DEV_NET_SINGLE_DISK$/;"	s
_NET_DEV_NICCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_NICCFG$/;"	s
_NET_DEV_NIC_IDX	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_NIC_IDX$/;"	g
_NET_DEV_NIC_STATE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_NIC_STATE$/;"	g
_NET_DEV_NTPCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_NTPCFG$/;"	s
_NET_DEV_NVRCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_NVRCFG$/;"	s
_NET_DEV_NVR_CHANNEL	NET_DEV_STRUCT.H	/^struct _NET_DEV_NVR_CHANNEL$/;"	s
_NET_DEV_NVR_DEVLIST_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_NVR_DEVLIST_REQ$/;"	s
_NET_DEV_NVR_DEVLIST_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_NVR_DEVLIST_RSP$/;"	s
_NET_DEV_PARAM_ID	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PARAM_ID$/;"	g
_NET_DEV_PARAM_QUERY	NET_DEV_STRUCT.H	/^struct _NET_DEV_PARAM_QUERY$/;"	s
_NET_DEV_PEAOSC_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_CFG$/;"	s
_NET_DEV_PEAOSC_EVENT	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_EVENT$/;"	s
_NET_DEV_PEAOSC_EVENT_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PEAOSC_EVENT_TYPE$/;"	g
_NET_DEV_PEAOSC_FILTER_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_FILTER_RULE$/;"	s
_NET_DEV_PEAOSC_RESULT_RULE	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_RESULT_RULE$/;"	s
_NET_DEV_PEAOSC_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_RULE$/;"	s
_NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_RULE_EXCEPTION_HANDLE$/;"	s
_NET_DEV_PEAOSC_RULE_LIMIT	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_RULE_LIMIT$/;"	s
_NET_DEV_PEAOSC_RULE_PARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_RULE_PARAM$/;"	s
_NET_DEV_PEAOSC_RULE_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PEAOSC_RULE_TYPE$/;"	g
_NET_DEV_PEAOSC_SIZE_FILTER	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_SIZE_FILTER$/;"	s
_NET_DEV_PEAOSC_TARGET	NET_DEV_STRUCT.H	/^typedef struct _NET_DEV_PEAOSC_TARGET$/;"	s
_NET_DEV_PEAOSC_TARGET_FILTER	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_TARGET_FILTER$/;"	s
_NET_DEV_PEAOSC_TARGET_FILTER_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PEAOSC_TARGET_FILTER_TYPE$/;"	g
_NET_DEV_PEAOSC_TIME_FILTER	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_TIME_FILTER$/;"	s
_NET_DEV_PEAOSC_WH_FILTER	NET_DEV_STRUCT.H	/^struct _NET_DEV_PEAOSC_WH_FILTER$/;"	s
_NET_DEV_PEER	NET_DEV_PU_SDK.H	/^struct _NET_DEV_PEER$/;"	s
_NET_DEV_PERIMETER_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_PERIMETER_RULE$/;"	s
_NET_DEV_PF_CHNLSTATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_CHNLSTATE$/;"	s
_NET_DEV_PF_CMSTIME	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_CMSTIME$/;"	s
_NET_DEV_PF_GETMDS_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_GETMDS_REQ$/;"	s
_NET_DEV_PF_KEEPALIVE_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_KEEPALIVE_RSP$/;"	s
_NET_DEV_PF_MDSIP	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_MDSIP$/;"	s
_NET_DEV_PF_REGISTER_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_REGISTER_REQ 	\/\/ 注册平台$/;"	s
_NET_DEV_PF_REGISTER_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_PF_REGISTER_RSP$/;"	s
_NET_DEV_PHY_DISK	NET_DEV_STRUCT.H	/^struct _NET_DEV_PHY_DISK$/;"	s
_NET_DEV_PHY_DISK_INFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_PHY_DISK_INFO$/;"	s
_NET_DEV_PIC_COND	NET_DEV_STRUCT.H	/^struct _NET_DEV_PIC_COND$/;"	s
_NET_DEV_PIC_ITEM	NET_DEV_STRUCT.H	/^struct _NET_DEV_PIC_ITEM$/;"	s
_NET_DEV_PIC_QUERY_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_PIC_QUERY_REQ$/;"	s
_NET_DEV_PIC_QUERY_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_PIC_QUERY_RSP$/;"	s
_NET_DEV_PIR_ALARM	NET_DEV_STRUCT.H	/^struct _NET_DEV_PIR_ALARM$/;"	s
_NET_DEV_PIX_CAL_STATE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PIX_CAL_STATE$/;"	g
_NET_DEV_POINT	NET_DEV_STRUCT.H	/^struct _NET_DEV_POINT$/;"	s
_NET_DEV_POLYGON	NET_DEV_STRUCT.H	/^struct _NET_DEV_POLYGON$/;"	s
_NET_DEV_PPPCFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_PPPCFG$/;"	s
_NET_DEV_PPPDPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_PPPDPARAM$/;"	s
_NET_DEV_PPPOECFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_PPPOECFG$/;"	s
_NET_DEV_PROTOL_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PROTOL_TYPE$/;"	g
_NET_DEV_PTZ_3D	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_3D$/;"	s
_NET_DEV_PTZ_ACTION	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PTZ_ACTION$/;"	g
_NET_DEV_PTZ_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_CFG$/;"	s
_NET_DEV_PTZ_CONTROL	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_CONTROL$/;"	s
_NET_DEV_PTZ_CRUISE	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_CRUISE$/;"	s
_NET_DEV_PTZ_CRUISEPOINT	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_CRUISEPOINT$/;"	s
_NET_DEV_PTZ_CRUISEWAY	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_CRUISEWAY$/;"	s
_NET_DEV_PTZ_CRUISEWAYSET	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_CRUISEWAYSET$/;"	s
_NET_DEV_PTZ_JOIN_ACTION_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PTZ_JOIN_ACTION_TYPE$/;"	g
_NET_DEV_PTZ_PARKACTION_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_PARKACTION_CFG$/;"	s
_NET_DEV_PTZ_PATTERN	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_PATTERN$/;"	s
_NET_DEV_PTZ_PATTERNSET	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_PATTERNSET$/;"	s
_NET_DEV_PTZ_PRESET	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_PRESET$/;"	s
_NET_DEV_PTZ_PRESETSET	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_PRESETSET$/;"	s
_NET_DEV_PTZ_PROTOL	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_PTZ_PROTOL$/;"	g
_NET_DEV_PTZ_SCHEDTASK	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_SCHEDTASK$/;"	s
_NET_DEV_PTZ_TIME_TASK	NET_DEV_STRUCT.H	/^struct _NET_DEV_PTZ_TIME_TASK$/;"	s
_NET_DEV_QOSPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_QOSPARAM$/;"	s
_NET_DEV_RECORD	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECORD$/;"	s
_NET_DEV_RECORD_COND	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECORD_COND$/;"	s
_NET_DEV_RECORD_DETAIL_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_RECORD_DETAIL_TYPE$/;"	g
_NET_DEV_RECORD_ITEM	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECORD_ITEM$/;"	s
_NET_DEV_RECORD_OUTLINE_ITEM	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECORD_OUTLINE_ITEM$/;"	s
_NET_DEV_RECORD_QUERY_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECORD_QUERY_REQ$/;"	s
_NET_DEV_RECORD_QUERY_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECORD_QUERY_RSP$/;"	s
_NET_DEV_RECORD_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_RECORD_TYPE$/;"	g
_NET_DEV_RECT	NET_DEV_STRUCT.H	/^struct _NET_DEV_RECT$/;"	s
_NET_DEV_REC_POLICY	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_REC_POLICY$/;"	g
_NET_DEV_REMOTE_CHANNEL	NET_DEV_STRUCT.H	/^struct _NET_DEV_REMOTE_CHANNEL$/;"	s
_NET_DEV_REMOTE_DEVICE	NET_DEV_STRUCT.H	/^struct _NET_DEV_REMOTE_DEVICE$/;"	s
_NET_DEV_REMOTE_RTSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_REMOTE_RTSP$/;"	s
_NET_DEV_ROI	NET_DEV_STRUCT.H	/^struct _NET_DEV_ROI$/;"	s
_NET_DEV_SADPCMSINFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_SADPCMSINFO$/;"	s
_NET_DEV_SADPINFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_SADPINFO$/;"	s
_NET_DEV_SCENE_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_SCENE_TYPE$/;"	g
_NET_DEV_SDK_FUNCS	NET_DEV_PU_SDK.H	/^struct _NET_DEV_SDK_FUNCS$/;"	s
_NET_DEV_SERIAL_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_SERIAL_CFG$/;"	s
_NET_DEV_SERVICECFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_SERVICECFG$/;"	s
_NET_DEV_SMTP_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_SMTP_CFG$/;"	s
_NET_DEV_SNAPPIC	NET_DEV_STRUCT.H	/^struct _NET_DEV_SNAPPIC$/;"	s
_NET_DEV_SNAPPIC_ALARMPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_SNAPPIC_ALARMPARAM$/;"	s
_NET_DEV_SNAPPIC_TIMERPARAM	NET_DEV_STRUCT.H	/^struct _NET_DEV_SNAPPIC_TIMERPARAM$/;"	s
_NET_DEV_STATE_IDX	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_STATE_IDX$/;"	g
_NET_DEV_STATE_QUERY_REQ	NET_DEV_STRUCT.H	/^struct _NET_DEV_STATE_QUERY_REQ$/;"	s
_NET_DEV_STATE_QUERY_RSP	NET_DEV_STRUCT.H	/^struct _NET_DEV_STATE_QUERY_RSP$/;"	s
_NET_DEV_STREAM_MIX_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_STREAM_MIX_TYPE$/;"	g
_NET_DEV_STREAM_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_STREAM_TYPE$/;"	g
_NET_DEV_SYS_CAP	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_SYS_CAP$/;"	g
_NET_DEV_TAKE_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_TAKE_RULE$/;"	s
_NET_DEV_TIMESEG	NET_DEV_STRUCT.H	/^struct _NET_DEV_TIMESEG$/;"	s
_NET_DEV_TIME_EX	NET_DEV_STRUCT.H	/^struct _NET_DEV_TIME_EX$/;"	s
_NET_DEV_TRANSPROTOL	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_TRANSPROTOL$/;"	g
_NET_DEV_TRIPWIRE_RULE	NET_DEV_STRUCT.H	/^struct _NET_DEV_TRIPWIRE_RULE$/;"	s
_NET_DEV_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_TYPE$/;"	g
_NET_DEV_UPGRADE	NET_DEV_STRUCT.H	/^struct _NET_DEV_UPGRADE$/;"	s
_NET_DEV_UPGRADE_PROGRESS	NET_DEV_STRUCT.H	/^struct _NET_DEV_UPGRADE_PROGRESS$/;"	s
_NET_DEV_UPNP_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_UPNP_CFG$/;"	s
_NET_DEV_UPNP_PORT	NET_DEV_STRUCT.H	/^struct _NET_DEV_UPNP_PORT$/;"	s
_NET_DEV_UPNP_PORT_STATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_UPNP_PORT_STATE$/;"	s
_NET_DEV_UPNP_STATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_UPNP_STATE$/;"	s
_NET_DEV_USER	NET_DEV_STRUCT.H	/^struct _NET_DEV_USER$/;"	s
_NET_DEV_USERSET	NET_DEV_STRUCT.H	/^struct _NET_DEV_USERSET$/;"	s
_NET_DEV_USER_INFO	NET_DEV_STRUCT.H	/^struct _NET_DEV_USER_INFO$/;"	s
_NET_DEV_USER_LOCALRIGHT	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_USER_LOCALRIGHT$/;"	g
_NET_DEV_USER_MODIFY	NET_DEV_STRUCT.H	/^struct _NET_DEV_USER_MODIFY$/;"	s
_NET_DEV_USER_REMOTERIGHT	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_USER_REMOTERIGHT$/;"	g
_NET_DEV_VENC_BITRATE_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VENC_BITRATE_TYPE$/;"	g
_NET_DEV_VENC_OSD	NET_DEV_STRUCT.H	/^struct _NET_DEV_VENC_OSD$/;"	s
_NET_DEV_VENC_OSD_TEXT	NET_DEV_STRUCT.H	/^struct _NET_DEV_VENC_OSD_TEXT$/;"	s
_NET_DEV_VENC_OVERLAY	NET_DEV_STRUCT.H	/^struct _NET_DEV_VENC_OVERLAY$/;"	s
_NET_DEV_VENC_TYPE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VENC_TYPE$/;"	g
_NET_DEV_VERSION	NET_DEV_STRUCT.H	/^struct _NET_DEV_VERSION$/;"	s
_NET_DEV_VIDEOFORMAT	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VIDEOFORMAT$/;"	g
_NET_DEV_VIDEOMODE	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VIDEOMODE$/;"	g
_NET_DEV_VIDEOOUT	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VIDEOOUT$/;"	g
_NET_DEV_VIDEO_EFFECT	NET_DEV_STRUCT.H	/^struct _NET_DEV_VIDEO_EFFECT$/;"	s
_NET_DEV_VIDEO_INPUT_EFFECT	NET_DEV_STRUCT.H	/^struct _NET_DEV_VIDEO_INPUT_EFFECT$/;"	s
_NET_DEV_VOUT_RESOLUTION	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VOUT_RESOLUTION$/;"	g
_NET_DEV_VO_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_VO_CFG$/;"	s
_NET_DEV_VO_INTF_SYNC	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_VO_INTF_SYNC$/;"	g
_NET_DEV_WEEK	NET_DEV_STRUCT.H	/^struct _NET_DEV_WEEK$/;"	s
_NET_DEV_WEEKDAY	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_WEEKDAY$/;"	g
_NET_DEV_WIFICFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFICFG$/;"	s
_NET_DEV_WIFINIC	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFINIC$/;"	s
_NET_DEV_WIFISECURITY	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_WIFISECURITY$/;"	g
_NET_DEV_WIFI_AP	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFI_AP$/;"	s
_NET_DEV_WIFI_APSET	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFI_APSET$/;"	s
_NET_DEV_WIFI_WEP	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFI_WEP 	\/\/WEP加密模式$/;"	s
_NET_DEV_WIFI_WEP_AUTH	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_WIFI_WEP_AUTH$/;"	g
_NET_DEV_WIFI_WPAEAP	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFI_WPAEAP 	\/\/* WPA+EAP认证模式 *\/$/;"	s
_NET_DEV_WIFI_WPAPSK	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFI_WPAPSK 	\/\/* WPA+PSK加密模式 *\/$/;"	s
_NET_DEV_WIFI_WPAPSK_ET	NET_DEV_STRUCT.H	/^typedef enum _NET_DEV_WIFI_WPAPSK_ET$/;"	g
_NET_DEV_WIFI_WPS	NET_DEV_STRUCT.H	/^struct _NET_DEV_WIFI_WPS$/;"	s
_NET_DEV_WORKSTATE	NET_DEV_STRUCT.H	/^struct _NET_DEV_WORKSTATE$/;"	s
_NET_DEV_WSX_CFG	NET_DEV_STRUCT.H	/^struct _NET_DEV_WSX_CFG$/;"	s
_SADP_DEV_TYPE_E	sadp_pu_api.h	/^enum _SADP_DEV_TYPE_E$/;"	g
_SADP_MSG_ID_E	sadp_pu_api.h	/^enum _SADP_MSG_ID_E$/;"	g
_SADP_SGET_DIR	sadp_pu_api.h	/^typedef enum _SADP_SGET_DIR{$/;"	g
__DC	NET_DEV_STRUCT.H	/^    typedef struct __DC$/;"	s
__HDC_defined	NET_DEV_STRUCT.H	61;"	d
__HWND_defined	NET_DEV_STRUCT.H	52;"	d
__InitInfo	NET_DEV_STRUCT.H	/^typedef struct __InitInfo$/;"	s
__NET_DEV_PU_SDK_H__	NET_DEV_PU_SDK.H	2;"	d
__NET_DEV_STRUCT_H__	NET_DEV_STRUCT.H	2;"	d
__WINDOWS__	cJSON.h	32;"	d
__base64__	base64.h	2;"	d
__file__	file.h	2;"	d
__gsf_data_struct_h__	gsf_data_struct.h	2;"	d
__has_declspec_attribute	curl/curl.h	96;"	d
__sadp_pu_api_h__	sadp_pu_api.h	2;"	d
_base64_encode_triple	base64.c	/^void _base64_encode_triple(unsigned char triple[3], char result[4])$/;"	f
_curl_conv_callback1	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback1)(char *, size_t length);$/;"	t
_curl_conv_callback2	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback2)(const char *, size_t length);$/;"	t
_curl_conv_callback3	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback3)(void *, size_t length);$/;"	t
_curl_conv_callback4	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_conv_callback4)(const void *, size_t length);$/;"	t
_curl_debug_callback1	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback1) (CURL *,$/;"	t
_curl_debug_callback2	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback2) (CURL *,$/;"	t
_curl_debug_callback3	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback3) (CURL *,$/;"	t
_curl_debug_callback4	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback4) (CURL *,$/;"	t
_curl_debug_callback5	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback5) (CURL *,$/;"	t
_curl_debug_callback6	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback6) (CURL *,$/;"	t
_curl_debug_callback7	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback7) (CURL *,$/;"	t
_curl_debug_callback8	curl/typecheck-gcc.h	/^typedef int (*_curl_debug_callback8) (CURL *,$/;"	t
_curl_ioctl_callback1	curl/typecheck-gcc.h	/^typedef curlioerr (*_curl_ioctl_callback1)(CURL *, int, void *);$/;"	t
_curl_ioctl_callback2	curl/typecheck-gcc.h	/^typedef curlioerr (*_curl_ioctl_callback2)(CURL *, int, const void *);$/;"	t
_curl_ioctl_callback3	curl/typecheck-gcc.h	/^typedef curlioerr (*_curl_ioctl_callback3)(CURL *, curliocmd, void *);$/;"	t
_curl_ioctl_callback4	curl/typecheck-gcc.h	/^typedef curlioerr (*_curl_ioctl_callback4)(CURL *, curliocmd, const void *);$/;"	t
_curl_opensocket_callback1	curl/typecheck-gcc.h	/^typedef curl_socket_t (*_curl_opensocket_callback1)$/;"	t
_curl_opensocket_callback2	curl/typecheck-gcc.h	/^typedef curl_socket_t (*_curl_opensocket_callback2)$/;"	t
_curl_opensocket_callback3	curl/typecheck-gcc.h	/^typedef curl_socket_t (*_curl_opensocket_callback3)$/;"	t
_curl_opensocket_callback4	curl/typecheck-gcc.h	/^typedef curl_socket_t (*_curl_opensocket_callback4)$/;"	t
_curl_progress_callback1	curl/typecheck-gcc.h	/^typedef int (*_curl_progress_callback1)(void *,$/;"	t
_curl_progress_callback2	curl/typecheck-gcc.h	/^typedef int (*_curl_progress_callback2)(const void *,$/;"	t
_curl_read_callback1	curl/typecheck-gcc.h	/^typedef size_t (*_curl_read_callback1)(char *, size_t, size_t, void *);$/;"	t
_curl_read_callback2	curl/typecheck-gcc.h	/^typedef size_t (*_curl_read_callback2)(char *, size_t, size_t, const void *);$/;"	t
_curl_read_callback3	curl/typecheck-gcc.h	/^typedef size_t (*_curl_read_callback3)(char *, size_t, size_t, FILE *);$/;"	t
_curl_read_callback4	curl/typecheck-gcc.h	/^typedef size_t (*_curl_read_callback4)(void *, size_t, size_t, void *);$/;"	t
_curl_read_callback5	curl/typecheck-gcc.h	/^typedef size_t (*_curl_read_callback5)(void *, size_t, size_t, const void *);$/;"	t
_curl_read_callback6	curl/typecheck-gcc.h	/^typedef size_t (*_curl_read_callback6)(void *, size_t, size_t, FILE *);$/;"	t
_curl_seek_callback1	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_seek_callback1)(void *, curl_off_t, int);$/;"	t
_curl_seek_callback2	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_seek_callback2)(const void *, curl_off_t, int);$/;"	t
_curl_sockopt_callback1	curl/typecheck-gcc.h	/^typedef int (*_curl_sockopt_callback1)(void *, curl_socket_t, curlsocktype);$/;"	t
_curl_sockopt_callback2	curl/typecheck-gcc.h	/^typedef int (*_curl_sockopt_callback2)(const void *, curl_socket_t,$/;"	t
_curl_ssl_ctx_callback1	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback1)(CURL *, void *, void *);$/;"	t
_curl_ssl_ctx_callback2	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback2)(CURL *, void *, const void *);$/;"	t
_curl_ssl_ctx_callback3	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback3)(CURL *, const void *, void *);$/;"	t
_curl_ssl_ctx_callback4	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback4)(CURL *, const void *,$/;"	t
_curl_ssl_ctx_callback5	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback5)(CURL *, SSL_CTX, void *);$/;"	t
_curl_ssl_ctx_callback5	curl/typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback5;$/;"	t
_curl_ssl_ctx_callback6	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback6)(CURL *, SSL_CTX, const void *);$/;"	t
_curl_ssl_ctx_callback6	curl/typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback6;$/;"	t
_curl_ssl_ctx_callback7	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback7)(CURL *, const SSL_CTX, void *);$/;"	t
_curl_ssl_ctx_callback7	curl/typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback7;$/;"	t
_curl_ssl_ctx_callback8	curl/typecheck-gcc.h	/^typedef CURLcode (*_curl_ssl_ctx_callback8)(CURL *, const SSL_CTX,$/;"	t
_curl_ssl_ctx_callback8	curl/typecheck-gcc.h	/^typedef _curl_ssl_ctx_callback1 _curl_ssl_ctx_callback8;$/;"	t
_curl_write_callback1	curl/typecheck-gcc.h	/^typedef size_t (*_curl_write_callback1)(const char *, size_t, size_t, void *);$/;"	t
_curl_write_callback2	curl/typecheck-gcc.h	/^typedef size_t (*_curl_write_callback2)(const char *, size_t, size_t,$/;"	t
_curl_write_callback3	curl/typecheck-gcc.h	/^typedef size_t (*_curl_write_callback3)(const char *, size_t, size_t, FILE *);$/;"	t
_curl_write_callback4	curl/typecheck-gcc.h	/^typedef size_t (*_curl_write_callback4)(const void *, size_t, size_t, void *);$/;"	t
_curl_write_callback5	curl/typecheck-gcc.h	/^typedef size_t (*_curl_write_callback5)(const void *, size_t, size_t,$/;"	t
_curl_write_callback6	curl/typecheck-gcc.h	/^typedef size_t (*_curl_write_callback6)(const void *, size_t, size_t, FILE *);$/;"	t
_dc_param_s_	main.c	/^typedef struct _dc_param_s_$/;"	s	file:
_dc_talk_hdl_s_	main.c	/^typedef struct _dc_talk_hdl_s_$/;"	s	file:
_dc_upg_hdl_s_	main.c	/^typedef struct _dc_upg_hdl_s_$/;"	s	file:
_gsf_data_fmt	gsf_data_struct.h	/^typedef struct _gsf_data_fmt$/;"	s
_gsf_data_packet	gsf_data_struct.h	/^typedef struct _gsf_data_packet$/;"	s
_gsf_data_rt	gsf_data_struct.h	/^typedef struct _gsf_data_rt$/;"	s
_gsf_data_talk_frame	gsf_data_struct.h	/^typedef struct _gsf_data_talk_frame$/;"	s
_gsf_data_trans_down_req	gsf_data_struct.h	/^typedef struct _gsf_data_trans_down_req$/;"	s
_gsf_data_trans_down_rsp	gsf_data_struct.h	/^typedef struct _gsf_data_trans_down_rsp$/;"	s
_gsf_data_trans_down_speed	gsf_data_struct.h	/^typedef struct _gsf_data_trans_down_speed$/;"	s
_gsf_data_trans_pic	gsf_data_struct.h	/^typedef struct _gsf_data_trans_pic$/;"	s
_gsf_data_trans_snap_req	gsf_data_struct.h	/^typedef struct _gsf_data_trans_snap_req$/;"	s
_gsf_data_trans_snap_rsp	gsf_data_struct.h	/^typedef struct _gsf_data_trans_snap_rsp$/;"	s
_gsf_data_trans_talk_req	gsf_data_struct.h	/^typedef struct _gsf_data_trans_talk_req$/;"	s
_gsf_data_trans_talk_rsp	gsf_data_struct.h	/^typedef struct _gsf_data_trans_talk_rsp$/;"	s
_gsf_data_trans_upg_req	gsf_data_struct.h	/^typedef struct _gsf_data_trans_upg_req$/;"	s
_gsf_data_trans_upg_rsp	gsf_data_struct.h	/^typedef struct _gsf_data_trans_upg_rsp$/;"	s
_gsf_data_upg_percent_rsp	gsf_data_struct.h	/^typedef struct _gsf_data_upg_percent_rsp$/;"	s
_gsf_hs_param	main.c	/^typedef struct _gsf_hs_param$/;"	s	file:
_recvSocket	BaseType.h	/^static void _recvSocket(SOCKET connfd)$/;"	f
_rt	gsf_data_struct.h	/^    char  _rt;   \/\/with _rt             是否携带 _rt信息 (_rt必须放置到req结构的第一个成员)$/;"	m	struct:_gsf_data_fmt
_rt	gsf_data_struct.h	/^    gsf_data_rt_t _rt;$/;"	m	struct:_gsf_data_trans_down_req
_rt	gsf_data_struct.h	/^    gsf_data_rt_t _rt;$/;"	m	struct:_gsf_data_trans_snap_req
_rt	gsf_data_struct.h	/^    gsf_data_rt_t _rt;$/;"	m	struct:_gsf_data_trans_talk_req
_rt	gsf_data_struct.h	/^    gsf_data_rt_t _rt;$/;"	m	struct:_gsf_data_trans_upg_req
_sadp_pu_notify_s	sadp_pu_api.h	/^typedef struct _sadp_pu_notify_s {$/;"	s
_sadp_pu_parm_s	sadp_pu_api.h	/^typedef struct _sadp_pu_parm_s {$/;"	s
abs_builddir	curl/Makefile	/^abs_builddir = \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/include\/curl$/;"	m
abs_srcdir	curl/Makefile	/^abs_srcdir = \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/include\/curl$/;"	m
abs_top_builddir	curl/Makefile	/^abs_top_builddir = \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0$/;"	m
abs_top_srcdir	curl/Makefile	/^abs_top_srcdir = \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0$/;"	m
ac_ct_AR	curl/Makefile	/^ac_ct_AR = $/;"	m
ac_ct_CC	curl/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_DUMPBIN	curl/Makefile	/^ac_ct_DUMPBIN = $/;"	m
act_on_error	BaseType.h	236;"	d
act_on_error	BaseType.h	254;"	d
add_item_to_array	cJSON.c	/^static cJSON_bool add_item_to_array(cJSON *array, cJSON *item)$/;"	f	file:
add_item_to_object	cJSON.c	/^static cJSON_bool add_item_to_object(cJSON * const object, const char * const string, cJSON * const item, const internal_hooks * const hooks, const cJSON_bool constant_key)$/;"	f	file:
addr	curl/curl.h	/^  struct sockaddr addr;$/;"	m	struct:curl_sockaddr	typeref:struct:curl_sockaddr::sockaddr
addrlen	curl/curl.h	/^  unsigned int addrlen; \/* addrlen was a socklen_t type before 7.18.0 but it$/;"	m	struct:curl_sockaddr
age	curl/curl.h	/^  CURLversion age;          \/* age of the returned struct *\/$/;"	m	struct:__anon39
allocate	cJSON.c	/^    void *(CJSON_CDECL *allocate)(size_t size);$/;"	m	struct:internal_hooks	file:
am__DIST_COMMON	curl/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__aclocal_m4_deps	curl/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_compile_check_sizeof.m4 \\$/;"	m
am__base_list	curl/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	curl/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	curl/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	curl/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	curl/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__include	curl/Makefile	/^am__include = include$/;"	m
am__install_max	curl/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	curl/Makefile	/^am__installdirs = "$(DESTDIR)$(pkgincludedir)"$/;"	m
am__is_gnu_make	curl/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	curl/Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	curl/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	curl/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	curl/Makefile	/^am__make_running_with_option = \\$/;"	m
am__nobase_list	curl/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	curl/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	curl/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__quote	curl/Makefile	/^am__quote = $/;"	m
am__strip_dir	curl/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	curl/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	curl/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	curl/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	curl/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	curl/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_GEN_	curl/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	curl/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	curl/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	curl/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	curl/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	curl/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	curl/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	curl/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	curl/Makefile	/^am__v_at_1 = $/;"	m
am__vpath_adj	curl/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	curl/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
ares	curl/curl.h	/^  const char *ares;$/;"	m	struct:__anon39
ares_num	curl/curl.h	/^  int ares_num;$/;"	m	struct:__anon39
args	sadp_pu_api.h	/^        int  args;                          \/\/SADP_MSG_SGET_E$/;"	m	struct:_sadp_pu_parm_s
array	cJSON.h	/^CJSON_PUBLIC(int) cJSON_GetArraySize(const cJSON *array);$/;"	v
audio_encoder_t	main.c	/^} audio_encoder_t;$/;"	t	typeref:enum:__anon46	file:
audio_thread	main.c	/^void *audio_thread(void *buf)$/;"	f
b_data	curl/curl.h	/^  char *b_data;$/;"	m	struct:curl_fileinfo
b_size	curl/curl.h	/^  size_t b_size;$/;"	m	struct:curl_fileinfo
b_used	curl/curl.h	/^  size_t b_used;$/;"	m	struct:curl_fileinfo
backend	curl/curl.h	/^  curl_sslbackend backend;$/;"	m	struct:curl_tlssessioninfo
base64_encode_dst	base64.c	/^int base64_encode_dst(unsigned char *source, unsigned int sourcelen, char *target, unsigned int targetlen)$/;"	f
begin_time	gsf_data_struct.h	/^    int begin_time;              \/* 开始时间 *\/$/;"	m	struct:_gsf_data_trans_down_req
begin_time	gsf_data_struct.h	/^    int begin_time;     \/* 实际开始时间    *\/$/;"	m	struct:_gsf_data_trans_down_rsp
bindir	curl/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
boolean	cJSON.h	/^CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool boolean);$/;"	v
brotli_ver_num	curl/curl.h	/^  unsigned int brotli_ver_num; \/* Numeric Brotli version$/;"	m	struct:__anon39
brotli_version	curl/curl.h	/^  const char *brotli_version; \/* human readable string. *\/$/;"	m	struct:__anon39
buffer	cJSON.c	/^    unsigned char *buffer;$/;"	m	struct:__anon3	file:
buffer	curl/curl.h	/^  char *buffer;                     \/* pointer to allocated buffer contents *\/$/;"	m	struct:curl_httppost
buffer_at_offset	cJSON.c	298;"	d	file:
buffer_skip_whitespace	cJSON.c	/^static parse_buffer *buffer_skip_whitespace(parse_buffer * const buffer)$/;"	f	file:
bufferlength	curl/curl.h	/^  long bufferlength;                \/* length of buffer field *\/$/;"	m	struct:curl_httppost
build	curl/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	curl/Makefile	/^build_alias = $/;"	m
build_cpu	curl/Makefile	/^build_cpu = x86_64$/;"	m
build_os	curl/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	curl/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	curl/Makefile	/^build_vendor = pc$/;"	m
builddir	curl/Makefile	/^builddir = .$/;"	m
byAudioBits	file.c	/^	BYTE		byAudioBits;			\/\/位数			16bit$/;"	m	struct:_HI_AUDIO_INFO_S	file:
byAudioChannels	file.c	/^	BYTE		byAudioChannels;		\/\/通道数		暂只支持1	$/;"	m	struct:_HI_AUDIO_INFO_S	file:
byAudioSamples	file.c	/^	BYTE		byAudioSamples;			\/\/采样率	0--8k 1--16k 2-32k$/;"	m	struct:_HI_AUDIO_INFO_S	file:
byEncodeType	file.c	/^	BYTE				byEncodeType;	\/\/视频编码格式0-h264 1-mjpeg 2-jpeg$/;"	m	struct:_HI_VIDEO_INFO_S	file:
byEncodeType	file.c	/^	BYTE		byEncodeType;			\/\/音频编码格式0--pcm 1-g711a 2-g711u 3--g726$/;"	m	struct:_HI_AUDIO_INFO_S	file:
byFrameRate	file.c	/^	BYTE				byFrameRate;	\/\/帧率(保留)$/;"	m	struct:_HI_VIDEO_INFO_S	file:
byPal	file.c	/^	BYTE				byPal;			\/\/制式		0-n制1-pal制$/;"	m	struct:_HI_VIDEO_INFO_S	file:
byRes	file.c	/^	BYTE				byRes[1];$/;"	m	struct:_HI_VIDEO_INFO_S	file:
byRes	file.c	/^	BYTE		byRes[4];$/;"	m	struct:_HI_AUDIO_INFO_S	file:
byRsvd	file.c	/^	BYTE		byRsvd[1];				\/\/保留$/;"	m	struct:_HI_FRAME_HEAD_S	file:
cJSON	cJSON.h	/^typedef struct cJSON$/;"	s
cJSON	cJSON.h	/^} cJSON;$/;"	t	typeref:struct:cJSON
cJSON_AddArrayToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddArrayToObject(cJSON * const object, const char * const name)$/;"	f
cJSON_AddBoolToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddBoolToObject(cJSON * const object, const char * const name, const cJSON_bool boolean)$/;"	f
cJSON_AddFalseToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddFalseToObject(cJSON * const object, const char * const name)$/;"	f
cJSON_AddNullToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddNullToObject(cJSON * const object, const char * const name)$/;"	f
cJSON_AddNumberToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddNumberToObject(cJSON * const object, const char * const name, const double number)$/;"	f
cJSON_AddObjectToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddObjectToObject(cJSON * const object, const char * const name)$/;"	f
cJSON_AddRawToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddRawToObject(cJSON * const object, const char * const name, const char * const raw)$/;"	f
cJSON_AddStringToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddStringToObject(cJSON * const object, const char * const name, const char * const string)$/;"	f
cJSON_AddTrueToObject	cJSON.c	/^CJSON_PUBLIC(cJSON*) cJSON_AddTrueToObject(cJSON * const object, const char * const name)$/;"	f
cJSON_Array	cJSON.h	95;"	d
cJSON_ArrayForEach	cJSON.h	283;"	d
cJSON_CreateArray	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateArray(void)$/;"	f
cJSON_CreateArrayReference	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateArrayReference(const cJSON *child) {$/;"	f
cJSON_CreateBool	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateBool(cJSON_bool boolean)$/;"	f
cJSON_CreateDoubleArray	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateDoubleArray(const double *numbers, int count)$/;"	f
cJSON_CreateFalse	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateFalse(void)$/;"	f
cJSON_CreateFloatArray	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateFloatArray(const float *numbers, int count)$/;"	f
cJSON_CreateIntArray	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateIntArray(const int *numbers, int count)$/;"	f
cJSON_CreateNull	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateNull(void)$/;"	f
cJSON_CreateNumber	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateNumber(double num)$/;"	f
cJSON_CreateObject	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateObject(void)$/;"	f
cJSON_CreateObjectReference	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateObjectReference(const cJSON *child)$/;"	f
cJSON_CreateRaw	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateRaw(const char *raw)$/;"	f
cJSON_CreateString	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateString(const char *string)$/;"	f
cJSON_CreateStringArray	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateStringArray(const char *const *strings, int count)$/;"	f
cJSON_CreateStringReference	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateStringReference(const char *string)$/;"	f
cJSON_CreateTrue	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_CreateTrue(void)$/;"	f
cJSON_Delete	cJSON.c	/^CJSON_PUBLIC(void) cJSON_Delete(cJSON *item)$/;"	f
cJSON_DeleteItemFromArray	cJSON.c	/^CJSON_PUBLIC(void) cJSON_DeleteItemFromArray(cJSON *array, int which)$/;"	f
cJSON_DeleteItemFromObject	cJSON.c	/^CJSON_PUBLIC(void) cJSON_DeleteItemFromObject(cJSON *object, const char *string)$/;"	f
cJSON_DeleteItemFromObjectCaseSensitive	cJSON.c	/^CJSON_PUBLIC(void) cJSON_DeleteItemFromObjectCaseSensitive(cJSON *object, const char *string)$/;"	f
cJSON_DetachItemFromArray	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromArray(cJSON *array, int which)$/;"	f
cJSON_DetachItemFromObject	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObject(cJSON *object, const char *string)$/;"	f
cJSON_DetachItemFromObjectCaseSensitive	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemFromObjectCaseSensitive(cJSON *object, const char *string)$/;"	f
cJSON_DetachItemViaPointer	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_DetachItemViaPointer(cJSON *parent, cJSON * const item)$/;"	f
cJSON_Duplicate	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_Duplicate(const cJSON *item, cJSON_bool recurse)$/;"	f
cJSON_False	cJSON.h	90;"	d
cJSON_GetArrayItem	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_GetArrayItem(const cJSON *array, int index)$/;"	f
cJSON_GetArraySize	cJSON.c	/^CJSON_PUBLIC(int) cJSON_GetArraySize(const cJSON *array)$/;"	f
cJSON_GetErrorPtr	cJSON.c	/^CJSON_PUBLIC(const char *) cJSON_GetErrorPtr(void)$/;"	f
cJSON_GetNumberValue	cJSON.c	/^CJSON_PUBLIC(double) cJSON_GetNumberValue(const cJSON * const item) $/;"	f
cJSON_GetObjectItem	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_GetObjectItem(const cJSON * const object, const char * const string)$/;"	f
cJSON_GetObjectItemCaseSensitive	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_GetObjectItemCaseSensitive(const cJSON * const object, const char * const string)$/;"	f
cJSON_GetStringValue	cJSON.c	/^CJSON_PUBLIC(char *) cJSON_GetStringValue(const cJSON * const item) $/;"	f
cJSON_Hooks	cJSON.h	/^typedef struct cJSON_Hooks$/;"	s
cJSON_Hooks	cJSON.h	/^} cJSON_Hooks;$/;"	t	typeref:struct:cJSON_Hooks
cJSON_InitHooks	cJSON.c	/^CJSON_PUBLIC(void) cJSON_InitHooks(cJSON_Hooks* hooks)$/;"	f
cJSON_Invalid	cJSON.h	89;"	d
cJSON_IsReference	cJSON.h	99;"	d
cJSON_Minify	cJSON.c	/^CJSON_PUBLIC(void) cJSON_Minify(char *json)$/;"	f
cJSON_NULL	cJSON.h	92;"	d
cJSON_New_Item	cJSON.c	/^static cJSON *cJSON_New_Item(const internal_hooks * const hooks)$/;"	f	file:
cJSON_Number	cJSON.h	93;"	d
cJSON_Object	cJSON.h	96;"	d
cJSON_Parse	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_Parse(const char *value)$/;"	f
cJSON_ParseWithLength	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_ParseWithLength(const char *value, size_t buffer_length)$/;"	f
cJSON_ParseWithLengthOpts	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_ParseWithLengthOpts(const char *value, size_t buffer_length, const char **return_parse_end, cJSON_bool require_null_terminated)$/;"	f
cJSON_ParseWithOpts	cJSON.c	/^CJSON_PUBLIC(cJSON *) cJSON_ParseWithOpts(const char *value, const char **return_parse_end, cJSON_bool require_null_terminated)$/;"	f
cJSON_Print	cJSON.c	/^CJSON_PUBLIC(char *) cJSON_Print(const cJSON *item)$/;"	f
cJSON_PrintBuffered	cJSON.c	/^CJSON_PUBLIC(char *) cJSON_PrintBuffered(const cJSON *item, int prebuffer, cJSON_bool fmt)$/;"	f
cJSON_PrintUnformatted	cJSON.c	/^CJSON_PUBLIC(char *) cJSON_PrintUnformatted(const cJSON *item)$/;"	f
cJSON_Raw	cJSON.h	97;"	d
cJSON_SetIntValue	cJSON.h	275;"	d
cJSON_SetNumberHelper	cJSON.c	/^CJSON_PUBLIC(double) cJSON_SetNumberHelper(cJSON *object, double number)$/;"	f
cJSON_SetNumberValue	cJSON.h	278;"	d
cJSON_SetValuestring	cJSON.c	/^CJSON_PUBLIC(char*) cJSON_SetValuestring(cJSON *object, const char *valuestring)$/;"	f
cJSON_String	cJSON.h	94;"	d
cJSON_StringIsConst	cJSON.h	100;"	d
cJSON_True	cJSON.h	91;"	d
cJSON_Version	cJSON.c	/^CJSON_PUBLIC(const char*) cJSON_Version(void)$/;"	f
cJSON__h	cJSON.h	24;"	d
cJSON_bool	cJSON.h	/^typedef int cJSON_bool;$/;"	t
cJSON_free	cJSON.c	/^CJSON_PUBLIC(void) cJSON_free(void *object)$/;"	f
cJSON_malloc	cJSON.c	/^CJSON_PUBLIC(void *) cJSON_malloc(size_t size)$/;"	f
cJSON_strdup	cJSON.c	/^static unsigned char* cJSON_strdup(const unsigned char* string, const internal_hooks * const hooks)$/;"	f	file:
cainfo	curl/curl.h	/^  const char *cainfo;          \/* the built-in default CURLOPT_CAINFO, might$/;"	m	struct:__anon39
cal_chksum	gsf_net_api.c	/^unsigned short cal_chksum(unsigned short *addr, int len)$/;"	f
callback	sadp_pu_api.h	/^    int (*callback)(struct _sadp_pu_notify_s *handle$/;"	m	struct:_sadp_pu_notify_s
can_access_at_index	cJSON.c	295;"	d	file:
can_read	cJSON.c	293;"	d	file:
cannot_access_at_index	cJSON.c	296;"	d	file:
capath	curl/curl.h	/^  const char *capath;          \/* the built-in default CURLOPT_CAPATH, might$/;"	m	struct:__anon39
case_insensitive_strcmp	cJSON.c	/^static int case_insensitive_strcmp(const unsigned char *string1, const unsigned char *string2)$/;"	f	file:
cast_away_const	cJSON.c	/^static void* cast_away_const(const void* string)$/;"	f	file:
certinfo	curl/curl.h	/^  struct curl_slist **certinfo; \/* for each index in this array, there's a$/;"	m	struct:curl_certinfo	typeref:struct:curl_certinfo::curl_slist
ch	gsf_data_struct.h	/^    int  ch;        \/* 通道号 *\/$/;"	m	struct:_gsf_data_trans_snap_req
ch	gsf_data_struct.h	/^    int  ch;        \/\/ 多路设备时： -1：设备， 0 - 255： 设备通道$/;"	m	struct:_gsf_data_trans_talk_req
ch	gsf_data_struct.h	/^    int ch;                      \/* 通道号 *\/$/;"	m	struct:_gsf_data_trans_down_req
child	cJSON.h	/^    struct cJSON *child;$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
child	cJSON.h	/^CJSON_PUBLIC(cJSON *) cJSON_CreateArrayReference(const cJSON *child);$/;"	v
child	cJSON.h	/^CJSON_PUBLIC(cJSON *) cJSON_CreateObjectReference(const cJSON *child);$/;"	v
cjson_min	cJSON.c	1179;"	d	file:
close2	BaseType.h	221;"	d
close2	BaseType.h	225;"	d
compare_double	cJSON.c	/^static cJSON_bool compare_double(double a, double b)$/;"	f	file:
content	cJSON.c	/^    const unsigned char *content;$/;"	m	struct:__anon2	file:
contentheader	curl/curl.h	/^  struct curl_slist *contentheader; \/* list of extra headers for this form *\/$/;"	m	struct:curl_httppost	typeref:struct:curl_httppost::curl_slist
contentlen	curl/curl.h	/^  curl_off_t contentlen;            \/* alternative length of contents$/;"	m	struct:curl_httppost
contents	curl/curl.h	/^  char *contents;                   \/* pointer to allocated data contents *\/$/;"	m	struct:curl_httppost
contentslength	curl/curl.h	/^  long contentslength;              \/* length of contents field, see also$/;"	m	struct:curl_httppost
contenttype	curl/curl.h	/^  char *contenttype;                \/* Content-Type *\/$/;"	m	struct:curl_httppost
cr_printf	BaseType.h	/^static INT32 cr_printf(char* pszfmt, ...)$/;"	f
create_reference	cJSON.c	/^static cJSON *create_reference(const cJSON *item, const internal_hooks * const hooks)$/;"	f	file:
curl_TimeCond	curl/curl.h	/^} curl_TimeCond;$/;"	t	typeref:enum:__anon27
curl_calloc_callback	curl/curl.h	/^typedef void *(*curl_calloc_callback)(size_t nmemb, size_t size);$/;"	t
curl_certinfo	curl/curl.h	/^struct curl_certinfo {$/;"	s
curl_chunk_bgn_callback	curl/curl.h	/^typedef long (*curl_chunk_bgn_callback)(const void *transfer_info,$/;"	t
curl_chunk_end_callback	curl/curl.h	/^typedef long (*curl_chunk_end_callback)(void *ptr);$/;"	t
curl_closepolicy	curl/curl.h	/^} curl_closepolicy;$/;"	t	typeref:enum:__anon33
curl_closesocket_callback	curl/curl.h	/^(*curl_closesocket_callback)(void *clientp, curl_socket_t item);$/;"	t
curl_conv_callback	curl/curl.h	/^typedef CURLcode (*curl_conv_callback)(char *buffer, size_t length);$/;"	t
curl_debug_callback	curl/curl.h	/^typedef int (*curl_debug_callback)$/;"	t
curl_easy_getinfo	curl/curl.h	2895;"	d
curl_easy_getinfo	curl/typecheck-gcc.h	116;"	d
curl_easy_setopt	curl/curl.h	2894;"	d
curl_easy_setopt	curl/typecheck-gcc.h	41;"	d
curl_fileinfo	curl/curl.h	/^struct curl_fileinfo {$/;"	s
curl_fnmatch_callback	curl/curl.h	/^typedef int (*curl_fnmatch_callback)(void *ptr,$/;"	t
curl_formget_callback	curl/curl.h	/^typedef size_t (*curl_formget_callback)(void *arg, const char *buf,$/;"	t
curl_forms	curl/curl.h	/^struct curl_forms {$/;"	s
curl_free_callback	curl/curl.h	/^typedef void (*curl_free_callback)(void *ptr);$/;"	t
curl_ftpauth	curl/curl.h	/^} curl_ftpauth;$/;"	t	typeref:enum:__anon19
curl_ftpccc	curl/curl.h	/^} curl_ftpccc;$/;"	t	typeref:enum:__anon18
curl_ftpcreatedir	curl/curl.h	/^} curl_ftpcreatedir;$/;"	t	typeref:enum:__anon20
curl_ftpmethod	curl/curl.h	/^} curl_ftpmethod;$/;"	t	typeref:enum:__anon21
curl_ftpssl	curl/curl.h	860;"	d
curl_httppost	curl/curl.h	/^struct curl_httppost {$/;"	s
curl_infotype	curl/curl.h	/^} curl_infotype;$/;"	t	typeref:enum:__anon14
curl_ioctl_callback	curl/curl.h	/^typedef curlioerr (*curl_ioctl_callback)(CURL *handle,$/;"	t
curl_khkey	curl/curl.h	/^struct curl_khkey {$/;"	s
curl_khmatch	curl/curl.h	/^enum curl_khmatch {$/;"	g
curl_khstat	curl/curl.h	/^enum curl_khstat {$/;"	g
curl_khtype	curl/curl.h	/^enum curl_khtype {$/;"	g
curl_lock_access	curl/curl.h	/^} curl_lock_access;$/;"	t	typeref:enum:__anon35
curl_lock_data	curl/curl.h	/^} curl_lock_data;$/;"	t	typeref:enum:__anon34
curl_lock_function	curl/curl.h	/^typedef void (*curl_lock_function)(CURL *handle,$/;"	t
curl_malloc_callback	curl/curl.h	/^typedef void *(*curl_malloc_callback)(size_t size);$/;"	t
curl_mime	curl/curl.h	/^typedef struct curl_mime_s      curl_mime;      \/* Mime context. *\/$/;"	t	typeref:struct:curl_mime_s
curl_mimepart	curl/curl.h	/^typedef struct curl_mimepart_s  curl_mimepart;  \/* Mime part context. *\/$/;"	t	typeref:struct:curl_mimepart_s
curl_multi_setopt	curl/curl.h	2897;"	d
curl_multi_setopt	curl/typecheck-gcc.h	152;"	d
curl_multi_socket	curl/multi.h	332;"	d
curl_multi_timer_callback	curl/multi.h	/^typedef int (*curl_multi_timer_callback)(CURLM *multi,    \/* multi handle *\/$/;"	t
curl_off_t	curl/system.h	/^  typedef CURL_TYPEOF_CURL_OFF_T curl_off_t;$/;"	t
curl_opensocket_callback	curl/curl.h	/^(*curl_opensocket_callback)(void *clientp,$/;"	t
curl_progress_callback	curl/curl.h	/^typedef int (*curl_progress_callback)(void *clientp,$/;"	t
curl_proxytype	curl/curl.h	/^} curl_proxytype;  \/* this enum was added in 7.10 *\/$/;"	t	typeref:enum:__anon16
curl_push_callback	curl/multi.h	/^typedef int (*curl_push_callback)(CURL *parent,$/;"	t
curl_read_callback	curl/curl.h	/^typedef size_t (*curl_read_callback)(char *buffer,$/;"	t
curl_realloc_callback	curl/curl.h	/^typedef void *(*curl_realloc_callback)(void *ptr, size_t size);$/;"	t
curl_resolver_start_callback	curl/curl.h	/^typedef int (*curl_resolver_start_callback)(void *resolver_state,$/;"	t
curl_seek_callback	curl/curl.h	/^typedef int (*curl_seek_callback)(void *instream,$/;"	t
curl_share_setopt	curl/curl.h	2896;"	d
curl_share_setopt	curl/typecheck-gcc.h	151;"	d
curl_slist	curl/curl.h	/^struct curl_slist {$/;"	s
curl_sockaddr	curl/curl.h	/^struct curl_sockaddr {$/;"	s
curl_socket_callback	curl/multi.h	/^typedef int (*curl_socket_callback)(CURL *easy,      \/* easy handle *\/$/;"	t
curl_socket_t	curl/curl.h	/^typedef SOCKET curl_socket_t;$/;"	t
curl_socket_t	curl/curl.h	/^typedef int curl_socket_t;$/;"	t
curl_socket_typedef	curl/curl.h	140;"	d
curl_socklen_t	curl/system.h	/^  typedef CURL_TYPEOF_CURL_SOCKLEN_T curl_socklen_t;$/;"	t
curl_sockopt_callback	curl/curl.h	/^typedef int (*curl_sockopt_callback)(void *clientp,$/;"	t
curl_sshkeycallback	curl/curl.h	/^  (*curl_sshkeycallback) (CURL *easy,     \/* easy handle *\/$/;"	t
curl_ssl_backend	curl/curl.h	/^} curl_ssl_backend;$/;"	t	typeref:struct:__anon30
curl_ssl_ctx_callback	curl/curl.h	/^typedef CURLcode (*curl_ssl_ctx_callback)(CURL *curl,    \/* easy handle *\/$/;"	t
curl_sslbackend	curl/curl.h	/^} curl_sslbackend;$/;"	t	typeref:enum:__anon8
curl_strdup_callback	curl/curl.h	/^typedef char *(*curl_strdup_callback)(const char *str);$/;"	t
curl_tlssessioninfo	curl/curl.h	/^struct curl_tlssessioninfo {$/;"	s
curl_trailer_callback	curl/curl.h	/^typedef int (*curl_trailer_callback)(struct curl_slist **list,$/;"	t
curl_unlock_function	curl/curl.h	/^typedef void (*curl_unlock_function)(CURL *handle,$/;"	t
curl_usessl	curl/curl.h	/^} curl_usessl;$/;"	t	typeref:enum:__anon17
curl_version_info_data	curl/curl.h	/^} curl_version_info_data;$/;"	t	typeref:struct:__anon39
curl_waitfd	curl/multi.h	/^struct curl_waitfd {$/;"	s
curl_write_callback	curl/curl.h	/^typedef size_t (*curl_write_callback)(char *buffer,$/;"	t
curl_xferinfo_callback	curl/curl.h	/^typedef int (*curl_xferinfo_callback)(void *clientp,$/;"	t
curlcheck_FILE	curl/typecheck-gcc.h	502;"	d
curlcheck_NULL	curl/typecheck-gcc.h	443;"	d
curlcheck_any_ptr	curl/typecheck-gcc.h	438;"	d
curlcheck_arr	curl/typecheck-gcc.h	453;"	d
curlcheck_cb_compatible	curl/typecheck-gcc.h	514;"	d
curlcheck_cb_data	curl/typecheck-gcc.h	497;"	d
curlcheck_cb_data_option	curl/typecheck-gcc.h	351;"	d
curlcheck_certinfo_info	curl/typecheck-gcc.h	415;"	d
curlcheck_conv_cb	curl/typecheck-gcc.h	677;"	d
curlcheck_conv_cb_option	curl/typecheck-gcc.h	345;"	d
curlcheck_debug_cb	curl/typecheck-gcc.h	614;"	d
curlcheck_double_info	curl/typecheck-gcc.h	403;"	d
curlcheck_error_buffer	curl/typecheck-gcc.h	486;"	d
curlcheck_ioctl_cb	curl/typecheck-gcc.h	562;"	d
curlcheck_long	curl/typecheck-gcc.h	466;"	d
curlcheck_long_info	curl/typecheck-gcc.h	399;"	d
curlcheck_long_option	curl/typecheck-gcc.h	247;"	d
curlcheck_off_t	curl/typecheck-gcc.h	481;"	d
curlcheck_off_t_info	curl/typecheck-gcc.h	422;"	d
curlcheck_off_t_option	curl/typecheck-gcc.h	250;"	d
curlcheck_opensocket_cb	curl/typecheck-gcc.h	586;"	d
curlcheck_postfields	curl/typecheck-gcc.h	507;"	d
curlcheck_postfields_option	curl/typecheck-gcc.h	373;"	d
curlcheck_progress_cb	curl/typecheck-gcc.h	603;"	d
curlcheck_ptr	curl/typecheck-gcc.h	447;"	d
curlcheck_read_cb	curl/typecheck-gcc.h	524;"	d
curlcheck_resolver_start_callback	curl/typecheck-gcc.h	519;"	d
curlcheck_seek_cb	curl/typecheck-gcc.h	690;"	d
curlcheck_slist_info	curl/typecheck-gcc.h	407;"	d
curlcheck_slist_option	curl/typecheck-gcc.h	379;"	d
curlcheck_socket_info	curl/typecheck-gcc.h	418;"	d
curlcheck_sockopt_cb	curl/typecheck-gcc.h	575;"	d
curlcheck_ssl_ctx_cb	curl/typecheck-gcc.h	644;"	d
curlcheck_string	curl/typecheck-gcc.h	458;"	d
curlcheck_string_info	curl/typecheck-gcc.h	395;"	d
curlcheck_string_option	curl/typecheck-gcc.h	254;"	d
curlcheck_tlssessioninfo_info	curl/typecheck-gcc.h	411;"	d
curlcheck_write_cb	curl/typecheck-gcc.h	542;"	d
curlcheck_write_cb_option	curl/typecheck-gcc.h	340;"	d
curlfiletype	curl/curl.h	/^} curlfiletype;$/;"	t	typeref:enum:__anon9
curliocmd	curl/curl.h	/^} curliocmd;$/;"	t	typeref:enum:__anon13
curlioerr	curl/curl.h	/^} curlioerr;$/;"	t	typeref:enum:__anon12
curlsocktype	curl/curl.h	/^} curlsocktype;$/;"	t	typeref:enum:__anon11
data	curl/curl.h	/^  char *data;$/;"	m	struct:curl_slist
data	curl/multi.h	/^  } data;$/;"	m	struct:CURLMsg	typeref:union:CURLMsg::__anon6
data	gsf_data_struct.h	/^    char data[0];$/;"	m	struct:_gsf_data_trans_pic
data	gsf_data_struct.h	/^    unsigned char  data[0];\/\/data$/;"	m	struct:_gsf_data_fmt
data	gsf_data_struct.h	/^    unsigned char data[];$/;"	m	struct:_gsf_data_packet
data	gsf_data_struct.h	/^    unsigned char data[];$/;"	m	struct:_gsf_data_talk_frame
data	sadp_pu_api.h	/^        char *data;                         \/\/SADP_MSG_SET:传入的结构体地址$/;"	m	struct:_sadp_pu_parm_s
data_fifo	fifolib.h	/^typedef struct data_fifo$/;"	s
datadir	curl/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	curl/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dbgmsg	BaseType.h	120;"	d
dbgmsg	BaseType.h	122;"	d
dbgmsg	BaseType.h	125;"	d
dc	main.c	/^    NET_DEV_DATACHN *dc;$/;"	m	struct:_dc_param_s_	file:
dc_param_t	main.c	/^}dc_param_t;$/;"	t	typeref:struct:_dc_param_s_	file:
dc_talk_hdl_t	main.c	/^}dc_talk_hdl_t;$/;"	t	typeref:struct:_dc_talk_hdl_s_	file:
dc_upg_hdl_t	main.c	/^}dc_upg_hdl_t;$/;"	t	typeref:struct:_dc_upg_hdl_s_	file:
deallocate	cJSON.c	/^    void (CJSON_CDECL *deallocate)(void *pointer);$/;"	m	struct:internal_hooks	file:
depth	cJSON.c	/^    size_t depth; \/* How deeply nested (in arrays\/objects) is the input at the current offset. *\/$/;"	m	struct:__anon2	file:
depth	cJSON.c	/^    size_t depth; \/* current nesting depth (for formatted printing) *\/$/;"	m	struct:__anon3	file:
dir	gsf_data_struct.h	/^    char  dir;   \/\/GSF_DATA_TRANS_DIR_E 消息方向(请求, 响应, NONE)$/;"	m	struct:_gsf_data_fmt
docdir	curl/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
down_type	gsf_data_struct.h	/^    int down_type;               \/* GSF_DATA_TRANS_DOWN_TYPE *\/$/;"	m	struct:_gsf_data_trans_down_req
dvidir	curl/Makefile	/^dvidir = ${docdir}$/;"	m
dw64TimeStamp	file.c	/^	DWORD64		dw64TimeStamp;			\/\/时间戳 $/;"	m	struct:_HI_FRAME_HEAD_S	file:
dwFrameNo	file.c	/^	DWORD		dwFrameNo;				\/\/帧号$/;"	m	struct:_HI_FRAME_HEAD_S	file:
dwFrameSize	file.c	/^	DWORD		dwFrameSize;			\/\/数据流长度$/;"	m	struct:_HI_FRAME_HEAD_S	file:
dwStatus	NET_DEV_STRUCT.H	/^    DWORD dwStatus;		\/\/端口映射状态：0- 未生效；1- 未生效：映射源端口与目的端口需一致；2- 未生效：映射端口号已被使用；3- 生效$/;"	m	struct:_NET_DEV_UPNP_PORT_STATE
dwTime	file.c	/^	DWORD		dwTime;					\/\/系统时间$/;"	m	struct:_HI_FRAME_HEAD_S	file:
easy_handle	curl/multi.h	/^  CURL *easy_handle; \/* the handle it concerns *\/$/;"	m	struct:CURLMsg
end_time	gsf_data_struct.h	/^    int end_time;                \/* 结束时间 *\/$/;"	m	struct:_gsf_data_trans_down_req
end_time	gsf_data_struct.h	/^    int end_time;       \/* 实际结束时间    *\/$/;"	m	struct:_gsf_data_trans_down_rsp
ensure	cJSON.c	/^static unsigned char* ensure(printbuffer * const p, size_t needed)$/;"	f	file:
eof	gsf_data_struct.h	/^    unsigned char eof;    \/* 结束包标记 GSF_DATA_PACKET_EOF_E *\/$/;"	m	struct:_gsf_data_packet
err	gsf_data_struct.h	/^    int  err;           \/* 错误码 *\/$/;"	m	struct:_gsf_data_trans_snap_rsp
err	gsf_data_struct.h	/^    int  err;$/;"	m	struct:_gsf_data_trans_talk_rsp
err	gsf_data_struct.h	/^    int  err;$/;"	m	struct:_gsf_data_trans_upg_rsp
err	gsf_data_struct.h	/^    int err;$/;"	m	struct:_gsf_data_trans_down_rsp
error	cJSON.c	/^} error;$/;"	t	typeref:struct:__anon1	file:
eth_name	sadp_pu_api.h	/^        char eth_name[NET_DEV_ETH_NAME_LEN];\/\/eth_name;$/;"	m	struct:_sadp_pu_parm_s
events	curl/multi.h	/^  short events;$/;"	m	struct:curl_waitfd
exec_prefix	curl/Makefile	/^exec_prefix = ${prefix}$/;"	m
exit	main.c	/^    BYTE exit;$/;"	m	struct:_dc_param_s_	file:
false	BaseType.h	193;"	d
false	cJSON.c	68;"	d	file:
false	cJSON.c	70;"	d	file:
family	curl/curl.h	/^  int family;$/;"	m	struct:curl_sockaddr
fd	curl/multi.h	/^  curl_socket_t fd;$/;"	m	struct:curl_waitfd
fd	main.c	/^    int fd;$/;"	m	struct:_gsf_hs_param	file:
features	curl/curl.h	/^  int features;             \/* bitmask, see defines below *\/$/;"	m	struct:__anon39
file_close	file.c	/^int file_close(int fd)$/;"	f
file_open	file.c	/^int file_open(char *file_name)$/;"	f
file_read	file.c	/^int file_read(int fd, char *buf, int size, int *fr_type)$/;"	f
filename	curl/curl.h	/^  char *filename;$/;"	m	struct:curl_fileinfo
filetype	curl/curl.h	/^  curlfiletype filetype;$/;"	m	struct:curl_fileinfo
flags	curl/curl.h	/^  long flags;                       \/* as defined below *\/$/;"	m	struct:curl_httppost
flags	curl/curl.h	/^  unsigned int flags;$/;"	m	struct:curl_fileinfo
format	cJSON.c	/^    cJSON_bool format; \/* is this print a formatted print *\/$/;"	m	struct:__anon3	file:
frame_element_t	main.c	/^} frame_element_t;$/;"	t	typeref:struct:__anon47	file:
frame_type_t	main.c	/^}frame_type_t;$/;"	t	typeref:enum:__anon43	file:
free_fn	cJSON.h	/^      void (CJSON_CDECL *free_fn)(void *ptr);$/;"	m	struct:cJSON_Hooks
frm	main.c	/^    int frm;$/;"	m	struct:_gsf_hs_param	file:
g_AudioProcess	main.c	/^GSFAUDIO_DATA_PROCESS g_AudioProcess=NULL;$/;"	v
g_AudioTlak	main.c	/^Data_FIFO *g_AudioTlak = NULL;$/;"	v
g_PicParam	main.c	/^static NET_DEV_MEDIA_PICPARAM g_PicParam[32][2];$/;"	v	file:
g_SubFrameBuf	main.c	/^static CHAR g_SubFrameBuf[MAX_FRAME_SIZE]; $/;"	v	file:
g_SubFrameLen	main.c	/^static INT32  g_SubFrameLen = 0; $/;"	v	file:
g_cSubFilebuf	main.c	/^static CHAR g_cSubFilebuf[MAX_SIZE]; $/;"	v	file:
g_cms_ip	main.c	/^static char g_cms_ip[64] = "106.15.206.68";$/;"	v	file:
g_cms_port	main.c	/^static int g_cms_port = 7000;$/;"	v	file:
g_enable_gsf	main.c	/^static int g_enable_gsf = 1;$/;"	v	file:
g_hevc_video	main.c	/^static int g_hevc_video = 0;$/;"	v	file:
g_iFrameRate	main.c	/^static int g_iFrameRate = 0;$/;"	v	file:
g_iGrpSizes	mempool.c	/^static int g_iGrpSizes[] = {0, MPOOL_SIZE_LV0, MPOOL_SIZE_LV1, MPOOL_SIZE_LV2,MPOOL_SIZE_LV3,$/;"	v	file:
g_iHeight	main.c	/^static int g_iHeight[32][2];$/;"	v	file:
g_iStreeStat	main.c	/^int g_iStreeStat = 0;$/;"	v
g_iWith	main.c	/^static int g_iWith[32][2];$/;"	v	file:
g_nSubCurfilebufsize	main.c	/^static INT32  g_nSubCurfilebufsize = 0;$/;"	v	file:
g_opt_longs	main.c	/^static struct option g_opt_longs[] =$/;"	v	typeref:struct:option	file:
g_pDataFiFo	main.c	/^static Data_FIFO * g_pDataFiFo[32][2];$/;"	v	file:
g_pMemPool	mempool.c	/^static MemPool * g_pMemPool=NULL;$/;"	v	file:
g_puid	main.c	/^static char g_puid[32] = "00000070061130000102";$/;"	v	file:
g_sdk_ops	main.c	/^static NET_DEV_SDK_FUNCS g_sdk_ops =$/;"	v	file:
get_array_item	cJSON.c	/^static cJSON* get_array_item(const cJSON *array, size_t index)$/;"	f	file:
get_decimal_point	cJSON.c	/^static unsigned char get_decimal_point(void)$/;"	f	file:
get_file_size	BaseType.h	/^static long get_file_size(char* filename)$/;"	f
get_local_time	BaseType.h	/^static void get_local_time(char* buffer)$/;"	f
get_object_item	cJSON.c	/^static cJSON *get_object_item(const cJSON * const object, const char * const name, const cJSON_bool case_sensitive)$/;"	f	file:
gettimeofday	BaseType.h	/^static INT32 gettimeofday(struct timeval *tv, void * pData)$/;"	f
gid	curl/curl.h	/^  int gid;$/;"	m	struct:curl_fileinfo
global_error	cJSON.c	/^static error global_error = { NULL, 0 };$/;"	v	file:
global_hooks	cJSON.c	/^static internal_hooks global_hooks = { internal_malloc, internal_free, internal_realloc };$/;"	v	file:
group	curl/curl.h	/^    char *group;$/;"	m	struct:curl_fileinfo::__anon10
gsf_alarm	main.c	/^int gsf_alarm(int iStat)$/;"	f
gsf_audio_cb	main.c	/^int gsf_audio_cb(char *_cBuf,int _iLen,char * FileName){$/;"	f
gsf_base64_encode	base64.c	/^int gsf_base64_encode(unsigned char *source, unsigned int sourcelen, char *target, unsigned int targetlen)$/;"	f
gsf_close_socket	gsf_net_api.c	/^int gsf_close_socket(int *pSock)$/;"	f
gsf_create_sock	gsf_net_api.c	/^int gsf_create_sock(GSF_SOCK_TYPE iType)$/;"	f
gsf_data_fmt_t	gsf_data_struct.h	/^}gsf_data_fmt_t;$/;"	t	typeref:struct:_gsf_data_fmt
gsf_data_packet_t	gsf_data_struct.h	/^}gsf_data_packet_t;$/;"	t	typeref:struct:_gsf_data_packet
gsf_data_rt_t	gsf_data_struct.h	/^}gsf_data_rt_t;$/;"	t	typeref:struct:_gsf_data_rt
gsf_data_talk_frame_t	gsf_data_struct.h	/^}gsf_data_talk_frame_t;$/;"	t	typeref:struct:_gsf_data_talk_frame
gsf_data_trans_down_req	gsf_data_struct.h	/^}gsf_data_trans_down_req;$/;"	t	typeref:struct:_gsf_data_trans_down_req
gsf_data_trans_down_rsp	gsf_data_struct.h	/^}gsf_data_trans_down_rsp;$/;"	t	typeref:struct:_gsf_data_trans_down_rsp
gsf_data_trans_down_speed	gsf_data_struct.h	/^}gsf_data_trans_down_speed;$/;"	t	typeref:struct:_gsf_data_trans_down_speed
gsf_data_trans_pic	gsf_data_struct.h	/^}gsf_data_trans_pic;$/;"	t	typeref:struct:_gsf_data_trans_pic
gsf_data_trans_snap_req	gsf_data_struct.h	/^}gsf_data_trans_snap_req;$/;"	t	typeref:struct:_gsf_data_trans_snap_req
gsf_data_trans_snap_rsp	gsf_data_struct.h	/^}gsf_data_trans_snap_rsp;$/;"	t	typeref:struct:_gsf_data_trans_snap_rsp
gsf_data_trans_talk_req	gsf_data_struct.h	/^}gsf_data_trans_talk_req;$/;"	t	typeref:struct:_gsf_data_trans_talk_req
gsf_data_trans_talk_rsp	gsf_data_struct.h	/^}gsf_data_trans_talk_rsp;$/;"	t	typeref:struct:_gsf_data_trans_talk_rsp
gsf_data_trans_upg_req	gsf_data_struct.h	/^}gsf_data_trans_upg_req;$/;"	t	typeref:struct:_gsf_data_trans_upg_req
gsf_data_trans_upg_rsp	gsf_data_struct.h	/^}gsf_data_trans_upg_rsp;$/;"	t	typeref:struct:_gsf_data_trans_upg_rsp
gsf_data_upg_percent_rsp	gsf_data_struct.h	/^}gsf_data_upg_percent_rsp;$/;"	t	typeref:struct:_gsf_data_upg_percent_rsp
gsf_frame_buffer	main.c	/^char gsf_frame_buffer[512*1024] = {0};                                          $/;"	v
gsf_frame_size	main.c	/^int gsf_frame_size = 0;                                                              $/;"	v
gsf_get_frame	main.c	/^int gsf_get_frame = 0;                                                              $/;"	v
gsf_get_frame_already	main.c	/^int gsf_get_frame_already = 0;$/;"	v
gsf_get_host_ip	gsf_net_api.c	/^int gsf_get_host_ip(int af, char *host)$/;"	f
gsf_get_sock_ip	gsf_net_api.c	/^int gsf_get_sock_ip(int sock)$/;"	f
gsf_get_sock_port	gsf_net_api.c	/^int gsf_get_sock_port(int sock)$/;"	f
gsf_hs_param_t	main.c	/^}gsf_hs_param_t;$/;"	t	typeref:struct:_gsf_hs_param	file:
gsf_http_post	main.c	/^int gsf_http_post(const char *ipv4, int port, int timeout_ms, char *outbuf, int len)$/;"	f
gsf_init	main.c	/^int gsf_init(char *pCmsIp,char *pUid,int iCmsPort,GSFAUDIO_DATA_PROCESS AudioProcess,int iFrameRate)$/;"	f
gsf_ip_a2n	gsf_net_api.c	/^unsigned long gsf_ip_a2n(char *pstrIP)$/;"	f
gsf_ip_n2a	gsf_net_api.c	/^unsigned long gsf_ip_n2a(unsigned long ip, char *ourIp, int len)$/;"	f
gsf_itoa	gsf_net_api.c	/^void   gsf_itoa(int   n,   char   s[])   $/;"	f
gsf_ping	gsf_net_api.c	/^int gsf_ping(char *ips, int timeout, int max_times)$/;"	f
gsf_postion	main.c	/^int gsf_postion(float x ,float y)$/;"	f
gsf_push	main.c	/^int gsf_push(int ichan,int istream,char *pData,int iLen,int iWith,int iHight,int iDataType)$/;"	f
gsf_sdk_demo_dc_close	main.c	/^gsf_sdk_demo_dc_close (NET_DEV_DATACHN *Dc)$/;"	f	file:
gsf_sdk_demo_dc_open	main.c	/^gsf_sdk_demo_dc_open (NET_DEV_DATACHN *Dc)$/;"	f	file:
gsf_sdk_demo_dc_recv	main.c	/^gsf_sdk_demo_dc_recv (NET_DEV_DATACHN *Dc, void *Data, int Size)$/;"	f	file:
gsf_sdk_demo_dc_talk_proc	main.c	/^int gsf_sdk_demo_dc_talk_proc(dc_param_t *param, gsf_data_fmt_t *pData)$/;"	f
gsf_sdk_demo_dc_talk_task	main.c	/^void *gsf_sdk_demo_dc_talk_task(void *arg)$/;"	f
gsf_sdk_demo_dc_upg_proc	main.c	/^int gsf_sdk_demo_dc_upg_proc(dc_param_t *param, gsf_data_fmt_t *pData)$/;"	f
gsf_sdk_demo_free_media	main.c	/^gsf_sdk_demo_free_media(GsfLiveMedia *media)$/;"	f	file:
gsf_sdk_demo_get_media_state	main.c	/^gsf_sdk_demo_get_media_state(GsfLiveMedia *media)$/;"	f	file:
gsf_sdk_demo_get_param	main.c	/^gsf_sdk_demo_get_param(NET_DEV_PEER *who, int chn, int pid, void *in, void *out)$/;"	f	file:
gsf_sdk_demo_get_sys_time	main.c	/^static int gsf_sdk_demo_get_sys_time(NET_DEV_TIME_EX *time_ex)$/;"	f	file:
gsf_sdk_demo_hs_stream_close	main.c	/^gsf_sdk_demo_hs_stream_close(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_hs_stream_lseek	main.c	/^gsf_sdk_demo_hs_stream_lseek(NET_DEV_MEDIA *m, unsigned ts)$/;"	f	file:
gsf_sdk_demo_hs_stream_open	main.c	/^gsf_sdk_demo_hs_stream_open(NET_DEV_MEDIA *m, int channel,$/;"	f	file:
gsf_sdk_demo_hs_stream_pause	main.c	/^gsf_sdk_demo_hs_stream_pause(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_hs_stream_play	main.c	/^gsf_sdk_demo_hs_stream_play(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_hs_stream_probe	main.c	/^gsf_sdk_demo_hs_stream_probe(int channel, int level,$/;"	f	file:
gsf_sdk_demo_hs_stream_pull	main.c	/^gsf_sdk_demo_hs_stream_pull(NET_DEV_MEDIA *m, void **_frm)$/;"	f	file:
gsf_sdk_demo_ls_media_thread	main.c	/^gsf_sdk_demo_ls_media_thread(void *data)$/;"	f	file:
gsf_sdk_demo_ls_ps_stream_close	main.c	/^gsf_sdk_demo_ls_ps_stream_close(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_ls_ps_stream_ctrl	main.c	/^gsf_sdk_demo_ls_ps_stream_ctrl(NET_DEV_MEDIA *m, unsigned Cmd, void *Data)$/;"	f	file:
gsf_sdk_demo_ls_ps_stream_open	main.c	/^gsf_sdk_demo_ls_ps_stream_open(NET_DEV_MEDIA *m, int Chnl, int Level)$/;"	f	file:
gsf_sdk_demo_ls_ps_stream_play	main.c	/^gsf_sdk_demo_ls_ps_stream_play(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_ls_ps_stream_probe	main.c	/^gsf_sdk_demo_ls_ps_stream_probe(int Chnl, int Level, void *MediaParamIn)$/;"	f	file:
gsf_sdk_demo_ls_read_file	main.c	/^gsf_sdk_demo_ls_read_file(int fd, NET_DEV_MEDIA_FRAME *fr,$/;"	f	file:
gsf_sdk_demo_ls_stream_close	main.c	/^gsf_sdk_demo_ls_stream_close(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_ls_stream_ctrl	main.c	/^gsf_sdk_demo_ls_stream_ctrl(NET_DEV_MEDIA *m, unsigned Cmd, void *Data)$/;"	f	file:
gsf_sdk_demo_ls_stream_open	main.c	/^gsf_sdk_demo_ls_stream_open(NET_DEV_MEDIA *m, int Chnl, int Level)$/;"	f	file:
gsf_sdk_demo_ls_stream_play	main.c	/^gsf_sdk_demo_ls_stream_play(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_ls_stream_probe	main.c	/^gsf_sdk_demo_ls_stream_probe(int Chnl, int Level, void *MediaParamIn)$/;"	f	file:
gsf_sdk_demo_new_media	main.c	/^gsf_sdk_demo_new_media(NET_DEV_MEDIA *m)$/;"	f	file:
gsf_sdk_demo_post_msg	main.c	/^gsf_sdk_demo_post_msg(NET_DEV_PEER *who, int chn, int pid, void *in, void *out)$/;"	f	file:
gsf_sdk_demo_print_usage	main.c	/^gsf_sdk_demo_print_usage(char *name)$/;"	f	file:
gsf_sdk_demo_print_version	main.c	/^gsf_sdk_demo_print_version(char *name)$/;"	f	file:
gsf_sdk_demo_set_media_state	main.c	/^gsf_sdk_demo_set_media_state(GsfLiveMedia *media, int state)$/;"	f	file:
gsf_sdk_demo_set_param	main.c	/^gsf_sdk_demo_set_param(NET_DEV_PEER *who, int chn, int pid, void *in, void *out)$/;"	f	file:
gsf_select	gsf_net_api.c	/^int gsf_select(int *fd_array, int fd_num, int fd_type, int time_out)$/;"	f
gsf_set_sock_attr	gsf_net_api.c	/^int gsf_set_sock_attr(int fd, int bReuseAddr, int nSndTimeO, int nRcvTimeO, int nSndBuf, int nRcvBuf)$/;"	f
gsf_set_sock_block	gsf_net_api.c	/^int gsf_set_sock_block(int nSock)$/;"	f
gsf_set_sock_noblock	gsf_net_api.c	/^int gsf_set_sock_noblock(int nSock)$/;"	f
gsf_tcp_block_accept	gsf_net_api.c	/^int gsf_tcp_block_accept(int fd, struct sockaddr *sa, int *salenptr)$/;"	f
gsf_tcp_noblock_accept	gsf_net_api.c	/^int gsf_tcp_noblock_accept(int fd, struct sockaddr *sa, int *salenptr, struct timeval * to)$/;"	f
gsf_tcp_noblock_connect	gsf_net_api.c	/^int gsf_tcp_noblock_connect(const char *localHost, const char *localServ, const char *dstHost, const char *dstServ, int timeout_ms)$/;"	f
gsf_tcp_noblock_mtu_send	gsf_net_api.c	/^int gsf_tcp_noblock_mtu_send(int hSock,unsigned char *pbuf,int size, int mtu)$/;"	f
gsf_tcp_noblock_recv	gsf_net_api.c	/^int gsf_tcp_noblock_recv(int sockfd, unsigned char *rcvBuf, int bufSize, int rcvSize, int timeOut)$/;"	f
gsf_tcp_noblock_send	gsf_net_api.c	/^int gsf_tcp_noblock_send(int hSock, unsigned char *pbuf,int size, int *pBlock, int timeOut)$/;"	f
h264_get_nalu	main.c	/^static int h264_get_nalu(nalu_t *nalu,char *srcbuf,int srcsize)$/;"	f	file:
hWnd	NET_DEV_STRUCT.H	/^            HWND    hWnd;   \/\/ HDC window handle$/;"	m	struct:__DC
hardlinks	curl/curl.h	/^  long int hardlinks;$/;"	m	struct:curl_fileinfo
hdl	main.c	/^	}hdl;$/;"	m	struct:_dc_param_s_	typeref:union:_dc_param_s_::__anon48	file:
hooks	cJSON.c	/^    internal_hooks hooks;$/;"	m	struct:__anon2	file:
hooks	cJSON.c	/^    internal_hooks hooks;$/;"	m	struct:__anon3	file:
hooks	cJSON.h	/^CJSON_PUBLIC(void) cJSON_InitHooks(cJSON_Hooks* hooks);$/;"	v
host	curl/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	curl/curl.h	/^  const char *host;         \/* OS\/host\/cpu\/machine when configured *\/$/;"	m	struct:__anon39
host_alias	curl/Makefile	/^host_alias = $/;"	m
host_cpu	curl/Makefile	/^host_cpu = x86_64$/;"	m
host_os	curl/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	curl/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	curl/Makefile	/^host_vendor = pc$/;"	m
htmldir	curl/Makefile	/^htmldir = ${docdir}$/;"	m
iconv_ver_num	curl/curl.h	/^  int iconv_ver_num;$/;"	m	struct:__anon39
id	curl/curl.h	/^  curl_sslbackend id;$/;"	m	struct:__anon30
id	gsf_data_struct.h	/^    short id;    \/\/GSF_DATA_TRANS_ID_E  消息ID（包含数据通道类型）$/;"	m	struct:_gsf_data_fmt
id	sadp_pu_api.h	/^        int  id;                            \/\/SADP_MSG_ID_E;       $/;"	m	struct:_sadp_pu_parm_s
includedir	curl/Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	curl/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
install_sh	curl/Makefile	/^install_sh = ${SHELL} \/home\/zhangguoqiang\/project\/ingenic_x2000-curl-7.70.0\/install-sh$/;"	m
install_sh_DATA	curl/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	curl/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	curl/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
int_t	BaseType.h	/^typedef intptr_t        int_t;$/;"	t
internal_free	cJSON.c	/^static void CJSON_CDECL internal_free(void *pointer)$/;"	f	file:
internal_free	cJSON.c	175;"	d	file:
internal_hooks	cJSON.c	/^typedef struct internal_hooks$/;"	s	file:
internal_hooks	cJSON.c	/^} internal_hooks;$/;"	t	typeref:struct:internal_hooks	file:
internal_malloc	cJSON.c	/^static void * CJSON_CDECL internal_malloc(size_t size)$/;"	f	file:
internal_malloc	cJSON.c	174;"	d	file:
internal_realloc	cJSON.c	/^static void * CJSON_CDECL internal_realloc(void *pointer, size_t size)$/;"	f	file:
internal_realloc	cJSON.c	176;"	d	file:
internals	curl/curl.h	/^  void *internals;$/;"	m	struct:curl_tlssessioninfo
isinf	cJSON.c	74;"	d	file:
isnan	cJSON.c	77;"	d	file:
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsArray(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsBool(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsFalse(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsInvalid(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsNull(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsNumber(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsObject(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsRaw(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsString(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(cJSON_bool) cJSON_IsTrue(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(char *) cJSON_GetStringValue(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(char *) cJSON_Print(const cJSON *item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(char *) cJSON_PrintUnformatted(const cJSON *item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(double) cJSON_GetNumberValue(const cJSON * const item);$/;"	v
item	cJSON.h	/^CJSON_PUBLIC(void) cJSON_Delete(cJSON *item);$/;"	v
item_count	gsf_data_struct.h	/^    int item_count;     \/* 文件个数       *\/$/;"	m	struct:_gsf_data_trans_down_rsp
json	cJSON.c	/^    const unsigned char *json;$/;"	m	struct:__anon1	file:
key	curl/curl.h	/^  const char *key; \/* points to a zero-terminated string encoded with base64$/;"	m	struct:curl_khkey
keytype	curl/curl.h	/^  enum curl_khtype keytype;$/;"	m	struct:curl_khkey	typeref:enum:curl_khkey::curl_khtype
leftSize	main.c	/^	int leftSize;$/;"	m	struct:_dc_upg_hdl_s_	file:
len	curl/curl.h	/^  size_t len;$/;"	m	struct:curl_khkey
length	cJSON.c	/^    size_t length;$/;"	m	struct:__anon2	file:
length	cJSON.c	/^    size_t length;$/;"	m	struct:__anon3	file:
libdir	curl/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	curl/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libext	curl/Makefile	/^libext = a$/;"	m
libidn	curl/curl.h	/^  const char *libidn;$/;"	m	struct:__anon39
libssh_version	curl/curl.h	/^  const char *libssh_version; \/* human readable string *\/$/;"	m	struct:__anon39
libz_version	curl/curl.h	/^  const char *libz_version; \/* human readable string *\/$/;"	m	struct:__anon39
localedir	curl/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	curl/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
m	main.c	/^    NET_DEV_MEDIA *m;$/;"	m	struct:_GsfLiveMedia	file:
m	main.c	/^    NET_DEV_MEDIA *m;$/;"	m	struct:_gsf_hs_param	file:
m_FrameProcess	main.c	/^	STREAM_DATA_PROCESS m_FrameProcess;$/;"	m	struct:_GsfLiveMedia	file:
m_FrameSeq	main.c	/^	int m_FrameSeq; \/\/帧????$/;"	m	struct:__anon47	file:
m_Lock	fifolib.h	/^	P2PLock m_Lock;$/;"	m	struct:data_fifo
m_ReleaseFun	fifolib.h	/^	DATA_RELEASE m_ReleaseFun;$/;"	m	struct:data_fifo
m_bData	main.c	/^	char m_bData[0];		\/\/ ??????$/;"	m	struct:__anon47	file:
m_bData	mempool.h	/^    char m_bData[8];		\/\/ 包数据$/;"	m	struct:__anon50
m_iBase	fifolib.h	/^	int m_iBase;			\/\/ fifo base指针$/;"	m	struct:data_fifo
m_iBind	main.c	/^	volatile int m_iBind;$/;"	m	struct:_GsfLiveMedia	file:
m_iByteSzie	fifolib.h	/^	int m_iByteSzie;$/;"	m	struct:data_fifo
m_iChan	main.c	/^	int m_iChan;$/;"	m	struct:_GsfLiveMedia	file:
m_iCnt	mempool.h	/^	INT32 m_iCnt;$/;"	m	struct:__anon51
m_iDataSize	main.c	/^	int m_iDataSize;		\/\/ ??实?????莩???$/;"	m	struct:__anon47	file:
m_iDataType	main.c	/^	int m_iDataType;		\/\/ ????????  $/;"	m	struct:__anon47	file:
m_iEnCodeType	main.c	/^    int m_iEnCodeType;       \/\/????????$/;"	m	struct:__anon47	file:
m_iFlag	fifolib.h	/^	int m_iFlag;         $/;"	m	struct:data_fifo
m_iFrameType	main.c	/^    int m_iFrameType;       \/\/帧????$/;"	m	struct:__anon47	file:
m_iHight	main.c	/^    int m_iHight;$/;"	m	struct:__anon47	file:
m_iMallocCnt	mempool.h	/^	INT32 m_iMallocCnt;$/;"	m	struct:__anon51
m_iMaxCnt	fifolib.h	/^	int m_iMaxCnt;          \/\/最大可缓存包数$/;"	m	struct:data_fifo
m_iMaxMemSize	mempool.h	/^	INT32 m_iMaxMemSize;$/;"	m	struct:__anon52
m_iMaxSize	mempool.h	/^	INT32 m_iMaxSize;$/;"	m	struct:__anon51
m_iMemSize	mempool.h	/^    INT32 m_iMemSize;$/;"	m	struct:__anon50
m_iPod	fifolib.h	/^	int m_iPod;      	$/;"	m	struct:data_fifo
m_iSeq	mempool.h	/^	INT32 m_iSeq;$/;"	m	struct:__anon52
m_iSizeAlloc	mempool.h	/^	INT32 m_iSizeAlloc;$/;"	m	struct:__anon52
m_iStat	main.c	/^    volatile int m_iStat;$/;"	m	struct:_GsfLiveMedia	file:
m_iStream	main.c	/^	int m_iStream;$/;"	m	struct:_GsfLiveMedia	file:
m_iTop	fifolib.h	/^	int m_iTop;             \/\/ fifo top指针$/;"	m	struct:data_fifo
m_iWith	main.c	/^    int m_iWith;$/;"	m	struct:__anon47	file:
m_nASeq	main.c	/^	unsigned short m_nASeq;$/;"	m	struct:_GsfLiveMedia	file:
m_nSeq	main.c	/^	unsigned short m_nSeq;$/;"	m	struct:_GsfLiveMedia	file:
m_nVSeq	main.c	/^	unsigned short m_nVSeq;$/;"	m	struct:_GsfLiveMedia	file:
m_pData	fifolib.h	/^	void *m_pData[0];$/;"	m	struct:data_fifo
m_pDataFiFo	main.c	/^	Data_FIFO *m_pDataFiFo;	$/;"	m	struct:_GsfLiveMedia	file:
m_pDataFiFo	main.c	/^	Data_FIFO *m_pDataFiFo;	$/;"	m	struct:_dc_param_s_	file:
m_pOwner	mempool.h	/^    void * m_pOwner;$/;"	m	struct:__anon50
m_ptMems	mempool.h	/^	MemPackage *m_ptMems[MPOOL_GRP_SIZE];$/;"	m	struct:__anon51
m_tGrps	mempool.h	/^	MemGroup m_tGrps[MPOOL_SIZE_LVS];$/;"	m	struct:__anon52
m_tLock	mempool.h	/^	P2PLock m_tLock;$/;"	m	struct:__anon51
m_tLock	mempool.h	/^	P2PLock m_tLock;$/;"	m	struct:__anon52
m_ullTimeStap	main.c	/^    unsigned long long m_ullTimeStap;  \/\/时????$/;"	m	struct:__anon47	file:
magic	gsf_data_struct.h	/^    int magic;      \/* 0x55aa *\/$/;"	m	struct:_gsf_data_trans_pic
main	main.c	/^INT32 main(INT32 argc, char **argv) $/;"	f
malloc_fn	cJSON.h	/^      void *(CJSON_CDECL *malloc_fn)(size_t sz);$/;"	m	struct:cJSON_Hooks
mandir	curl/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
minify_string	cJSON.c	/^static void minify_string(char **input, char **output) {$/;"	f	file:
mkdir_p	curl/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	curl/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
more	curl/curl.h	/^  struct curl_httppost *more;       \/* if one field name has more than one$/;"	m	struct:curl_httppost	typeref:struct:curl_httppost::curl_httppost
msg	curl/multi.h	/^  CURLMSG msg;       \/* what this message means *\/$/;"	m	struct:CURLMsg
mutex	main.c	/^    pthread_mutex_t mutex;$/;"	m	struct:_GsfLiveMedia	file:
mutex	main.c	/^    pthread_mutex_t mutex;$/;"	m	struct:_gsf_hs_param	file:
my_printf	main.c	/^static int my_printf(char* pszfmt, ...)$/;"	f	file:
nalu_s	main.c	/^typedef struct nalu_s$/;"	s	file:
nalu_t	main.c	/^}nalu_t;$/;"	t	typeref:struct:nalu_s	file:
nalu_type	main.c	/^	unsigned char  nalu_type;$/;"	m	struct:nalu_s	file:
nalubuf	main.c	/^	char  *nalubuf;$/;"	m	struct:nalu_s	file:
nalusize	main.c	/^	int   nalusize;$/;"	m	struct:nalu_s	file:
name	curl/curl.h	/^  char *name;                       \/* pointer to allocated name *\/$/;"	m	struct:curl_httppost
name	curl/curl.h	/^  const char *name;$/;"	m	struct:__anon30
namelength	curl/curl.h	/^  long namelength;                  \/* length of name length *\/$/;"	m	struct:curl_httppost
next	cJSON.h	/^    struct cJSON *next;$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
next	curl/curl.h	/^  struct curl_httppost *next;       \/* next entry in the list *\/$/;"	m	struct:curl_httppost	typeref:struct:curl_httppost::curl_httppost
next	curl/curl.h	/^  struct curl_slist *next;$/;"	m	struct:curl_slist	typeref:struct:curl_slist::curl_slist
next	main.c	/^    GsfLiveMedia *next;$/;"	m	struct:_GsfLiveMedia	file:
nghttp2_ver_num	curl/curl.h	/^  unsigned int nghttp2_ver_num; \/* Numeric nghttp2 version$/;"	m	struct:__anon39
nghttp2_version	curl/curl.h	/^  const char *nghttp2_version; \/* human readable string. *\/$/;"	m	struct:__anon39
no	gsf_data_struct.h	/^    unsigned int  no;     \/* 包序号   *\/$/;"	m	struct:_gsf_data_packet
no	gsf_data_struct.h	/^    unsigned int  no;    \/* 帧序号 *\/$/;"	m	struct:_gsf_data_talk_frame
noalloc	cJSON.c	/^    cJSON_bool noalloc;$/;"	m	struct:__anon3	file:
num_of_certs	curl/curl.h	/^  int num_of_certs;             \/* number of certificates with information *\/$/;"	m	struct:curl_certinfo
offset	cJSON.c	/^    size_t offset;$/;"	m	struct:__anon2	file:
offset	cJSON.c	/^    size_t offset;$/;"	m	struct:__anon3	file:
oldincludedir	curl/Makefile	/^oldincludedir = \/usr\/include$/;"	m
option	curl/curl.h	/^  CURLformoption option;$/;"	m	struct:curl_forms
parse_array	cJSON.c	/^static cJSON_bool parse_array(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	file:
parse_buffer	cJSON.c	/^} parse_buffer;$/;"	t	typeref:struct:__anon2	file:
parse_hex4	cJSON.c	/^static unsigned parse_hex4(const unsigned char * const input)$/;"	f	file:
parse_number	cJSON.c	/^static cJSON_bool parse_number(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	file:
parse_object	cJSON.c	/^static cJSON_bool parse_object(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	file:
parse_string	cJSON.c	/^static cJSON_bool parse_string(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	file:
parse_value	cJSON.c	/^static cJSON_bool parse_value(cJSON * const item, parse_buffer * const input_buffer)$/;"	f	file:
pass	sadp_pu_api.h	/^        char pass[NET_DEV_PASSWORD_LEN];    \/\/password$/;"	m	struct:_sadp_pu_parm_s
pcm_buf	main.c	/^void * pcm_buf = NULL;$/;"	v
pdfdir	curl/Makefile	/^pdfdir = ${docdir}$/;"	m
percent	gsf_data_struct.h	/^    int  percent;    \/* <0: 错误, 1 - 100: 进度值 *\/$/;"	m	struct:_gsf_data_upg_percent_rsp
percent	main.c	/^	int percent;$/;"	m	struct:_dc_upg_hdl_s_	file:
perm	curl/curl.h	/^    char *perm;$/;"	m	struct:curl_fileinfo::__anon10
perm	curl/curl.h	/^  unsigned int perm;$/;"	m	struct:curl_fileinfo
pkgdatadir	curl/Makefile	/^pkgdatadir = $(datadir)\/curl$/;"	m
pkginclude_HEADERS	curl/Makefile	/^pkginclude_HEADERS = \\$/;"	m
pkgincludedir	curl/Makefile	/^pkgincludedir = $(includedir)\/curl$/;"	m
pkglibdir	curl/Makefile	/^pkglibdir = $(libdir)\/curl$/;"	m
pkglibexecdir	curl/Makefile	/^pkglibexecdir = $(libexecdir)\/curl$/;"	m
position	cJSON.c	/^    size_t position;$/;"	m	struct:__anon1	file:
prefix	curl/Makefile	/^prefix = \/usr\/local$/;"	m
prev	cJSON.h	/^    struct cJSON *prev;$/;"	m	struct:cJSON	typeref:struct:cJSON::cJSON
print	cJSON.c	/^static unsigned char *print(const cJSON * const item, cJSON_bool format, const internal_hooks * const hooks)$/;"	f	file:
print_array	cJSON.c	/^static cJSON_bool print_array(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	file:
print_number	cJSON.c	/^static cJSON_bool print_number(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	file:
print_object	cJSON.c	/^static cJSON_bool print_object(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	file:
print_string	cJSON.c	/^static cJSON_bool print_string(const cJSON * const item, printbuffer * const p)$/;"	f	file:
print_string_ptr	cJSON.c	/^static cJSON_bool print_string_ptr(const unsigned char * const input, printbuffer * const output_buffer)$/;"	f	file:
print_value	cJSON.c	/^static cJSON_bool print_value(const cJSON * const item, printbuffer * const output_buffer)$/;"	f	file:
printbuffer	cJSON.c	/^} printbuffer;$/;"	t	typeref:struct:__anon3	file:
program_transform_name	curl/Makefile	/^program_transform_name = s,x,x,$/;"	m
property	gsf_data_struct.h	/^    char property[64];           \/* 文件句柄（下载单个文件时使用） *\/$/;"	m	struct:_gsf_data_trans_down_req
protocol	curl/curl.h	/^  int protocol;$/;"	m	struct:curl_sockaddr
protocols	curl/curl.h	/^  const char * const *protocols;$/;"	m	struct:__anon39
psdir	curl/Makefile	/^psdir = ${docdir}$/;"	m
pthread_cond_t	BaseType.h	/^   typedef HANDLE pthread_cond_t;$/;"	t
pthread_mutex_t	BaseType.h	/^   typedef HANDLE pthread_mutex_t;$/;"	t
pthread_t	BaseType.h	/^   typedef HANDLE pthread_t;$/;"	t
quality	gsf_data_struct.h	/^    int  quality;   \/* 质量 *\/$/;"	m	struct:_gsf_data_trans_snap_req
quic_version	curl/curl.h	/^  const char *quic_version;    \/* human readable quic (+ HTTP\/3) library +$/;"	m	struct:__anon39
read2	BaseType.h	220;"	d
read2	BaseType.h	224;"	d
readn	BaseType.h	/^static int readn(SOCKET connfd, void *vptr, int n)$/;"	f
readn2	BaseType.h	/^static int readn2(SOCKET connfd, void *vptr, int n)$/;"	f
readtimeout	BaseType.h	268;"	d
reallocate	cJSON.c	/^    void *(CJSON_CDECL *reallocate)(void *pointer, size_t size);$/;"	m	struct:internal_hooks	file:
rec_type	gsf_data_struct.h	/^    int rec_type;                \/* 文件类型 *\/$/;"	m	struct:_gsf_data_trans_down_req
repeat	BaseType.h	215;"	d
repeat2	BaseType.h	216;"	d
replace_item_in_object	cJSON.c	/^static cJSON_bool replace_item_in_object(cJSON *object, const char *string, cJSON *replacement, cJSON_bool case_sensitive)$/;"	f	file:
res	gsf_data_struct.h	/^    unsigned char res[2]; \/* 保留     *\/$/;"	m	struct:_gsf_data_packet
res	gsf_data_struct.h	/^    unsigned char res[3];\/* 保留 *\/$/;"	m	struct:_gsf_data_talk_frame
res	main.c	/^	int res;$/;"	m	struct:_dc_upg_hdl_s_	file:
res	main.c	/^	int res[3];$/;"	m	struct:_dc_talk_hdl_s_	file:
res	main.c	/^    BYTE res[2];$/;"	m	struct:_dc_param_s_	file:
result	curl/multi.h	/^    CURLcode result;   \/* return code for transfer *\/$/;"	m	union:CURLMsg::__anon6
revents	curl/multi.h	/^  short revents; \/* not supported yet *\/$/;"	m	struct:curl_waitfd
reverse	gsf_net_api.c	/^void  reverse(char   s[])   $/;"	f
runstatedir	curl/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
sadp_callback	main.c	/^int sadp_callback(struct _sadp_pu_notify_s *handle$/;"	f
sadp_pu_notify_t	sadp_pu_api.h	/^}sadp_pu_notify_t;$/;"	t	typeref:struct:_sadp_pu_notify_s
sadp_pu_parm_t	sadp_pu_api.h	/^}sadp_pu_parm_t;$/;"	t	typeref:struct:_sadp_pu_parm_s
sbindir	curl/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
seq	gsf_data_struct.h	/^    int   seq;   \/\/seq no;              消息序号(rsp消息直接复制req消息中的seq返回)$/;"	m	struct:_gsf_data_fmt
sharedstatedir	curl/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
showfilename	curl/curl.h	/^  char *showfilename;               \/* The file name to show. If not set, the$/;"	m	struct:curl_httppost
size	cJSON.h	/^CJSON_PUBLIC(void *) cJSON_malloc(size_t size);$/;"	v
size	curl/curl.h	/^  curl_off_t size;$/;"	m	struct:curl_fileinfo
size	gsf_data_struct.h	/^    int   size;  \/\/size                 消息大小$/;"	m	struct:_gsf_data_fmt
size	gsf_data_struct.h	/^    int size;       \/* size *\/$/;"	m	struct:_gsf_data_trans_pic
size	gsf_data_struct.h	/^    unsigned int  size;   \/* 包大小   *\/$/;"	m	struct:_gsf_data_packet
size	gsf_data_struct.h	/^    unsigned int  size;  \/* 帧大小 *\/$/;"	m	struct:_gsf_data_talk_frame
size	sadp_pu_api.h	/^        int  *size;                         \/\/SADP_MSG_SET:传入的结构体大小.    $/;"	m	struct:_sadp_pu_parm_s
skip_multiline_comment	cJSON.c	/^static void skip_multiline_comment(char **input)$/;"	f	file:
skip_oneline_comment	cJSON.c	/^static void skip_oneline_comment(char **input)$/;"	f	file:
skip_utf8_bom	cJSON.c	/^static parse_buffer *skip_utf8_bom(parse_buffer * const buffer)$/;"	f	file:
snprintf	BaseType.h	228;"	d
socktype	curl/curl.h	/^  int socktype;$/;"	m	struct:curl_sockaddr
speed	gsf_data_struct.h	/^    int speed;  \/* 1, 2, 4, 8 *\/$/;"	m	struct:_gsf_data_trans_down_speed
srcdir	curl/Makefile	/^srcdir = .$/;"	m
ssl_version	curl/curl.h	/^  const char *ssl_version;  \/* human readable string *\/$/;"	m	struct:__anon39
ssl_version_num	curl/curl.h	/^  long ssl_version_num;     \/* not used anymore, always 0 *\/$/;"	m	struct:__anon39
st_ch	gsf_data_struct.h	/^    int  st_ch;     \/* 子码流号 *\/$/;"	m	struct:_gsf_data_trans_snap_req
st_ch	gsf_data_struct.h	/^    int st_ch;                   \/* 码流类型 *\/$/;"	m	struct:_gsf_data_trans_down_req
state	main.c	/^    int state;$/;"	m	struct:_gsf_hs_param	file:
state	main.c	/^    volatile int state;$/;"	m	struct:_GsfLiveMedia	file:
static_strlen	cJSON.c	180;"	d	file:
stream_data_type_t	main.c	/^}stream_data_type_t;$/;"	t	typeref:enum:__anon44	file:
stream_thread	main.c	/^void *stream_thread(void *buf)$/;"	f
string	cJSON.h	/^    char *string;$/;"	m	struct:cJSON
strings	curl/curl.h	/^  } strings;$/;"	m	struct:curl_fileinfo	typeref:struct:curl_fileinfo::__anon10
subdir	curl/Makefile	/^subdir = include\/curl$/;"	m
subdirs	curl/Makefile	/^subdirs = $/;"	m
suffix_object	cJSON.c	/^static void suffix_object(cJSON *prev, cJSON *item)$/;"	f	file:
surface	NET_DEV_STRUCT.H	/^            void*   surface;\/\/ SDL Surface$/;"	m	struct:__DC
sysconfdir	curl/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sz_startcode	main.c	/^	unsigned char  sz_startcode;$/;"	m	struct:nalu_s	file:
talk	main.c	/^		dc_talk_hdl_t talk;$/;"	m	union:_dc_param_s_::__anon48	file:
talkHdl	main.c	/^	int talkHdl;$/;"	m	struct:_dc_talk_hdl_s_	file:
target	curl/curl.h	/^    char *target; \/* pointer to the target filename of a symlink *\/$/;"	m	struct:curl_fileinfo::__anon10
target_alias	curl/Makefile	/^target_alias = $/;"	m
thId	main.c	/^	pthread_t thId;$/;"	m	struct:_dc_talk_hdl_s_	file:
thread	main.c	/^pthread_t thread[2]; $/;"	v
thread_id	main.c	/^    pthread_t thread_id;$/;"	m	struct:_GsfLiveMedia	file:
thread_volatile	BaseType.h	191;"	d
time	curl/curl.h	/^    char *time;$/;"	m	struct:curl_fileinfo::__anon10
time	curl/curl.h	/^  time_t time; \/* always zero! *\/$/;"	m	struct:curl_fileinfo
top_build_prefix	curl/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_builddir	curl/Makefile	/^top_builddir = ..\/..$/;"	m
top_srcdir	curl/Makefile	/^top_srcdir = ..\/..$/;"	m
totalSize	main.c	/^	int totalSize;$/;"	m	struct:_dc_upg_hdl_s_	file:
total_size	gsf_data_struct.h	/^    int total_size;     \/* 估算总大小单位k *\/$/;"	m	struct:_gsf_data_trans_down_rsp
transform	curl/Makefile	/^transform = $(program_transform_name)$/;"	m
true	BaseType.h	192;"	d
true	cJSON.c	63;"	d	file:
true	cJSON.c	65;"	d	file:
ts	gsf_data_struct.h	/^    unsigned int  ts;    \/* 帧时间戳 ms *\/$/;"	m	struct:_gsf_data_talk_frame
ts	main.c	/^    int ts;$/;"	m	struct:_gsf_hs_param	file:
type	cJSON.h	/^    int type;$/;"	m	struct:cJSON
type	gsf_data_struct.h	/^    int  type;      \/\/ GSF_DATA_TRANS_TALK_TYPE_E$/;"	m	struct:_gsf_data_trans_talk_req
type	gsf_data_struct.h	/^    unsigned char type;   \/* 包类型 GSF_DATA_PACKET_TYPE_E *\/$/;"	m	struct:_gsf_data_packet
type	gsf_data_struct.h	/^    unsigned char type;  \/* 帧编码类型 NET_DEV_MEDIA_ENCODETYPE *\/$/;"	m	struct:_gsf_data_talk_frame
type	main.c	/^    DWORD type;$/;"	m	struct:_dc_param_s_	file:
uHeight	NET_DEV_STRUCT.H	/^  int uHeight;$/;"	m	struct:__InitInfo
uWidth	NET_DEV_STRUCT.H	/^  int uWidth;$/;"	m	struct:__InitInfo
uid	curl/curl.h	/^  int uid;$/;"	m	struct:curl_fileinfo
uint_t	BaseType.h	/^typedef uintptr_t       uint_t;$/;"	t
unAudioInfo	file.c	/^		HI_AUDIO_INFO_S	unAudioInfo;$/;"	m	union:_HI_FRAME_HEAD_S::__anon42	file:
unVideoInfo	file.c	/^		HI_VIDEO_INFO_S	unVideoInfo;$/;"	m	union:_HI_FRAME_HEAD_S::__anon42	file:
update_offset	cJSON.c	/^static void update_offset(printbuffer * const buffer)$/;"	f	file:
upg	main.c	/^		dc_upg_hdl_t  upg;$/;"	m	union:_dc_param_s_::__anon48	file:
upg_file_hdr	gsf_data_struct.h	/^    char upg_file_hdr[GSF_DATA_UPG_FILE_HDR_LEN];$/;"	m	struct:_gsf_data_trans_upg_req
upg_file_size	gsf_data_struct.h	/^    int  upg_file_size;$/;"	m	struct:_gsf_data_trans_upg_req
upload_picture	main.c	/^int upload_picture(char* FilePath)$/;"	f
url	gsf_data_struct.h	/^    char url[GSF_DATA_TRANS_URL_LEN]; \/* trans:\/\/ip:port\/s1\/s2\/3s\/s4 *\/$/;"	m	struct:_gsf_data_rt
user	curl/curl.h	/^    char *user;$/;"	m	struct:curl_fileinfo::__anon10
user	sadp_pu_api.h	/^        char user[NET_DEV_USERNAME_LEN];    \/\/user name$/;"	m	struct:_sadp_pu_parm_s
user_arg	sadp_pu_api.h	/^    void *user_arg;$/;"	m	struct:_sadp_pu_notify_s
userp	curl/curl.h	/^  void *userp;                      \/* custom pointer used for$/;"	m	struct:curl_httppost
utc_time_count	main.c	/^static unsigned utc_time_count = 0;$/;"	v	file:
utf16_literal_to_utf8	cJSON.c	/^static unsigned char utf16_literal_to_utf8(const unsigned char * const input_pointer, const unsigned char * const input_end, unsigned char **output_pointer)$/;"	f	file:
valid	main.c	/^    BYTE valid;$/;"	m	struct:_dc_param_s_	file:
value	curl/curl.h	/^  const char     *value;$/;"	m	struct:curl_forms
valuedouble	cJSON.h	/^    double valuedouble;$/;"	m	struct:cJSON
valueint	cJSON.h	/^    int valueint;$/;"	m	struct:cJSON
valuestring	cJSON.h	/^    char *valuestring;$/;"	m	struct:cJSON
version	curl/curl.h	/^  const char *version;      \/* LIBCURL_VERSION *\/$/;"	m	struct:__anon39
version_num	curl/curl.h	/^  unsigned int version_num; \/* LIBCURL_VERSION_NUM *\/$/;"	m	struct:__anon39
video_encoder_t	main.c	/^} video_encoder_t;$/;"	t	typeref:enum:__anon45	file:
wFrameFlag	file.c	/^	WORD		wFrameFlag;				\/\/0x3448 magic data$/;"	m	struct:_HI_FRAME_HEAD_S	file:
wFrameType	file.c	/^	BYTE		wFrameType;				\/\/I-0x7 p--0x8 b--0xb A--0xa$/;"	m	struct:_HI_FRAME_HEAD_S	file:
wImageHeight	file.c	/^	WORD				wImageHeight;	\/\/图像高度$/;"	m	struct:_HI_VIDEO_INFO_S	file:
wImageWidth	file.c	/^	WORD				wImageWidth;	\/\/图像宽度$/;"	m	struct:_HI_VIDEO_INFO_S	file:
whatever	curl/multi.h	/^    void *whatever;    \/* message-specific data *\/$/;"	m	union:CURLMsg::__anon6
write2	BaseType.h	219;"	d
write2	BaseType.h	223;"	d
write_log_file	BaseType.h	/^static void write_log_file(char* buffer, unsigned buf_size)$/;"	f
writen	BaseType.h	/^static int writen(SOCKET connfd, void *vptr, int n)$/;"	f
writev	BaseType.h	/^static int writev(SOCKET s, const struct  iovec* vector, int count)$/;"	f
