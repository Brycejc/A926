#ifndef _DT_INGENIC_PINCTL_H__
#define _DT_INGENIC_PINCTL_H__
#include <dt-bindings/gpio/gpio.h>

#define PINCTL_FUNCTION0	0
#define PINCTL_FUNCTION1	1
#define PINCTL_FUNCTION2	2
#define PINCTL_FUNCTION3	3
#define PINCTL_FUNCHILVL	4
#define PINCTL_FUNCLOLVL	5
#define PINCTL_FUNCINPUT	6
#define PINCTL_FUNCTIONS	7

#define PINCTL_CFG_TYPES	1

#define PINCTL_CFG_BAIC_DISABLE			1
#define PINCTL_CFG_HIGH_IMPEDANCE		2
#define PINCTL_CFG_PULL_DOWN			3
#define PINCTL_CFG_PULL_PIN_DEFAULT		4
#define PINCTL_CFG_PULL_UP			5
#define PINCTL_CFG_STRENGTH			9
#define PINCTL_CFG_FILTER			10
#define PINCTL_CFG_SLEW_RATE			17

#define PINCTL_CFG_TYPE_MSK	0xFFFF
#define PINCTL_CFGVAL_SFT	16
#define PINCTL_CFGVAL_MSK	(0xFFFF << PINCTL_CFGVAL_SFT)

#define PINCFG_PACK(type, value)	(((value) << PINCTL_CFGVAL_SFT) | type)
#define PINCFG_UNPACK_TYPE(cfg)		((cfg) & PINCTL_CFG_TYPE_MSK)
#define PINCFG_UNPACK_VALUE(cfg)	(((cfg) & PINCTL_CFGVAL_MSK) >> \
						PINCTL_CFGVAL_SFT)

#define PINCTL_NOBIAS		((0 << PINCTL_CFGVAL_SFT) | PINCTL_CFG_PULL)
#define PINCTL_PULLEN		((1 << PINCTL_CFGVAL_SFT) | PINCTL_CFG_PULL)

#define INGENIC_GPIO_NOBIAS		0
#define INGENIC_GPIO_PULLEN		1
#define INGENIC_GPIO_BIAS_MASK		2
#define INGENIC_GPIO_BIAS_SFT		0

#define INGENIC_GPIO_PULL(x)		(((x) >> INGENIC_GPIO_BIAS_SFT) & INGENIC_GPIO_BIAS_MASK)

#endif /*_DT_INGENIC_PINCTL_H__*/
